Search.setIndex({"docnames": ["_autosummary/sdynpy", "_autosummary/sdynpy.core", "_autosummary/sdynpy.core.sdynpy_array", "_autosummary/sdynpy.core.sdynpy_array.SdynpyArray", "_autosummary/sdynpy.core.sdynpy_colors", "_autosummary/sdynpy.core.sdynpy_coordinate", "_autosummary/sdynpy.core.sdynpy_coordinate.CoordinateArray", "_autosummary/sdynpy.core.sdynpy_coordinate.coordinate_array", "_autosummary/sdynpy.core.sdynpy_coordinate.create_coordinate_string", "_autosummary/sdynpy.core.sdynpy_coordinate.from_matlab_cellstr", "_autosummary/sdynpy.core.sdynpy_coordinate.from_nodelist", "_autosummary/sdynpy.core.sdynpy_coordinate.outer_product", "_autosummary/sdynpy.core.sdynpy_coordinate.parse_coordinate_string", "_autosummary/sdynpy.core.sdynpy_data", "_autosummary/sdynpy.core.sdynpy_data.CPSDPlot", "_autosummary/sdynpy.core.sdynpy_data.CoherenceArray", "_autosummary/sdynpy.core.sdynpy_data.ComplexType", "_autosummary/sdynpy.core.sdynpy_data.CorrelationArray", "_autosummary/sdynpy.core.sdynpy_data.FunctionTypes", "_autosummary/sdynpy.core.sdynpy_data.GUIPlot", "_autosummary/sdynpy.core.sdynpy_data.MPLCanvas", "_autosummary/sdynpy.core.sdynpy_data.MPLMultiCanvas", "_autosummary/sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray", "_autosummary/sdynpy.core.sdynpy_data.MultipleCoherenceArray", "_autosummary/sdynpy.core.sdynpy_data.NDDataArray", "_autosummary/sdynpy.core.sdynpy_data.PowerSpectralDensityArray", "_autosummary/sdynpy.core.sdynpy_data.PowerSpectrumArray", "_autosummary/sdynpy.core.sdynpy_data.SpecificDataType", "_autosummary/sdynpy.core.sdynpy_data.SpectrumArray", "_autosummary/sdynpy.core.sdynpy_data.TimeHistoryArray", "_autosummary/sdynpy.core.sdynpy_data.TransferFunctionArray", "_autosummary/sdynpy.core.sdynpy_data.TransmissibilityArray", "_autosummary/sdynpy.core.sdynpy_data.TypeQual", "_autosummary/sdynpy.core.sdynpy_data.data_array", "_autosummary/sdynpy.core.sdynpy_data.frf_from_time_data", "_autosummary/sdynpy.core.sdynpy_data.from_imat_struct", "_autosummary/sdynpy.core.sdynpy_data.from_uff", "_autosummary/sdynpy.core.sdynpy_data.from_unv", "_autosummary/sdynpy.core.sdynpy_data.load", "_autosummary/sdynpy.core.sdynpy_geometry", "_autosummary/sdynpy.core.sdynpy_geometry.CoordinateSystemArray", "_autosummary/sdynpy.core.sdynpy_geometry.DeflectionShapePlotter", "_autosummary/sdynpy.core.sdynpy_geometry.ElementArray", "_autosummary/sdynpy.core.sdynpy_geometry.Geometry", "_autosummary/sdynpy.core.sdynpy_geometry.GeometryPlotter", "_autosummary/sdynpy.core.sdynpy_geometry.NodeArray", "_autosummary/sdynpy.core.sdynpy_geometry.ShapePlotter", "_autosummary/sdynpy.core.sdynpy_geometry.TracelineArray", "_autosummary/sdynpy.core.sdynpy_geometry.TransientPlotter", "_autosummary/sdynpy.core.sdynpy_geometry.coordinate_system_array", "_autosummary/sdynpy.core.sdynpy_geometry.element_array", "_autosummary/sdynpy.core.sdynpy_geometry.from_exodus", "_autosummary/sdynpy.core.sdynpy_geometry.from_imat_struct", "_autosummary/sdynpy.core.sdynpy_geometry.from_uff", "_autosummary/sdynpy.core.sdynpy_geometry.from_unv", "_autosummary/sdynpy.core.sdynpy_geometry.global_coord", "_autosummary/sdynpy.core.sdynpy_geometry.global_deflection", "_autosummary/sdynpy.core.sdynpy_geometry.id_map", "_autosummary/sdynpy.core.sdynpy_geometry.load", "_autosummary/sdynpy.core.sdynpy_geometry.local_coord", "_autosummary/sdynpy.core.sdynpy_geometry.node_array", "_autosummary/sdynpy.core.sdynpy_geometry.split_list", "_autosummary/sdynpy.core.sdynpy_geometry.traceline_array", "_autosummary/sdynpy.core.sdynpy_matrix", "_autosummary/sdynpy.core.sdynpy_matrix.Matrix", "_autosummary/sdynpy.core.sdynpy_matrix.matrix", "_autosummary/sdynpy.core.sdynpy_shape", "_autosummary/sdynpy.core.sdynpy_shape.ShapeArray", "_autosummary/sdynpy.core.sdynpy_shape.concatenate_dofs", "_autosummary/sdynpy.core.sdynpy_shape.from_exodus", "_autosummary/sdynpy.core.sdynpy_shape.from_imat_struct", "_autosummary/sdynpy.core.sdynpy_shape.from_unv", "_autosummary/sdynpy.core.sdynpy_shape.mac", "_autosummary/sdynpy.core.sdynpy_shape.overlay_shapes", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_check", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_error", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_fix_node_orientation", "_autosummary/sdynpy.core.sdynpy_shape.shape_alignment", "_autosummary/sdynpy.core.sdynpy_shape.shape_array", "_autosummary/sdynpy.core.sdynpy_shape.shape_comparison_table", "_autosummary/sdynpy.core.sdynpy_system", "_autosummary/sdynpy.core.sdynpy_system.System", "_autosummary/sdynpy.core.sdynpy_system.substructure_by_position", "_autosummary/sdynpy.demo", "_autosummary/sdynpy.demo.beam_airplane", "_autosummary/sdynpy.demo.beam_airplane.create_models", "_autosummary/sdynpy.demo.beam_plate", "_autosummary/sdynpy.demo.beam_plate.create_models", "_autosummary/sdynpy.doc", "_autosummary/sdynpy.doc.sdynpy_latex", "_autosummary/sdynpy.doc.sdynpy_latex.create_latex_summary", "_autosummary/sdynpy.doc.sdynpy_ppt", "_autosummary/sdynpy.doc.sdynpy_ppt.add_geometry_overview_slide", "_autosummary/sdynpy.doc.sdynpy_ppt.add_section_header_slide", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_animation_slides", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_comparison_animation_slides", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_comparison_overview_slide", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_overview_slide", "_autosummary/sdynpy.doc.sdynpy_ppt.add_title_slide", "_autosummary/sdynpy.doc.sdynpy_ppt.create_summary_pptx", "_autosummary/sdynpy.doc.sdynpy_ppt.position_placeholder", "_autosummary/sdynpy.fem", "_autosummary/sdynpy.fem.sdynpy_beam", "_autosummary/sdynpy.fem.sdynpy_beam.beamkm", "_autosummary/sdynpy.fem.sdynpy_beam.beamkm_2d", "_autosummary/sdynpy.fem.sdynpy_beam.rect_beam_props", "_autosummary/sdynpy.fem.sdynpy_dof", "_autosummary/sdynpy.fem.sdynpy_dof.by_condition_number", "_autosummary/sdynpy.fem.sdynpy_dof.by_effective_independence", "_autosummary/sdynpy.fem.sdynpy_exodus", "_autosummary/sdynpy.fem.sdynpy_exodus.Exodus", "_autosummary/sdynpy.fem.sdynpy_exodus.ExodusError", "_autosummary/sdynpy.fem.sdynpy_exodus.ExodusInMemory", "_autosummary/sdynpy.fem.sdynpy_exodus.extract_sharp_edges", "_autosummary/sdynpy.fem.sdynpy_exodus.face_connectivity", "_autosummary/sdynpy.fem.sdynpy_exodus.mesh_triangulation_array", "_autosummary/sdynpy.fem.sdynpy_exodus.reduce_exodus_to_surfaces", "_autosummary/sdynpy.fem.sdynpy_exodus.subfield", "_autosummary/sdynpy.fem.sdynpy_shaker", "_autosummary/sdynpy.fem.sdynpy_shaker.Shaker4DoF", "_autosummary/sdynpy.fileio", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_modal_data", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_rattlesnake_output", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_system_id_data", "_autosummary/sdynpy.fileio.sdynpy_uff", "_autosummary/sdynpy.fileio.sdynpy_uff.UFFReadError", "_autosummary/sdynpy.fileio.sdynpy_uff.parse_uff_line", "_autosummary/sdynpy.fileio.sdynpy_uff.parse_uff_lines", "_autosummary/sdynpy.fileio.sdynpy_uff.readuff", "_autosummary/sdynpy.fileio.sdynpy_uff.readunv", "_autosummary/sdynpy.fileio.sdynpy_uff.write_uff_line", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.is_abscissa_even", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.is_abscissa_even", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.read", "_autosummary/sdynpy.fileio.sdynpy_vic", "_autosummary/sdynpy.fileio.sdynpy_vic.camera_matrix_from_vic_parameters", "_autosummary/sdynpy.fileio.sdynpy_vic.extract_vic_cal_parameters", "_autosummary/sdynpy.fileio.sdynpy_vic.get_vic_camera_parameters", "_autosummary/sdynpy.fileio.sdynpy_vic.matrix_from_bryant_angles", "_autosummary/sdynpy.fileio.sdynpy_vic.read_vic3D_mat_files", "_autosummary/sdynpy.fileio.sdynpy_vic.vic_angles_from_matrix", "_autosummary/sdynpy.modal", "_autosummary/sdynpy.modal.sdynpy_ccmif", "_autosummary/sdynpy.modal.sdynpy_ccmif.ColoredCMIF", "_autosummary/sdynpy.modal.sdynpy_ccmif.PropertiesDialog", "_autosummary/sdynpy.modal.sdynpy_modeshape", "_autosummary/sdynpy.modal.sdynpy_modeshape.ShapeSelection", "_autosummary/sdynpy.modal.sdynpy_modeshape.compute_residues", "_autosummary/sdynpy.modal.sdynpy_modeshape.compute_shapes", "_autosummary/sdynpy.modal.sdynpy_polypy", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy_GUI", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy_Stability", "_autosummary/sdynpy.modal.sdynpy_signal_processing_gui", "_autosummary/sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI", "_autosummary/sdynpy.modal.sdynpy_smac", "_autosummary/sdynpy.modal.sdynpy_smac.AddRootDialog", "_autosummary/sdynpy.modal.sdynpy_smac.AutoFitTypes", "_autosummary/sdynpy.modal.sdynpy_smac.ConvergenceException", "_autosummary/sdynpy.modal.sdynpy_smac.SMAC", "_autosummary/sdynpy.modal.sdynpy_smac.SMAC_GUI", "_autosummary/sdynpy.modal.sdynpy_smac.correlation_coefficient", "_autosummary/sdynpy.signal_processing", "_autosummary/sdynpy.signal_processing.sdynpy_camera", "_autosummary/sdynpy.signal_processing.sdynpy_camera.calibration_linear_estimate", "_autosummary/sdynpy.signal_processing.sdynpy_camera.camera_derivative_matrix", "_autosummary/sdynpy.signal_processing.sdynpy_camera.camera_matrix_from_image", "_autosummary/sdynpy.signal_processing.sdynpy_camera.compute_pixel_displacement", "_autosummary/sdynpy.signal_processing.sdynpy_camera.compute_pixel_position", "_autosummary/sdynpy.signal_processing.sdynpy_camera.decomposeP", "_autosummary/sdynpy.signal_processing.sdynpy_camera.distort_points", "_autosummary/sdynpy.signal_processing.sdynpy_camera.homogeneous_coordinates", "_autosummary/sdynpy.signal_processing.sdynpy_camera.optimize_calibration", "_autosummary/sdynpy.signal_processing.sdynpy_camera.point_on_pixel", "_autosummary/sdynpy.signal_processing.sdynpy_camera.reconstruct_scene_from_calibration_parameters", "_autosummary/sdynpy.signal_processing.sdynpy_camera.unhomogeneous_coordinates", "_autosummary/sdynpy.signal_processing.sdynpy_complex", "_autosummary/sdynpy.signal_processing.sdynpy_complex.collapse_complex_to_real", "_autosummary/sdynpy.signal_processing.sdynpy_correlation", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.frac", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.mac", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.matrix_plot", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.msf", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.orthog", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.trac", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_autospectra", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_coherence", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_from_coh_phs", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_phase", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_to_time_history", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.dB_pow", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.match_coherence_phase", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.plot_asds", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.plot_cpsd_error", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.rms", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.rms_csd", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.shaped_psd", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.trace", "_autosummary/sdynpy.signal_processing.sdynpy_frf", "_autosummary/sdynpy.signal_processing.sdynpy_frf.delay_signal", "_autosummary/sdynpy.signal_processing.sdynpy_frf.fft2frf", "_autosummary/sdynpy.signal_processing.sdynpy_frf.modes2frf", "_autosummary/sdynpy.signal_processing.sdynpy_frf.plot", "_autosummary/sdynpy.signal_processing.sdynpy_frf.sysmat2frf", "_autosummary/sdynpy.signal_processing.sdynpy_frf.timedata2frf", "_autosummary/sdynpy.signal_processing.sdynpy_generator", "_autosummary/sdynpy.signal_processing.sdynpy_generator.burst_random", "_autosummary/sdynpy.signal_processing.sdynpy_generator.chirp", "_autosummary/sdynpy.signal_processing.sdynpy_generator.pseudorandom", "_autosummary/sdynpy.signal_processing.sdynpy_generator.pulse", "_autosummary/sdynpy.signal_processing.sdynpy_generator.ramp_envelope", "_autosummary/sdynpy.signal_processing.sdynpy_generator.random", "_autosummary/sdynpy.signal_processing.sdynpy_generator.sine", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_fixed_angle", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_free_angle", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_fit", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.create_cone", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cylinder_fit", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_line", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_plane", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cone_fixed_angle", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cylinder", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_line_point_cloud", "_autosummary/sdynpy.signal_processing.sdynpy_harmonic", "_autosummary/sdynpy.signal_processing.sdynpy_harmonic.harmonic_mag_phase", "_autosummary/sdynpy.signal_processing.sdynpy_integration", "_autosummary/sdynpy.signal_processing.sdynpy_integration.MCK_incomplete_to_StateSpace", "_autosummary/sdynpy.signal_processing.sdynpy_integration.MCK_to_StateSpace", "_autosummary/sdynpy.signal_processing.sdynpy_integration.frequency_domain_differentiation", "_autosummary/sdynpy.signal_processing.sdynpy_integration.integrate_MCK", "_autosummary/sdynpy.signal_processing.sdynpy_integration.integrate_modes", "_autosummary/sdynpy.signal_processing.sdynpy_integration.modal_parameters_to_MCK", "_autosummary/sdynpy.signal_processing.sdynpy_rotation", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.R", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.cross_mat", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.cross_mat_vectorized", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.lstsq_rigid_transform", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.matrix_to_rodrigues", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.quaternion_to_rotation_matrix", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.rodrigues_to_matrix", "bibliography", "example_problems/airplane_modal_test", "example_problems/craig_bampton_substructuring", "example_problems/mimo_random_vibration_control", "example_problems/model_reduction/model_reduction", "example_problems/rattlesnake_demonstration", "example_problems/transient_fem_analysis", "example_problems/transmission_simulator", "examples", "index", "modal_tutorials", "modal_tutorials/Modal_01_What_is_Modal_Analysis/Modal_01_What_is_Modal_Analysis", "modal_tutorials/Modal_02_Basics_of_Vibrations/Modal_02_Basics_of_Vibrations", "modal_tutorials/Modal_03_Multi_DoF_Vibrations/Modal_03_Multi_DoF_Vibrations", "modal_tutorials/Modal_04_Modal_Analysis/Modal_04_Modal_Analysis", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05_Experimental_Modal_Analysis", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05a_Computing_FRF_from_Time_Data", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05b_Types_of_Excitation", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05c_Selecting_Response_and_Measurement_DoFs", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05d_Data_Quality_Checks", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05e_Fitting_Modes_to_FRF", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05f_Comparing_Test_and_Analysis", "modules", "sdynpy_showcase", "usage"], "filenames": ["_autosummary/sdynpy.rst", "_autosummary/sdynpy.core.rst", "_autosummary/sdynpy.core.sdynpy_array.rst", "_autosummary/sdynpy.core.sdynpy_array.SdynpyArray.rst", "_autosummary/sdynpy.core.sdynpy_colors.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.CoordinateArray.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.coordinate_array.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.create_coordinate_string.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.from_matlab_cellstr.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.from_nodelist.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.outer_product.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.parse_coordinate_string.rst", "_autosummary/sdynpy.core.sdynpy_data.rst", "_autosummary/sdynpy.core.sdynpy_data.CPSDPlot.rst", "_autosummary/sdynpy.core.sdynpy_data.CoherenceArray.rst", "_autosummary/sdynpy.core.sdynpy_data.ComplexType.rst", "_autosummary/sdynpy.core.sdynpy_data.CorrelationArray.rst", "_autosummary/sdynpy.core.sdynpy_data.FunctionTypes.rst", "_autosummary/sdynpy.core.sdynpy_data.GUIPlot.rst", "_autosummary/sdynpy.core.sdynpy_data.MPLCanvas.rst", "_autosummary/sdynpy.core.sdynpy_data.MPLMultiCanvas.rst", "_autosummary/sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray.rst", "_autosummary/sdynpy.core.sdynpy_data.MultipleCoherenceArray.rst", "_autosummary/sdynpy.core.sdynpy_data.NDDataArray.rst", "_autosummary/sdynpy.core.sdynpy_data.PowerSpectralDensityArray.rst", "_autosummary/sdynpy.core.sdynpy_data.PowerSpectrumArray.rst", "_autosummary/sdynpy.core.sdynpy_data.SpecificDataType.rst", "_autosummary/sdynpy.core.sdynpy_data.SpectrumArray.rst", "_autosummary/sdynpy.core.sdynpy_data.TimeHistoryArray.rst", "_autosummary/sdynpy.core.sdynpy_data.TransferFunctionArray.rst", "_autosummary/sdynpy.core.sdynpy_data.TransmissibilityArray.rst", "_autosummary/sdynpy.core.sdynpy_data.TypeQual.rst", "_autosummary/sdynpy.core.sdynpy_data.data_array.rst", "_autosummary/sdynpy.core.sdynpy_data.frf_from_time_data.rst", "_autosummary/sdynpy.core.sdynpy_data.from_imat_struct.rst", "_autosummary/sdynpy.core.sdynpy_data.from_uff.rst", "_autosummary/sdynpy.core.sdynpy_data.from_unv.rst", "_autosummary/sdynpy.core.sdynpy_data.load.rst", "_autosummary/sdynpy.core.sdynpy_geometry.rst", "_autosummary/sdynpy.core.sdynpy_geometry.CoordinateSystemArray.rst", "_autosummary/sdynpy.core.sdynpy_geometry.DeflectionShapePlotter.rst", "_autosummary/sdynpy.core.sdynpy_geometry.ElementArray.rst", "_autosummary/sdynpy.core.sdynpy_geometry.Geometry.rst", "_autosummary/sdynpy.core.sdynpy_geometry.GeometryPlotter.rst", "_autosummary/sdynpy.core.sdynpy_geometry.NodeArray.rst", "_autosummary/sdynpy.core.sdynpy_geometry.ShapePlotter.rst", "_autosummary/sdynpy.core.sdynpy_geometry.TracelineArray.rst", "_autosummary/sdynpy.core.sdynpy_geometry.TransientPlotter.rst", "_autosummary/sdynpy.core.sdynpy_geometry.coordinate_system_array.rst", "_autosummary/sdynpy.core.sdynpy_geometry.element_array.rst", "_autosummary/sdynpy.core.sdynpy_geometry.from_exodus.rst", "_autosummary/sdynpy.core.sdynpy_geometry.from_imat_struct.rst", "_autosummary/sdynpy.core.sdynpy_geometry.from_uff.rst", "_autosummary/sdynpy.core.sdynpy_geometry.from_unv.rst", "_autosummary/sdynpy.core.sdynpy_geometry.global_coord.rst", "_autosummary/sdynpy.core.sdynpy_geometry.global_deflection.rst", "_autosummary/sdynpy.core.sdynpy_geometry.id_map.rst", "_autosummary/sdynpy.core.sdynpy_geometry.load.rst", "_autosummary/sdynpy.core.sdynpy_geometry.local_coord.rst", "_autosummary/sdynpy.core.sdynpy_geometry.node_array.rst", "_autosummary/sdynpy.core.sdynpy_geometry.split_list.rst", "_autosummary/sdynpy.core.sdynpy_geometry.traceline_array.rst", "_autosummary/sdynpy.core.sdynpy_matrix.rst", "_autosummary/sdynpy.core.sdynpy_matrix.Matrix.rst", "_autosummary/sdynpy.core.sdynpy_matrix.matrix.rst", "_autosummary/sdynpy.core.sdynpy_shape.rst", "_autosummary/sdynpy.core.sdynpy_shape.ShapeArray.rst", "_autosummary/sdynpy.core.sdynpy_shape.concatenate_dofs.rst", "_autosummary/sdynpy.core.sdynpy_shape.from_exodus.rst", "_autosummary/sdynpy.core.sdynpy_shape.from_imat_struct.rst", "_autosummary/sdynpy.core.sdynpy_shape.from_unv.rst", "_autosummary/sdynpy.core.sdynpy_shape.mac.rst", "_autosummary/sdynpy.core.sdynpy_shape.overlay_shapes.rst", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_check.rst", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_error.rst", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_fix_node_orientation.rst", "_autosummary/sdynpy.core.sdynpy_shape.shape_alignment.rst", "_autosummary/sdynpy.core.sdynpy_shape.shape_array.rst", "_autosummary/sdynpy.core.sdynpy_shape.shape_comparison_table.rst", "_autosummary/sdynpy.core.sdynpy_system.rst", "_autosummary/sdynpy.core.sdynpy_system.System.rst", "_autosummary/sdynpy.core.sdynpy_system.substructure_by_position.rst", "_autosummary/sdynpy.demo.rst", "_autosummary/sdynpy.demo.beam_airplane.rst", "_autosummary/sdynpy.demo.beam_airplane.create_models.rst", "_autosummary/sdynpy.demo.beam_plate.rst", "_autosummary/sdynpy.demo.beam_plate.create_models.rst", "_autosummary/sdynpy.doc.rst", "_autosummary/sdynpy.doc.sdynpy_latex.rst", "_autosummary/sdynpy.doc.sdynpy_latex.create_latex_summary.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_geometry_overview_slide.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_section_header_slide.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_animation_slides.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_comparison_animation_slides.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_comparison_overview_slide.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_overview_slide.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_title_slide.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.create_summary_pptx.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.position_placeholder.rst", "_autosummary/sdynpy.fem.rst", "_autosummary/sdynpy.fem.sdynpy_beam.rst", "_autosummary/sdynpy.fem.sdynpy_beam.beamkm.rst", "_autosummary/sdynpy.fem.sdynpy_beam.beamkm_2d.rst", "_autosummary/sdynpy.fem.sdynpy_beam.rect_beam_props.rst", "_autosummary/sdynpy.fem.sdynpy_dof.rst", "_autosummary/sdynpy.fem.sdynpy_dof.by_condition_number.rst", "_autosummary/sdynpy.fem.sdynpy_dof.by_effective_independence.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.Exodus.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.ExodusError.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.ExodusInMemory.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.extract_sharp_edges.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.face_connectivity.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.mesh_triangulation_array.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.reduce_exodus_to_surfaces.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.subfield.rst", "_autosummary/sdynpy.fem.sdynpy_shaker.rst", "_autosummary/sdynpy.fem.sdynpy_shaker.Shaker4DoF.rst", "_autosummary/sdynpy.fileio.rst", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.rst", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_modal_data.rst", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_rattlesnake_output.rst", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_system_id_data.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.UFFReadError.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.parse_uff_line.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.parse_uff_lines.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.readuff.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.readunv.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.write_uff_line.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.is_abscissa_even.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.is_abscissa_even.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.read.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.camera_matrix_from_vic_parameters.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.extract_vic_cal_parameters.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.get_vic_camera_parameters.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.matrix_from_bryant_angles.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.read_vic3D_mat_files.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.vic_angles_from_matrix.rst", "_autosummary/sdynpy.modal.rst", "_autosummary/sdynpy.modal.sdynpy_ccmif.rst", "_autosummary/sdynpy.modal.sdynpy_ccmif.ColoredCMIF.rst", "_autosummary/sdynpy.modal.sdynpy_ccmif.PropertiesDialog.rst", "_autosummary/sdynpy.modal.sdynpy_modeshape.rst", "_autosummary/sdynpy.modal.sdynpy_modeshape.ShapeSelection.rst", "_autosummary/sdynpy.modal.sdynpy_modeshape.compute_residues.rst", "_autosummary/sdynpy.modal.sdynpy_modeshape.compute_shapes.rst", "_autosummary/sdynpy.modal.sdynpy_polypy.rst", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy.rst", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy_GUI.rst", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy_Stability.rst", "_autosummary/sdynpy.modal.sdynpy_signal_processing_gui.rst", "_autosummary/sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.rst", "_autosummary/sdynpy.modal.sdynpy_smac.rst", "_autosummary/sdynpy.modal.sdynpy_smac.AddRootDialog.rst", "_autosummary/sdynpy.modal.sdynpy_smac.AutoFitTypes.rst", "_autosummary/sdynpy.modal.sdynpy_smac.ConvergenceException.rst", "_autosummary/sdynpy.modal.sdynpy_smac.SMAC.rst", "_autosummary/sdynpy.modal.sdynpy_smac.SMAC_GUI.rst", "_autosummary/sdynpy.modal.sdynpy_smac.correlation_coefficient.rst", "_autosummary/sdynpy.signal_processing.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.calibration_linear_estimate.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.camera_derivative_matrix.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.camera_matrix_from_image.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.compute_pixel_displacement.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.compute_pixel_position.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.decomposeP.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.distort_points.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.homogeneous_coordinates.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.optimize_calibration.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.point_on_pixel.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.reconstruct_scene_from_calibration_parameters.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.unhomogeneous_coordinates.rst", "_autosummary/sdynpy.signal_processing.sdynpy_complex.rst", "_autosummary/sdynpy.signal_processing.sdynpy_complex.collapse_complex_to_real.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.frac.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.mac.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.matrix_plot.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.msf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.orthog.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.trac.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_autospectra.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_coherence.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_from_coh_phs.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_phase.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_to_time_history.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.dB_pow.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.match_coherence_phase.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.plot_asds.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.plot_cpsd_error.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.rms.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.rms_csd.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.shaped_psd.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.trace.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.delay_signal.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.fft2frf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.modes2frf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.plot.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.sysmat2frf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.timedata2frf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.burst_random.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.chirp.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.pseudorandom.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.pulse.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.ramp_envelope.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.random.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.sine.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_fixed_angle.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_free_angle.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_fit.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.create_cone.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cylinder_fit.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_line.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_plane.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cone_fixed_angle.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cylinder.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_line_point_cloud.rst", "_autosummary/sdynpy.signal_processing.sdynpy_harmonic.rst", "_autosummary/sdynpy.signal_processing.sdynpy_harmonic.harmonic_mag_phase.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.MCK_incomplete_to_StateSpace.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.MCK_to_StateSpace.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.frequency_domain_differentiation.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.integrate_MCK.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.integrate_modes.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.modal_parameters_to_MCK.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.R.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.cross_mat.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.cross_mat_vectorized.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.lstsq_rigid_transform.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.matrix_to_rodrigues.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.quaternion_to_rotation_matrix.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.rodrigues_to_matrix.rst", "bibliography.rst", "example_problems/airplane_modal_test.rst", "example_problems/craig_bampton_substructuring.rst", "example_problems/mimo_random_vibration_control.rst", "example_problems/model_reduction/model_reduction.ipynb", "example_problems/rattlesnake_demonstration.rst", "example_problems/transient_fem_analysis.rst", "example_problems/transmission_simulator.rst", "examples.rst", "index.rst", "modal_tutorials.rst", "modal_tutorials/Modal_01_What_is_Modal_Analysis/Modal_01_What_is_Modal_Analysis.ipynb", "modal_tutorials/Modal_02_Basics_of_Vibrations/Modal_02_Basics_of_Vibrations.ipynb", "modal_tutorials/Modal_03_Multi_DoF_Vibrations/Modal_03_Multi_DoF_Vibrations.ipynb", "modal_tutorials/Modal_04_Modal_Analysis/Modal_04_Modal_Analysis.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05_Experimental_Modal_Analysis.rst", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05a_Computing_FRF_from_Time_Data.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05b_Types_of_Excitation.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05c_Selecting_Response_and_Measurement_DoFs.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05d_Data_Quality_Checks.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05e_Fitting_Modes_to_FRF.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05f_Comparing_Test_and_Analysis.ipynb", "modules.rst", "sdynpy_showcase.rst", "usage.rst"], "titles": ["sdynpy", "sdynpy.core", "sdynpy.core.sdynpy_array", "sdynpy.core.sdynpy_array.SdynpyArray", "sdynpy.core.sdynpy_colors", "sdynpy.core.sdynpy_coordinate", "sdynpy.core.sdynpy_coordinate.CoordinateArray", "sdynpy.core.sdynpy_coordinate.coordinate_array", "sdynpy.core.sdynpy_coordinate.create_coordinate_string", "sdynpy.core.sdynpy_coordinate.from_matlab_cellstr", "sdynpy.core.sdynpy_coordinate.from_nodelist", "sdynpy.core.sdynpy_coordinate.outer_product", "sdynpy.core.sdynpy_coordinate.parse_coordinate_string", "sdynpy.core.sdynpy_data", "sdynpy.core.sdynpy_data.CPSDPlot", "sdynpy.core.sdynpy_data.CoherenceArray", "sdynpy.core.sdynpy_data.ComplexType", "sdynpy.core.sdynpy_data.CorrelationArray", "sdynpy.core.sdynpy_data.FunctionTypes", "sdynpy.core.sdynpy_data.GUIPlot", "sdynpy.core.sdynpy_data.MPLCanvas", "sdynpy.core.sdynpy_data.MPLMultiCanvas", "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray", "sdynpy.core.sdynpy_data.MultipleCoherenceArray", "sdynpy.core.sdynpy_data.NDDataArray", "sdynpy.core.sdynpy_data.PowerSpectralDensityArray", "sdynpy.core.sdynpy_data.PowerSpectrumArray", "sdynpy.core.sdynpy_data.SpecificDataType", "sdynpy.core.sdynpy_data.SpectrumArray", "sdynpy.core.sdynpy_data.TimeHistoryArray", "sdynpy.core.sdynpy_data.TransferFunctionArray", "sdynpy.core.sdynpy_data.TransmissibilityArray", "sdynpy.core.sdynpy_data.TypeQual", "sdynpy.core.sdynpy_data.data_array", "sdynpy.core.sdynpy_data.frf_from_time_data", "sdynpy.core.sdynpy_data.from_imat_struct", "sdynpy.core.sdynpy_data.from_uff", "sdynpy.core.sdynpy_data.from_unv", "sdynpy.core.sdynpy_data.load", "sdynpy.core.sdynpy_geometry", "sdynpy.core.sdynpy_geometry.CoordinateSystemArray", "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter", "sdynpy.core.sdynpy_geometry.ElementArray", "sdynpy.core.sdynpy_geometry.Geometry", "sdynpy.core.sdynpy_geometry.GeometryPlotter", "sdynpy.core.sdynpy_geometry.NodeArray", "sdynpy.core.sdynpy_geometry.ShapePlotter", "sdynpy.core.sdynpy_geometry.TracelineArray", "sdynpy.core.sdynpy_geometry.TransientPlotter", "sdynpy.core.sdynpy_geometry.coordinate_system_array", "sdynpy.core.sdynpy_geometry.element_array", "sdynpy.core.sdynpy_geometry.from_exodus", "sdynpy.core.sdynpy_geometry.from_imat_struct", "sdynpy.core.sdynpy_geometry.from_uff", "sdynpy.core.sdynpy_geometry.from_unv", "sdynpy.core.sdynpy_geometry.global_coord", "sdynpy.core.sdynpy_geometry.global_deflection", "sdynpy.core.sdynpy_geometry.id_map", "sdynpy.core.sdynpy_geometry.load", "sdynpy.core.sdynpy_geometry.local_coord", "sdynpy.core.sdynpy_geometry.node_array", "sdynpy.core.sdynpy_geometry.split_list", "sdynpy.core.sdynpy_geometry.traceline_array", "sdynpy.core.sdynpy_matrix", "sdynpy.core.sdynpy_matrix.Matrix", "sdynpy.core.sdynpy_matrix.matrix", "sdynpy.core.sdynpy_shape", "sdynpy.core.sdynpy_shape.ShapeArray", "sdynpy.core.sdynpy_shape.concatenate_dofs", "sdynpy.core.sdynpy_shape.from_exodus", "sdynpy.core.sdynpy_shape.from_imat_struct", "sdynpy.core.sdynpy_shape.from_unv", "sdynpy.core.sdynpy_shape.mac", "sdynpy.core.sdynpy_shape.overlay_shapes", "sdynpy.core.sdynpy_shape.rigid_body_check", "sdynpy.core.sdynpy_shape.rigid_body_error", "sdynpy.core.sdynpy_shape.rigid_body_fix_node_orientation", "sdynpy.core.sdynpy_shape.shape_alignment", "sdynpy.core.sdynpy_shape.shape_array", "sdynpy.core.sdynpy_shape.shape_comparison_table", "sdynpy.core.sdynpy_system", "sdynpy.core.sdynpy_system.System", "sdynpy.core.sdynpy_system.substructure_by_position", "sdynpy.demo", "sdynpy.demo.beam_airplane", "sdynpy.demo.beam_airplane.create_models", "sdynpy.demo.beam_plate", "sdynpy.demo.beam_plate.create_models", "sdynpy.doc", "sdynpy.doc.sdynpy_latex", "sdynpy.doc.sdynpy_latex.create_latex_summary", "sdynpy.doc.sdynpy_ppt", "sdynpy.doc.sdynpy_ppt.add_geometry_overview_slide", "sdynpy.doc.sdynpy_ppt.add_section_header_slide", "sdynpy.doc.sdynpy_ppt.add_shape_animation_slides", "sdynpy.doc.sdynpy_ppt.add_shape_comparison_animation_slides", "sdynpy.doc.sdynpy_ppt.add_shape_comparison_overview_slide", "sdynpy.doc.sdynpy_ppt.add_shape_overview_slide", "sdynpy.doc.sdynpy_ppt.add_title_slide", "sdynpy.doc.sdynpy_ppt.create_summary_pptx", "sdynpy.doc.sdynpy_ppt.position_placeholder", "sdynpy.fem", "sdynpy.fem.sdynpy_beam", "sdynpy.fem.sdynpy_beam.beamkm", "sdynpy.fem.sdynpy_beam.beamkm_2d", "sdynpy.fem.sdynpy_beam.rect_beam_props", "sdynpy.fem.sdynpy_dof", "sdynpy.fem.sdynpy_dof.by_condition_number", "sdynpy.fem.sdynpy_dof.by_effective_independence", "sdynpy.fem.sdynpy_exodus", "sdynpy.fem.sdynpy_exodus.Exodus", "sdynpy.fem.sdynpy_exodus.ExodusError", "sdynpy.fem.sdynpy_exodus.ExodusInMemory", "sdynpy.fem.sdynpy_exodus.extract_sharp_edges", "sdynpy.fem.sdynpy_exodus.face_connectivity", "sdynpy.fem.sdynpy_exodus.mesh_triangulation_array", "sdynpy.fem.sdynpy_exodus.reduce_exodus_to_surfaces", "sdynpy.fem.sdynpy_exodus.subfield", "sdynpy.fem.sdynpy_shaker", "sdynpy.fem.sdynpy_shaker.Shaker4DoF", "sdynpy.fileio", "sdynpy.fileio.sdynpy_rattlesnake", "sdynpy.fileio.sdynpy_rattlesnake.read_modal_data", "sdynpy.fileio.sdynpy_rattlesnake.read_rattlesnake_output", "sdynpy.fileio.sdynpy_rattlesnake.read_system_id_data", "sdynpy.fileio.sdynpy_uff", "sdynpy.fileio.sdynpy_uff.UFFReadError", "sdynpy.fileio.sdynpy_uff.parse_uff_line", "sdynpy.fileio.sdynpy_uff.parse_uff_lines", "sdynpy.fileio.sdynpy_uff.readuff", "sdynpy.fileio.sdynpy_uff.readunv", "sdynpy.fileio.sdynpy_uff.write_uff_line", "sdynpy.fileio.sdynpy_uff_datasets", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.is_abscissa_even", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.is_abscissa_even", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.read", "sdynpy.fileio.sdynpy_vic", "sdynpy.fileio.sdynpy_vic.camera_matrix_from_vic_parameters", "sdynpy.fileio.sdynpy_vic.extract_vic_cal_parameters", "sdynpy.fileio.sdynpy_vic.get_vic_camera_parameters", "sdynpy.fileio.sdynpy_vic.matrix_from_bryant_angles", "sdynpy.fileio.sdynpy_vic.read_vic3D_mat_files", "sdynpy.fileio.sdynpy_vic.vic_angles_from_matrix", "sdynpy.modal", "sdynpy.modal.sdynpy_ccmif", "sdynpy.modal.sdynpy_ccmif.ColoredCMIF", "sdynpy.modal.sdynpy_ccmif.PropertiesDialog", "sdynpy.modal.sdynpy_modeshape", "sdynpy.modal.sdynpy_modeshape.ShapeSelection", "sdynpy.modal.sdynpy_modeshape.compute_residues", "sdynpy.modal.sdynpy_modeshape.compute_shapes", "sdynpy.modal.sdynpy_polypy", "sdynpy.modal.sdynpy_polypy.PolyPy", "sdynpy.modal.sdynpy_polypy.PolyPy_GUI", "sdynpy.modal.sdynpy_polypy.PolyPy_Stability", "sdynpy.modal.sdynpy_signal_processing_gui", "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI", "sdynpy.modal.sdynpy_smac", "sdynpy.modal.sdynpy_smac.AddRootDialog", "sdynpy.modal.sdynpy_smac.AutoFitTypes", "sdynpy.modal.sdynpy_smac.ConvergenceException", "sdynpy.modal.sdynpy_smac.SMAC", "sdynpy.modal.sdynpy_smac.SMAC_GUI", "sdynpy.modal.sdynpy_smac.correlation_coefficient", "sdynpy.signal_processing", "sdynpy.signal_processing.sdynpy_camera", "sdynpy.signal_processing.sdynpy_camera.calibration_linear_estimate", "sdynpy.signal_processing.sdynpy_camera.camera_derivative_matrix", "sdynpy.signal_processing.sdynpy_camera.camera_matrix_from_image", "sdynpy.signal_processing.sdynpy_camera.compute_pixel_displacement", "sdynpy.signal_processing.sdynpy_camera.compute_pixel_position", "sdynpy.signal_processing.sdynpy_camera.decomposeP", "sdynpy.signal_processing.sdynpy_camera.distort_points", "sdynpy.signal_processing.sdynpy_camera.homogeneous_coordinates", "sdynpy.signal_processing.sdynpy_camera.optimize_calibration", "sdynpy.signal_processing.sdynpy_camera.point_on_pixel", "sdynpy.signal_processing.sdynpy_camera.reconstruct_scene_from_calibration_parameters", "sdynpy.signal_processing.sdynpy_camera.unhomogeneous_coordinates", "sdynpy.signal_processing.sdynpy_complex", "sdynpy.signal_processing.sdynpy_complex.collapse_complex_to_real", "sdynpy.signal_processing.sdynpy_correlation", "sdynpy.signal_processing.sdynpy_correlation.frac", "sdynpy.signal_processing.sdynpy_correlation.mac", "sdynpy.signal_processing.sdynpy_correlation.matrix_plot", "sdynpy.signal_processing.sdynpy_correlation.msf", "sdynpy.signal_processing.sdynpy_correlation.orthog", "sdynpy.signal_processing.sdynpy_correlation.trac", "sdynpy.signal_processing.sdynpy_cpsd", "sdynpy.signal_processing.sdynpy_cpsd.cpsd", "sdynpy.signal_processing.sdynpy_cpsd.cpsd_autospectra", "sdynpy.signal_processing.sdynpy_cpsd.cpsd_coherence", "sdynpy.signal_processing.sdynpy_cpsd.cpsd_from_coh_phs", "sdynpy.signal_processing.sdynpy_cpsd.cpsd_phase", "sdynpy.signal_processing.sdynpy_cpsd.cpsd_to_time_history", "sdynpy.signal_processing.sdynpy_cpsd.dB_pow", "sdynpy.signal_processing.sdynpy_cpsd.match_coherence_phase", "sdynpy.signal_processing.sdynpy_cpsd.plot_asds", "sdynpy.signal_processing.sdynpy_cpsd.plot_cpsd_error", "sdynpy.signal_processing.sdynpy_cpsd.rms", "sdynpy.signal_processing.sdynpy_cpsd.rms_csd", "sdynpy.signal_processing.sdynpy_cpsd.shaped_psd", "sdynpy.signal_processing.sdynpy_cpsd.trace", "sdynpy.signal_processing.sdynpy_frf", "sdynpy.signal_processing.sdynpy_frf.delay_signal", "sdynpy.signal_processing.sdynpy_frf.fft2frf", "sdynpy.signal_processing.sdynpy_frf.modes2frf", "sdynpy.signal_processing.sdynpy_frf.plot", "sdynpy.signal_processing.sdynpy_frf.sysmat2frf", "sdynpy.signal_processing.sdynpy_frf.timedata2frf", "sdynpy.signal_processing.sdynpy_generator", "sdynpy.signal_processing.sdynpy_generator.burst_random", "sdynpy.signal_processing.sdynpy_generator.chirp", "sdynpy.signal_processing.sdynpy_generator.pseudorandom", "sdynpy.signal_processing.sdynpy_generator.pulse", "sdynpy.signal_processing.sdynpy_generator.ramp_envelope", "sdynpy.signal_processing.sdynpy_generator.random", "sdynpy.signal_processing.sdynpy_generator.sine", "sdynpy.signal_processing.sdynpy_geometry_fitting", "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_fixed_angle", "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_free_angle", "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_fit", "sdynpy.signal_processing.sdynpy_geometry_fitting.create_cone", "sdynpy.signal_processing.sdynpy_geometry_fitting.cylinder_fit", "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_line", "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_plane", "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cone_fixed_angle", "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cylinder", "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_line_point_cloud", "sdynpy.signal_processing.sdynpy_harmonic", "sdynpy.signal_processing.sdynpy_harmonic.harmonic_mag_phase", "sdynpy.signal_processing.sdynpy_integration", "sdynpy.signal_processing.sdynpy_integration.MCK_incomplete_to_StateSpace", "sdynpy.signal_processing.sdynpy_integration.MCK_to_StateSpace", "sdynpy.signal_processing.sdynpy_integration.frequency_domain_differentiation", "sdynpy.signal_processing.sdynpy_integration.integrate_MCK", "sdynpy.signal_processing.sdynpy_integration.integrate_modes", "sdynpy.signal_processing.sdynpy_integration.modal_parameters_to_MCK", "sdynpy.signal_processing.sdynpy_rotation", "sdynpy.signal_processing.sdynpy_rotation.R", "sdynpy.signal_processing.sdynpy_rotation.cross_mat", "sdynpy.signal_processing.sdynpy_rotation.cross_mat_vectorized", "sdynpy.signal_processing.sdynpy_rotation.lstsq_rigid_transform", "sdynpy.signal_processing.sdynpy_rotation.matrix_to_rodrigues", "sdynpy.signal_processing.sdynpy_rotation.quaternion_to_rotation_matrix", "sdynpy.signal_processing.sdynpy_rotation.rodrigues_to_matrix", "Bibliography", "Airplane Modal Test", "Substructuring using Craig-Bampton Superelements from Sierra/SD", "MIMO Random Vibration", "Model Reduction", "Rattlesnake Demonstration", "Analysis of Transient Finite Element Results", "Substructuring using the Transmission Simulator Method", "SDynpy Examples", "Welcome to SDynPy\u2019s documentation!", "Modal Tutorials", "Modal Tutorial 01: What is modal analysis?", "Modal Tutorial 02: Basics of Vibrations", "Modal Tutorial 03: Vibrations of Systems with Multiple Degrees of Freedom", "Modal Tutorial 04: Modal Analysis", "Modal Tutorial 05: Experimental Modal Analysis", "Modal Tutorial 05 Part A: Computing Frequency Response from Time Data", "Modal Tutorial 05 Part B: Types of Excitation for Experimental Modal Analysis", "Modal Tutorial 05 Part C: Selecting Excitation and Response Degrees of Freedom", "Modal Tutorial 05 Part D: Data Quality Checks", "Modal Tutorial 05 Part E: Fitting Modes to Data", "Modal Tutorial 05 Part F: Comparing Test and Analysis", "SDynPy Programming Interface", "SDynPy Showcase", "Usage"], "terms": {"A": [0, 1, 2, 3, 4, 5, 6, 10, 13, 24, 25, 29, 30, 34, 39, 43, 45, 51, 63, 66, 67, 69, 72, 73, 74, 76, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 118, 119, 120, 121, 125, 127, 131, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 166, 167, 168, 169, 171, 172, 173, 176, 178, 180, 184, 185, 186, 193, 194, 195, 197, 198, 199, 204, 207, 209, 216, 217, 222, 231, 232, 233, 234, 236, 237, 238, 241, 246, 257, 259, 266, 267, 274, 276, 277, 278, 279, 280, 281, 284, 285, 289, 291, 297, 298], "structur": [0, 2, 3, 6, 7, 24, 35, 43, 49, 50, 52, 60, 62, 64, 67, 70, 78, 80, 81, 86, 102, 116, 234, 238, 275, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 290, 291, 297, 298], "dynam": [0, 24, 81, 238, 275, 277, 280, 281, 283, 285, 286, 287, 288, 289, 290, 297], "librari": 0, "python": [0, 110, 180, 186, 275, 276, 278, 280, 281, 283, 286, 297, 298], "copyright": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "2022": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "nation": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275], "technologi": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "engin": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 285, 286, 291], "solut": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 170, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 276, 277, 280, 286, 288, 291, 297, 298], "sandia": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 116, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 279], "llc": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "ntess": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "under": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 280, 297], "term": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 277, 285, 286, 287, 288, 290], "contract": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "de": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "na0003525": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "u": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 119, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 197, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 277, 278, 279, 280, 281, 285, 287, 288, 290, 291, 297], "": [0, 1, 2, 3, 4, 5, 13, 30, 39, 43, 44, 60, 63, 66, 78, 80, 81, 83, 84, 86, 88, 89, 91, 101, 102, 103, 104, 105, 106, 109, 110, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 166, 168, 172, 173, 176, 180, 184, 186, 193, 194, 197, 201, 207, 209, 216, 231, 232, 234, 236, 238, 246, 257, 259, 266, 274, 275, 276, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "govern": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 286], "retain": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 276, 278, 287], "certain": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 277, 280, 287, 290, 297], "right": [0, 1, 2, 4, 5, 13, 25, 30, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 100, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 167, 170, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 277, 279, 280, 281, 285, 286, 288, 290, 297], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 24, 25, 28, 29, 33, 35, 39, 43, 44, 48, 51, 52, 63, 66, 67, 69, 70, 73, 75, 76, 78, 80, 83, 84, 86, 88, 89, 91, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 116, 118, 120, 121, 125, 127, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 166, 168, 170, 172, 173, 176, 180, 184, 186, 193, 194, 197, 198, 199, 207, 209, 216, 231, 232, 233, 234, 236, 237, 238, 241, 246, 257, 259, 266, 270, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 297, 298], "softwar": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 197, 207, 209, 216, 231, 238, 241, 246, 257, 259, 266, 276, 279, 280, 281, 297, 298], "program": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 278, 283], "i": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 19, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 48, 49, 50, 51, 56, 60, 62, 63, 64, 66, 67, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 91, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 166, 168, 170, 172, 173, 176, 178, 180, 184, 186, 193, 194, 197, 204, 207, 209, 216, 217, 222, 228, 231, 232, 233, 234, 236, 237, 238, 241, 246, 257, 259, 266, 267, 268, 270, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 297, 298], "free": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 278, 284, 286, 288, 290, 291], "you": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 112, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 280, 281, 285, 286, 287, 288, 291, 297, 298], "can": [0, 1, 2, 3, 4, 5, 7, 13, 19, 24, 25, 28, 30, 35, 39, 43, 49, 50, 51, 52, 60, 62, 63, 64, 66, 67, 70, 74, 75, 76, 78, 80, 81, 83, 84, 85, 86, 88, 89, 91, 101, 102, 103, 105, 106, 109, 110, 112, 118, 119, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 166, 168, 172, 173, 176, 178, 180, 184, 185, 186, 193, 194, 197, 207, 209, 216, 231, 238, 241, 246, 257, 259, 266, 267, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "redistribut": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "modifi": [0, 1, 2, 4, 5, 13, 24, 39, 43, 48, 63, 66, 76, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 277, 286, 288, 291, 297], "gnu": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "gener": [0, 1, 2, 4, 5, 13, 18, 24, 25, 27, 39, 43, 51, 63, 66, 67, 79, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 110, 112, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 170, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 222, 231, 238, 246, 257, 259, 266, 276, 277, 278, 280, 281, 282, 285, 286, 287, 289, 291, 298], "public": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "licens": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "publish": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "foundat": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "either": [0, 1, 2, 4, 5, 13, 39, 63, 66, 67, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 276, 279, 280, 287, 288, 290, 297], "version": [0, 1, 2, 4, 5, 13, 24, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 110, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 280, 287, 288, 297], "3": [0, 1, 2, 4, 5, 6, 8, 10, 12, 13, 16, 18, 27, 39, 40, 43, 45, 49, 55, 56, 59, 63, 66, 80, 81, 83, 84, 86, 88, 89, 90, 91, 95, 101, 102, 105, 106, 109, 110, 112, 116, 118, 119, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 153, 155, 158, 162, 165, 166, 168, 170, 172, 173, 176, 180, 184, 186, 190, 193, 194, 195, 197, 207, 209, 216, 231, 238, 246, 257, 259, 266, 267, 268, 270, 275, 276, 277, 278, 279, 280, 281, 285, 290, 291, 297], "your": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 285, 286, 287, 297, 298], "option": [0, 1, 2, 4, 5, 6, 7, 10, 13, 14, 19, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 56, 63, 64, 66, 67, 69, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 110, 118, 119, 120, 121, 125, 127, 129, 130, 131, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 170, 172, 173, 174, 176, 178, 179, 180, 184, 185, 186, 193, 194, 204, 207, 209, 216, 217, 231, 234, 238, 241, 246, 257, 259, 266, 267, 278, 279, 280, 281, 282, 287, 288, 297], "ani": [0, 1, 2, 4, 5, 13, 24, 30, 39, 43, 44, 63, 64, 66, 67, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 116, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 170, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 276, 278, 280, 285, 286, 288, 290, 291, 297, 298], "later": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 276, 278, 279, 288], "distribut": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 110, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 285], "hope": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "us": [0, 1, 2, 4, 5, 6, 7, 13, 15, 17, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 61, 62, 63, 64, 66, 67, 70, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 101, 102, 105, 106, 109, 110, 112, 118, 119, 120, 121, 125, 126, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 170, 172, 173, 176, 178, 180, 184, 185, 186, 193, 194, 195, 197, 207, 209, 216, 217, 222, 231, 234, 236, 237, 238, 241, 246, 257, 259, 266, 270, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 291, 298], "without": [0, 1, 2, 4, 5, 13, 25, 39, 43, 48, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 279, 280, 287, 288, 291, 297], "warranti": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "even": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 276, 279, 280, 286, 288, 290, 291, 297], "impli": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 286, 291], "merchant": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "fit": [0, 1, 2, 4, 5, 13, 39, 45, 63, 66, 80, 83, 84, 86, 88, 89, 90, 91, 101, 102, 106, 109, 112, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 178, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 280, 282, 283, 284, 289, 290, 291, 298], "FOR": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "particular": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 285, 297], "purpos": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 278, 298], "see": [0, 1, 2, 4, 5, 13, 39, 50, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 116, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 196, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "more": [0, 1, 2, 4, 5, 13, 24, 35, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 110, 112, 116, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 170, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 290, 291, 297], "detail": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "should": [0, 1, 2, 4, 5, 6, 7, 10, 13, 19, 25, 29, 30, 39, 43, 46, 49, 50, 60, 62, 63, 66, 67, 69, 73, 74, 78, 80, 81, 83, 84, 86, 88, 89, 91, 101, 102, 103, 106, 107, 108, 109, 110, 116, 118, 120, 121, 125, 129, 130, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 234, 236, 237, 238, 241, 246, 257, 259, 266, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "have": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 24, 25, 28, 29, 30, 34, 38, 39, 42, 43, 48, 49, 50, 58, 60, 62, 63, 66, 67, 73, 79, 80, 83, 84, 86, 88, 89, 91, 101, 102, 103, 106, 109, 110, 112, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 170, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 297, 298], "receiv": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "copi": [0, 1, 2, 4, 5, 13, 30, 39, 43, 63, 64, 66, 80, 81, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 281, 290], "along": [0, 1, 2, 4, 5, 13, 24, 39, 43, 51, 63, 66, 67, 80, 83, 84, 86, 88, 89, 90, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 275, 278, 281, 286, 287, 288, 290, 297], "If": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 24, 25, 29, 30, 34, 35, 38, 39, 40, 42, 43, 45, 47, 48, 56, 63, 64, 66, 67, 71, 72, 74, 78, 80, 81, 83, 84, 86, 88, 89, 91, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 178, 180, 184, 186, 193, 194, 195, 207, 209, 216, 217, 231, 234, 237, 238, 241, 246, 257, 259, 266, 267, 275, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "http": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 116, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 270, 274], "www": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266], "org": [0, 1, 2, 4, 5, 13, 39, 63, 66, 80, 83, 84, 86, 88, 89, 91, 101, 102, 106, 109, 118, 120, 121, 125, 132, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 172, 173, 176, 180, 184, 186, 193, 194, 207, 209, 216, 231, 238, 246, 257, 259, 266, 274], "modul": [0, 1, 2, 13, 39, 83, 88, 91, 101, 110, 120, 125, 132, 172, 193, 246, 275, 277, 278, 279, 280, 281, 283, 287, 290, 291, 297, 298], "object": [1, 2, 3, 5, 6, 9, 24, 33, 35, 38, 39, 41, 42, 43, 46, 47, 48, 50, 53, 54, 57, 62, 64, 65, 66, 67, 68, 73, 81, 82, 85, 89, 91, 110, 112, 116, 118, 119, 134, 137, 140, 144, 147, 150, 153, 156, 159, 163, 170, 181, 190, 195, 246, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 297], "includ": [1, 67, 81, 91, 116, 118, 139, 275, 277, 278, 279, 280, 283, 286, 287, 288, 290, 291, 297, 298], "data": [1, 2, 3, 5, 7, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 47, 48, 51, 52, 53, 54, 58, 64, 67, 69, 70, 71, 81, 90, 109, 110, 112, 119, 120, 121, 123, 127, 128, 129, 130, 131, 134, 135, 137, 138, 140, 142, 144, 145, 147, 148, 150, 151, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 170, 173, 174, 178, 185, 194, 237, 241, 246, 257, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291], "geometri": [1, 5, 24, 29, 39, 41, 44, 46, 48, 49, 50, 51, 52, 53, 54, 58, 60, 62, 67, 69, 73, 74, 75, 76, 81, 82, 85, 90, 92, 94, 99, 112, 116, 146, 149, 152, 162, 170, 182, 185, 246, 266, 276, 277, 278, 280, 281, 282, 283, 285, 288, 290, 291, 298], "base": [2, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 64, 67, 75, 81, 110, 112, 117, 119, 134, 137, 140, 144, 147, 150, 153, 156, 159, 163, 174, 175, 177, 178, 181, 182, 183, 185, 187, 188, 190, 191, 275, 276, 278, 279, 280, 283, 285, 286, 291], "class": [2, 3, 5, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 57, 58, 63, 64, 66, 67, 70, 80, 81, 101, 109, 110, 112, 117, 118, 119, 120, 133, 134, 136, 137, 139, 140, 143, 144, 146, 147, 149, 150, 152, 153, 155, 156, 158, 159, 162, 163, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 275, 277, 279, 281, 288, 290, 291, 297, 298], "all": [2, 3, 7, 11, 19, 24, 25, 28, 29, 30, 33, 39, 42, 43, 46, 48, 51, 67, 68, 69, 81, 85, 110, 112, 116, 177, 178, 179, 246, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "arrai": [2, 3, 5, 6, 7, 9, 10, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 59, 60, 62, 64, 67, 75, 77, 78, 81, 103, 107, 108, 110, 112, 119, 123, 147, 153, 166, 168, 169, 170, 171, 178, 195, 197, 198, 199, 201, 202, 204, 206, 217, 222, 228, 233, 234, 236, 237, 241, 276, 277, 278, 279, 281, 285, 286, 287, 288, 290, 298], "ar": [2, 5, 13, 24, 25, 29, 30, 33, 35, 43, 44, 45, 46, 48, 56, 60, 64, 66, 67, 69, 74, 75, 76, 77, 81, 82, 90, 103, 110, 112, 116, 119, 129, 130, 155, 162, 166, 168, 170, 176, 178, 195, 197, 222, 228, 233, 234, 236, 237, 270, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "subclass": [2, 3, 13, 24, 33, 35, 275, 279, 297, 298], "numpi": [2, 3, 6, 7, 24, 33, 38, 43, 49, 50, 58, 60, 62, 64, 67, 72, 78, 107, 108, 110, 217, 222, 228, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "ndarrai": [2, 3, 6, 7, 9, 24, 25, 30, 33, 34, 35, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 62, 65, 67, 70, 72, 74, 75, 76, 77, 78, 81, 103, 104, 107, 108, 110, 119, 166, 168, 169, 171, 178, 179, 195, 197, 198, 199, 200, 204, 217, 222, 228, 232, 233, 234, 236, 237, 241, 267, 268, 275, 297, 298], "store": [2, 3, 15, 17, 23, 25, 26, 28, 29, 30, 31, 35, 43, 58, 64, 78, 237, 275, 276, 278, 279, 286, 287, 288, 290, 297], "underli": [2, 3, 6, 64, 67, 275, 286, 288, 297], "result": [2, 19, 28, 43, 48, 67, 69, 74, 81, 170, 234, 275, 276, 277, 279, 282, 283, 285, 286, 288, 290, 291, 297, 298], "potenti": [2, 43, 48, 234, 275, 278, 288, 290, 291, 297], "complex": [2, 16, 19, 24, 30, 46, 67, 74, 78, 81, 90, 116, 178, 207, 217, 222, 228, 234, 236, 275, 280, 285, 286, 287, 288, 290, 291, 297, 298], "type": [2, 3, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 81, 105, 110, 112, 116, 119, 120, 127, 129, 130, 131, 158, 167, 169, 178, 185, 198, 199, 204, 222, 228, 232, 233, 234, 236, 267, 268, 275, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 297, 298], "while": [2, 25, 43, 48, 110, 275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "still": [2, 275, 280, 281, 285, 286, 287, 288, 290, 291, 297], "achiev": [2, 275, 277, 280, 291, 297], "effici": [2, 297], "flexibl": [2, 279, 291], "defin": [2, 3, 4, 5, 6, 10, 13, 24, 25, 38, 39, 43, 50, 57, 58, 60, 62, 63, 66, 67, 80, 81, 103, 110, 112, 116, 119, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 166, 168, 178, 197, 234, 246, 275, 276, 277, 280, 281, 285, 286, 287, 288, 297, 298], "sdynpyarrai": [2, 6, 24, 40, 42, 45, 47, 64, 67, 275, 297], "which": [2, 3, 5, 6, 7, 10, 13, 19, 24, 25, 28, 29, 30, 41, 43, 44, 46, 48, 49, 50, 51, 60, 62, 64, 67, 69, 73, 74, 75, 76, 81, 103, 110, 155, 162, 167, 178, 232, 234, 236, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "The": [2, 3, 5, 6, 10, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 41, 43, 44, 45, 46, 48, 51, 52, 56, 58, 61, 65, 67, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 103, 107, 108, 110, 112, 119, 127, 128, 129, 130, 131, 170, 178, 197, 204, 217, 222, 228, 232, 233, 234, 236, 237, 241, 267, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 291, 297, 298], "inherit": [2, 3, 24, 275, 297], "from": [2, 3, 6, 8, 9, 13, 24, 25, 28, 29, 30, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 51, 52, 53, 54, 55, 57, 58, 59, 67, 68, 69, 70, 71, 74, 75, 76, 78, 80, 81, 89, 90, 91, 103, 106, 109, 110, 112, 116, 120, 121, 127, 128, 129, 130, 158, 165, 166, 167, 168, 169, 170, 171, 173, 174, 178, 185, 195, 196, 197, 198, 199, 204, 217, 222, 233, 236, 237, 241, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 297, 298], "main": [2, 43, 48, 280, 286, 287, 288, 291, 297], "contribut": [2, 275, 277, 286, 287, 288, 290, 291], "allow": [2, 3, 19, 33, 43, 48, 170, 178, 185, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "user": [2, 19, 28, 29, 43, 48, 91, 110, 112, 170, 185, 275, 278, 279, 280, 288, 290, 291, 297, 298], "access": [2, 3, 116, 275, 279, 280, 286, 288, 297], "field": [2, 3, 13, 43, 58, 275, 279, 286], "attribut": [2, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 60, 62, 64, 67, 81, 110, 134, 137, 140, 144, 147, 150, 153, 156, 159, 163, 174, 175, 177, 181, 182, 183, 185, 187, 188, 190, 191, 275, 279, 280, 288, 290, 297], "notat": 2, "rather": [2, 44, 46, 48, 234, 236, 241, 275, 277, 278, 280, 281, 286, 287, 288, 290, 291, 297], "than": [2, 6, 10, 24, 25, 35, 43, 44, 46, 48, 67, 110, 112, 170, 234, 236, 241, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "index": [2, 3, 24, 43, 46, 107, 108, 110, 112, 197, 267, 275, 277, 279, 280, 281, 283, 286, 288], "e": [2, 6, 7, 8, 12, 24, 29, 30, 34, 49, 50, 60, 62, 81, 87, 103, 104, 105, 107, 108, 110, 112, 217, 234, 237, 275, 279, 280, 281, 284, 286, 287, 288, 289, 290, 291, 297, 298], "g": [2, 6, 8, 12, 24, 29, 30, 34, 103, 107, 108, 110, 112, 217, 222, 234, 237, 275, 279, 281, 286, 288, 290, 291, 297, 298], "shape": [3, 6, 7, 10, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 40, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 59, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 90, 94, 97, 99, 107, 108, 110, 153, 155, 174, 175, 176, 178, 185, 204, 213, 233, 234, 236, 237, 239, 241, 244, 276, 277, 278, 279, 280, 281, 283, 285, 286, 290, 291, 298], "dtype": [3, 64, 67, 153, 275, 278, 279, 285, 288, 290, 297], "float": [3, 25, 28, 29, 30, 34, 41, 43, 44, 45, 46, 48, 67, 74, 76, 81, 82, 104, 105, 110, 119, 169, 170, 171, 178, 204, 217, 222, 228, 232, 237, 241, 267, 275, 286, 288, 297], "buffer": [3, 6, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 40, 42, 45, 47, 64, 65, 67], "none": [3, 6, 7, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 60, 62, 64, 65, 67, 69, 72, 73, 76, 77, 78, 79, 81, 82, 90, 96, 97, 99, 100, 105, 110, 112, 116, 119, 122, 123, 127, 129, 130, 134, 144, 150, 166, 174, 178, 179, 181, 185, 190, 201, 203, 210, 211, 212, 213, 214, 215, 217, 225, 226, 227, 229, 234, 235, 237, 239, 241, 243, 244, 255, 263, 270, 275, 276, 277, 278, 279, 280, 281, 285, 286, 290, 297], "offset": [3, 6, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 40, 42, 43, 45, 47, 64, 65, 67, 81, 275, 276, 278, 281, 297], "0": [3, 6, 7, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 60, 62, 64, 65, 67, 74, 78, 79, 81, 87, 90, 94, 95, 96, 97, 98, 99, 105, 110, 119, 134, 147, 153, 167, 170, 177, 178, 181, 188, 190, 197, 201, 203, 205, 212, 217, 229, 234, 237, 239, 241, 244, 245, 267, 270, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "stride": [3, 6, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 40, 42, 45, 47, 64, 65, 67], "order": [3, 6, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 40, 42, 45, 47, 64, 65, 67, 103, 104, 119, 166, 168, 170, 262, 275, 277, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "sourc": [3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57, 59, 60, 61, 62, 64, 65, 67, 72, 74, 75, 76, 78, 79, 81, 85, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 122, 123, 124, 126, 127, 128, 129, 131, 134, 135, 137, 138, 140, 141, 142, 144, 145, 147, 148, 150, 151, 153, 154, 156, 157, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 174, 175, 177, 178, 179, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 279, 290, 291, 298], "superclass": [3, 24], "implement": [3, 28, 29, 67, 180, 186, 275, 277, 279, 280, 291, 297], "thei": [3, 43, 67, 77, 166, 168, 234, 236, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "were": [3, 24, 28, 30, 45, 67, 75, 275, 276, 277, 278, 279, 280, 281, 285, 286, 288, 290, 291, 297], "__init__": [3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 64, 67, 81, 110, 112, 117, 119, 134, 137, 140, 144, 147, 150, 153, 156, 159, 163, 174, 175, 177, 181, 182, 183, 185, 187, 188, 190, 191], "method": [3, 6, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 57, 58, 64, 67, 74, 75, 81, 110, 112, 117, 119, 134, 137, 140, 144, 147, 150, 153, 156, 159, 163, 174, 175, 181, 182, 183, 185, 187, 190, 191, 233, 236, 237, 270, 274, 275, 276, 278, 279, 280, 282, 283, 285, 286, 287, 288, 290, 291, 297], "assemble_mat_dict": 3, "assembl": [3, 67, 81, 91, 268, 275, 276, 278, 281, 286, 287, 290, 297], "dictionari": [3, 6, 9, 24, 25, 36, 37, 40, 42, 43, 45, 47, 53, 54, 67, 71, 85, 105, 129, 130, 167, 275, 278, 281, 290, 298], "return": [3, 6, 7, 8, 9, 10, 11, 12, 15, 17, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85, 103, 104, 105, 107, 108, 110, 112, 116, 119, 123, 127, 128, 129, 130, 131, 166, 167, 168, 169, 170, 171, 178, 185, 195, 196, 197, 198, 199, 200, 204, 217, 222, 228, 232, 233, 234, 236, 237, 241, 267, 268, 275, 276, 277, 278, 279, 281, 286, 288, 297, 298], "output_dict": 3, "content": [3, 288, 290, 291], "file": [3, 6, 9, 13, 18, 24, 27, 29, 35, 38, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 58, 67, 69, 70, 71, 78, 81, 109, 110, 112, 116, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 143, 166, 167, 168, 170, 185, 276, 279, 280, 281, 288, 297, 298], "dict": [3, 24, 25, 28, 30, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 53, 54, 67, 71, 81, 85, 105, 129, 130, 167], "properti": [3, 15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 64, 67, 81, 103, 110, 134, 137, 140, 144, 147, 150, 153, 156, 159, 163, 166, 168, 174, 181, 182, 190, 234, 276, 279, 285, 286, 287, 288, 289, 291, 297], "These": [3, 5, 110, 112, 275, 277, 278, 279, 280, 281, 287, 288, 290, 297, 298], "through": [3, 75, 110, 112, 275, 276, 277, 279, 280, 281, 285, 286, 287, 289, 290, 297, 298], "syntax": [3, 275, 297], "classmethod": [3, 6, 24, 25, 29, 43, 64, 67, 81, 119, 134, 137, 140, 144, 147, 150, 153, 156, 159, 163], "load": [3, 6, 9, 24, 35, 40, 42, 43, 45, 47, 52, 67, 70, 71, 81, 110, 112, 121, 185, 276, 277, 280, 282, 285, 290, 297], "filenam": [3, 24, 25, 38, 41, 43, 44, 46, 48, 58, 67, 81, 110, 112, 129, 130, 190, 275, 279], "specifi": [3, 5, 6, 7, 10, 19, 24, 25, 28, 29, 30, 33, 34, 38, 40, 43, 44, 46, 48, 49, 50, 51, 56, 58, 60, 62, 64, 67, 69, 72, 73, 76, 78, 79, 81, 105, 110, 112, 116, 127, 128, 170, 178, 232, 234, 236, 237, 241, 267, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "paramet": [3, 6, 7, 8, 9, 10, 11, 12, 19, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 90, 96, 97, 103, 104, 105, 107, 108, 110, 112, 116, 119, 123, 127, 128, 129, 130, 131, 166, 167, 168, 169, 170, 171, 178, 185, 195, 197, 198, 199, 200, 204, 217, 222, 228, 232, 233, 234, 236, 237, 241, 267, 268, 270, 274, 275, 277, 278, 280, 282, 286, 287, 288, 290, 291, 297], "str": [3, 8, 12, 24, 25, 28, 29, 30, 34, 38, 43, 44, 46, 48, 58, 67, 69, 79, 81, 110, 123, 127, 129, 130, 131, 167, 170, 217, 233, 234, 236, 237, 275, 287], "ha": [3, 24, 38, 63, 110, 112, 116, 204, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "extens": [3, 24, 38], "unv": [3, 24, 36, 37, 38, 40, 42, 43, 45, 47, 53, 54, 58, 67, 71, 125, 126, 127, 298], "uff": [3, 24, 38, 125, 298], "univers": [3, 13, 18, 24, 27, 38, 40, 42, 43, 45, 47, 53, 54, 67, 71, 78, 125, 127, 128, 129, 130, 131, 132, 133, 136, 143, 275, 297, 298], "otherwis": [3, 6, 10, 24, 29, 35, 38, 43, 44, 45, 46, 48, 78, 81, 217, 275, 279, 281, 290, 291, 297], "rais": [3, 24, 25, 28, 29, 30, 34, 38, 43, 56, 58, 64, 67, 71, 79, 81, 127, 129, 130, 195, 267], "attributeerror": [3, 24, 38, 43, 58], "doe": [3, 24, 29, 38, 43, 58, 232, 275, 277, 278, 279, 285, 286, 287, 288, 290, 291, 297], "from_unv": [3, 24, 38, 40, 42, 43, 45, 47, 58, 67], "appropri": [3, 24, 38, 275, 276, 277, 280, 286, 291, 297], "cl": [3, 24, 38, 43], "ndenumer": 3, "enumer": [3, 13, 14, 16, 18, 19, 27, 32, 177, 188, 278, 280, 290, 297], "over": [3, 43, 48, 128, 170, 237, 275, 276, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "entri": [3, 6, 9, 25, 105, 110, 116, 127, 128, 170, 275, 287, 288, 297], "yield": [3, 61], "tupl": [3, 25, 44, 110, 112], "indic": [3, 6, 22, 24, 30, 64, 81, 90, 103, 107, 108, 110, 112, 181, 275, 279, 280, 281, 288], "correspond": [3, 5, 6, 7, 9, 24, 43, 49, 50, 55, 59, 60, 62, 67, 75, 78, 81, 103, 107, 108, 110, 112, 195, 197, 233, 275, 276, 278, 279, 280, 281, 285, 286, 287, 288, 290, 297], "each": [3, 6, 10, 24, 25, 33, 43, 45, 46, 49, 50, 51, 58, 60, 62, 66, 76, 78, 104, 105, 107, 108, 110, 112, 131, 178, 217, 222, 241, 270, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "save": [3, 24, 35, 43, 44, 46, 48, 52, 67, 70, 81, 91, 109, 190, 275, 279, 280, 288, 290, 297], "Will": [3, 24, 127], "append": [3, 24, 43, 110, 275, 276, 278, 280, 281, 286, 288, 290, 297], "npy": [3, 275, 279, 280, 297], "savemat": [3, 24], "matlab": [3, 6, 9, 24, 35, 43, 52, 67, 70], "mat": [3, 6, 9, 24, 35, 43, 52, 67, 70, 170, 298], "name": [3, 7, 29, 30, 40, 43, 46, 49, 50, 60, 62, 81, 110, 112, 116, 217, 275, 278, 279, 280, 286, 287, 288, 297, 298], "color": [4, 40, 42, 43, 45, 47, 49, 50, 60, 62, 67, 73, 146, 147, 150, 163, 170, 275, 276, 279, 280, 281, 285, 286, 288, 291, 297], "scheme": [4, 110, 112, 275, 277, 290], "match": [4, 25, 81, 275, 277, 278, 279, 280, 286, 291, 297], "dea": [4, 241], "coordinatearrai": [5, 7, 9, 10, 11, 24, 25, 30, 33, 43, 64, 65, 67, 74, 75, 78, 80, 81, 179, 275, 276, 277, 279, 287, 288, 297, 298], "node": [5, 6, 7, 8, 10, 12, 24, 39, 42, 43, 45, 47, 50, 51, 55, 58, 59, 60, 62, 67, 76, 78, 79, 81, 82, 103, 104, 110, 112, 116, 146, 155, 163, 170, 246, 276, 277, 278, 279, 280, 281, 288, 290, 291, 298], "number": [5, 8, 12, 24, 25, 29, 30, 34, 41, 43, 44, 45, 46, 48, 57, 64, 67, 74, 76, 81, 82, 90, 91, 94, 95, 103, 104, 105, 107, 108, 110, 112, 116, 127, 128, 129, 130, 170, 178, 197, 207, 217, 232, 233, 234, 236, 237, 241, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "direct": [5, 6, 7, 8, 10, 12, 29, 40, 43, 49, 51, 56, 67, 69, 78, 104, 105, 236, 249, 250, 251, 252, 275, 277, 278, 280, 286, 287, 288, 290, 291, 297, 298], "coordin": [5, 6, 7, 8, 10, 12, 24, 25, 30, 33, 39, 40, 43, 45, 49, 51, 55, 56, 59, 60, 64, 65, 66, 67, 74, 75, 76, 78, 81, 103, 110, 112, 146, 147, 152, 179, 198, 199, 204, 246, 276, 277, 278, 279, 280, 281, 286, 287, 288, 290, 298], "degre": [5, 6, 7, 10, 24, 25, 30, 43, 64, 66, 67, 68, 78, 80, 81, 85, 103, 106, 107, 108, 119, 158, 267, 276, 277, 279, 282, 283, 284, 285, 289, 290, 297, 298], "freedom": [5, 6, 7, 10, 24, 25, 30, 43, 64, 66, 67, 68, 78, 80, 81, 85, 103, 106, 107, 108, 119, 158, 276, 277, 279, 282, 283, 284, 289, 290, 297, 298], "consist": [5, 7, 11, 25, 30, 34, 43, 45, 51, 67, 72, 73, 74, 75, 76, 80, 81, 82, 110, 166, 168, 170, 197, 234, 236, 267, 275, 276, 277, 279, 280, 281, 288, 290, 297], "local": [5, 6, 43, 45, 51, 55, 59, 110, 275, 278, 287, 288, 297], "displac": [5, 27, 29, 43, 46, 48, 60, 66, 67, 69, 81, 119, 170, 178, 198, 234, 236, 275, 276, 279, 280, 285, 287, 288, 297, 298], "system": [5, 24, 25, 39, 40, 43, 45, 49, 51, 55, 56, 59, 60, 67, 76, 80, 82, 84, 85, 86, 119, 136, 146, 152, 197, 236, 241, 246, 276, 277, 278, 280, 281, 283, 284, 289, 290, 291, 298], "translat": [5, 6, 10, 24, 32, 43, 50, 104, 166, 168, 197, 200, 275, 278, 288, 297], "rotat": [5, 24, 32, 43, 44, 50, 67, 69, 81, 104, 166, 168, 169, 171, 197, 200, 266, 267, 275, 278, 286, 288, 297, 298], "about": [5, 43, 67, 103, 104, 169, 171, 267, 275, 279, 280, 284, 285, 286, 287, 290, 291, 297], "princip": [5, 43, 275, 297], "axi": [5, 24, 25, 28, 30, 43, 51, 64, 67, 103, 192, 200, 208, 227, 237, 262, 267, 275, 278, 279, 281, 285, 286, 287, 288, 290, 291, 297], "posit": [5, 6, 7, 10, 40, 43, 45, 51, 60, 67, 146, 170, 183, 191, 195, 197, 199, 204, 275, 276, 281, 286, 287, 288, 290, 291, 297], "neg": [5, 7, 281, 287, 290, 291], "also": [5, 13, 24, 28, 30, 39, 43, 67, 80, 234, 246, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "empti": [5, 43, 112, 275, 280, 288, 290, 297], "non": [5, 75, 116, 275, 277, 287, 288, 291, 297], "function": [5, 6, 7, 13, 15, 17, 18, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 60, 62, 63, 64, 66, 67, 70, 76, 80, 81, 84, 86, 88, 89, 90, 91, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 116, 119, 120, 121, 125, 133, 136, 139, 143, 146, 149, 152, 155, 158, 162, 165, 166, 168, 172, 176, 178, 186, 194, 197, 198, 199, 207, 209, 216, 217, 231, 232, 233, 234, 236, 237, 238, 241, 246, 257, 259, 266, 276, 277, 278, 279, 280, 281, 283, 285, 288, 289, 291, 298], "inform": [6, 40, 42, 43, 45, 47, 67, 110, 112, 116, 123, 129, 130, 139, 166, 168, 170, 275, 276, 279, 280, 285, 286, 287, 288, 290, 297, 298], "101x": [6, 8, 12, 81, 278, 288, 297, 298], "coordinate_arrai": [6, 10, 43, 275, 277, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "helper": [6, 33, 40, 42, 45, 46, 47, 64, 67, 275, 277, 279, 298], "creat": [6, 7, 8, 9, 10, 19, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 62, 64, 65, 67, 69, 70, 74, 75, 76, 78, 81, 85, 88, 89, 91, 101, 102, 110, 112, 116, 119, 170, 185, 233, 237, 241, 267, 276, 277, 280, 281, 282, 283, 285, 286, 287, 288, 290, 298], "ab": [6, 275, 280, 281, 285, 286, 287, 288, 290, 291, 297], "sign": [6, 81, 275, 276, 278, 281, 286, 288, 290, 297], "flip": [6, 67, 77, 275, 276, 278, 281, 286, 287, 290], "data_dtyp": [6, 40, 42, 45, 47, 64], "uint64": [6, 40, 42, 45, 47], "int8": 6, "datatyp": [6, 14], "from_matlab_cellstr": 6, "cellstr_data": [6, 9], "cellstr": [6, 9], "scipi": [6, 9, 24, 29, 30, 34, 35, 43, 52, 67, 70, 217, 237, 275, 281, 288, 291, 297], "io": [6, 9, 24, 35, 43, 52, 67, 70], "loadmat": [6, 9, 35, 43, 52, 67, 70], "np": [6, 9, 24, 25, 30, 33, 34, 35, 43, 44, 45, 46, 48, 51, 52, 56, 57, 67, 70, 72, 74, 75, 76, 77, 81, 104, 107, 108, 110, 119, 169, 171, 178, 198, 199, 200, 204, 217, 222, 228, 232, 234, 236, 237, 241, 267, 268, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "cell": [6, 9], "string": [6, 7, 8, 9, 12, 24, 29, 30, 34, 43, 67, 69, 79, 81, 110, 112, 127, 128, 131, 170, 178, 237, 275, 279, 286, 297], "variabl": [6, 9, 29, 67, 69, 81, 110, 112, 116, 275, 279, 280, 288, 297], "built": [6, 9, 275, 277, 288, 298], "provid": [6, 9, 10, 11, 19, 30, 67, 71, 75, 76, 81, 233, 237, 241, 275, 277, 278, 279, 280, 281, 286, 288, 290, 291, 297, 298], "from_nodelist": [6, 275, 297], "1": [6, 7, 8, 10, 12, 14, 16, 18, 21, 24, 25, 27, 28, 29, 30, 32, 34, 41, 43, 45, 46, 48, 49, 50, 51, 60, 62, 67, 77, 78, 81, 87, 92, 94, 99, 103, 104, 110, 112, 116, 119, 144, 147, 150, 153, 163, 167, 170, 177, 178, 181, 188, 192, 197, 200, 204, 208, 212, 222, 226, 229, 237, 239, 241, 242, 244, 245, 258, 262, 267, 270, 274, 275, 276, 277, 278, 279, 280, 281, 285, 291, 297], "2": [6, 7, 8, 10, 12, 14, 16, 18, 27, 43, 49, 50, 60, 62, 67, 79, 81, 93, 103, 105, 116, 119, 170, 177, 178, 181, 190, 195, 197, 204, 234, 241, 267, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 291, 297], "flatten": [6, 7, 10, 24, 43, 275, 277, 286, 287, 288, 297], "true": [6, 10, 24, 25, 28, 29, 30, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 64, 67, 71, 74, 76, 81, 92, 94, 104, 107, 108, 110, 112, 131, 170, 178, 181, 190, 205, 217, 225, 229, 240, 241, 267, 275, 277, 278, 279, 281, 285, 286, 287, 288, 290, 291, 297], "set": [6, 10, 19, 24, 25, 28, 30, 41, 43, 45, 46, 48, 51, 57, 66, 67, 68, 69, 72, 74, 76, 79, 81, 82, 106, 107, 108, 110, 173, 195, 197, 237, 270, 277, 279, 282, 287, 288, 290, 291, 297, 298], "iter": [6, 10, 25, 29, 42, 43, 45, 47, 50, 51, 61, 62, 67, 69, 73, 81, 82, 107, 108, 110, 112, 116, 127, 128, 129, 130, 131, 166, 168, 170, 275, 277, 279], "list": [6, 10, 25, 29, 30, 35, 43, 48, 49, 50, 60, 61, 62, 64, 67, 68, 69, 73, 81, 90, 107, 108, 110, 112, 116, 127, 128, 129, 130, 166, 168, 170, 174, 275, 276, 278, 279, 280, 281, 286, 297, 298], "default": [6, 10, 19, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 41, 43, 44, 45, 46, 48, 51, 56, 64, 67, 69, 73, 74, 76, 79, 81, 82, 104, 107, 108, 110, 112, 119, 129, 130, 131, 170, 178, 204, 217, 234, 236, 237, 241, 267, 270, 278, 279, 280, 282, 297], "three": [6, 10, 166, 168, 197, 275, 276, 281, 286, 287, 288, 290, 291, 297], "x": [6, 7, 8, 10, 12, 25, 29, 43, 45, 49, 67, 69, 81, 103, 104, 110, 119, 166, 168, 169, 171, 190, 192, 195, 196, 197, 204, 223, 227, 232, 233, 236, 237, 241, 258, 267, 270, 275, 277, 279, 280, 285, 286, 287, 288, 290, 291, 297], "y": [6, 7, 8, 10, 12, 25, 29, 43, 45, 67, 69, 81, 103, 104, 119, 169, 171, 190, 192, 196, 197, 204, 267, 270, 275, 280, 285, 287, 288, 290, 297], "z": [6, 7, 8, 10, 12, 25, 29, 43, 45, 51, 67, 69, 81, 103, 104, 169, 171, 190, 196, 197, 204, 267, 270, 275, 278, 280, 287, 288, 290, 297], "bool": [6, 7, 10, 24, 25, 28, 29, 30, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 51, 64, 67, 71, 74, 81, 104, 107, 108, 110, 112, 116, 129, 130, 131, 170, 178, 185, 217, 267, 279], "prior": [6, 10, 288, 291, 297], "output": [6, 10, 25, 28, 29, 35, 43, 48, 52, 67, 70, 74, 75, 79, 81, 105, 116, 119, 123, 127, 128, 129, 130, 165, 170, 222, 233, 234, 236, 237, 270, 275, 276, 277, 279, 280, 281, 290, 291, 297, 298], "fals": [6, 7, 10, 24, 25, 28, 29, 30, 35, 41, 43, 44, 46, 48, 51, 67, 74, 81, 104, 107, 108, 110, 112, 116, 129, 130, 144, 170, 174, 178, 181, 190, 191, 203, 205, 208, 217, 235, 264, 267, 275, 278, 281, 285, 286, 287, 297], "dimens": [6, 10, 24, 36, 37, 78, 107, 108, 110, 204, 217, 222, 228, 275, 281, 288, 297], "one": [6, 10, 24, 25, 28, 30, 35, 43, 67, 68, 77, 107, 108, 110, 116, 125, 178, 234, 236, 241, 275, 276, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "larger": [6, 10, 277, 279, 280, 285, 286, 288, 291, 297], "input": [6, 7, 10, 25, 33, 43, 49, 50, 60, 62, 67, 68, 73, 81, 82, 119, 178, 222, 233, 234, 236, 237, 241, 270, 275, 276, 277, 279, 280, 281, 286, 287, 288, 289, 290, 297], "due": [6, 10, 119, 275, 276, 277, 278, 280, 281, 285, 286, 287, 288, 290, 291, 297], "ad": [6, 10, 44, 76, 79, 170, 275, 280, 281, 283, 284, 290, 291], "size": [6, 10, 19, 29, 43, 48, 81, 103, 110, 190, 195, 237, 270, 275, 276, 277, 278, 279, 280, 281, 286, 288, 290, 297], "local_direct": 6, "local_direction_arrai": 6, "where": [6, 25, 43, 51, 60, 103, 110, 166, 168, 178, 197, 204, 222, 228, 233, 234, 236, 237, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "repres": [6, 8, 12, 45, 80, 81, 110, 112, 169, 171, 222, 268, 275, 276, 277, 278, 280, 283, 286, 288, 290, 297, 298], "For": [6, 67, 107, 108, 116, 241, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "exampl": [6, 28, 30, 43, 116, 241, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 290, 291, 297], "would": [6, 67, 69, 81, 234, 236, 275, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "string_arrai": [6, 7, 275, 277, 278, 279, 285, 288, 290, 297], "represent": [6, 8, 12, 67, 79, 81, 116, 131, 268, 275, 276, 286, 287, 288, 291, 297, 298], "structured_arrai": [7, 49, 50, 60, 62, 78], "force_broadcast": [7, 277, 278, 297], "an": [7, 14, 19, 24, 25, 28, 29, 30, 35, 43, 44, 45, 46, 48, 49, 50, 52, 55, 56, 59, 60, 62, 64, 67, 69, 70, 71, 73, 77, 78, 79, 81, 103, 110, 112, 116, 123, 126, 127, 166, 168, 174, 177, 178, 185, 188, 197, 204, 232, 233, 234, 236, 237, 241, 267, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 298], "test": [7, 39, 43, 48, 49, 50, 60, 62, 66, 67, 76, 78, 81, 88, 90, 119, 149, 152, 162, 170, 222, 280, 282, 283, 284, 285, 289, 291, 297], "analysi": [7, 43, 49, 50, 60, 62, 78, 88, 110, 172, 222, 275, 276, 277, 279, 281, 282, 283, 284, 286, 287, 290, 297], "two": [7, 19, 57, 72, 78, 79, 110, 112, 222, 228, 270, 275, 276, 277, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "multidimension": [7, 49, 50, 60, 62, 78], "integ": [7, 8, 12, 43, 45, 49, 50, 60, 62, 67, 73, 110, 232, 275, 291], "id": [7, 24, 40, 42, 43, 45, 47, 49, 50, 51, 57, 60, 62, 67, 76, 79, 110, 112, 129, 130, 275, 276, 277, 278, 281, 288, 290, 297], "cast": [7, 49, 50, 60, 62], "9": [7, 18, 27, 49, 50, 60, 62, 119, 144, 170, 190, 275, 276, 278, 279, 280, 286, 288, 290, 291, 297], "pass": [7, 24, 25, 28, 29, 30, 34, 35, 41, 43, 46, 48, 49, 50, 52, 60, 62, 64, 67, 70, 74, 75, 78, 81, 110, 112, 185, 195, 241, 275, 276, 277, 279, 280, 281, 286, 287, 290, 297, 298], "must": [7, 43, 48, 56, 58, 79, 81, 107, 108, 237, 275, 277, 278, 280, 281, 285, 287, 288, 289, 290, 291, 297], "rx": [7, 166, 168, 169, 171, 181, 270, 275, 288, 297], "ry": [7, 166, 168, 169, 171, 275, 288, 297], "rz": [7, 166, 168, 169, 171, 275, 288, 297], "whether": [7, 19, 43, 44, 46, 48, 51, 74, 81, 110, 112, 116, 170, 234, 276, 277, 278, 280, 286, 297], "valu": [7, 14, 16, 18, 24, 25, 27, 30, 32, 35, 48, 61, 65, 67, 69, 74, 81, 105, 107, 108, 110, 112, 126, 129, 130, 131, 170, 177, 178, 188, 197, 228, 232, 234, 236, 237, 267, 275, 276, 277, 278, 279, 280, 281, 286, 287, 288, 290, 291, 297, 298], "given": [7, 25, 103, 110, 178, 204, 233, 234, 236, 237, 241, 268, 275, 277, 279, 280, 285, 286, 287, 288, 290, 291, 297, 298], "assum": [7, 79, 105, 110, 234, 277, 280, 285, 286, 288, 290, 291, 297, 298], "altern": [7, 25, 49, 50, 60, 62, 78, 188, 190, 236, 267, 275, 277, 286, 288, 290, 297], "singl": [7, 11, 30, 34, 35, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 62, 67, 71, 73, 105, 173, 174, 241, 275, 276, 278, 280, 281, 284, 285, 287, 290, 291], "pars": [7, 12, 24, 127, 279, 298], "combin": [7, 11, 40, 42, 43, 45, 47, 67, 68, 71, 73, 81, 82, 112, 275, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 297], "regardless": [7, 35, 170, 278, 280, 290, 291], "int": [8, 12, 24, 25, 29, 30, 34, 41, 43, 44, 45, 46, 48, 64, 67, 74, 81, 104, 105, 107, 108, 110, 112, 127, 128, 178, 217, 237, 241, 275, 290], "arg": [11, 67, 110, 117, 175], "nddataarrai": [13, 15, 17, 19, 22, 23, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37, 41, 43, 275, 279, 297, 298], "time": [13, 25, 27, 28, 29, 30, 34, 43, 46, 48, 67, 81, 103, 105, 110, 119, 121, 123, 156, 158, 170, 185, 222, 232, 233, 237, 241, 259, 263, 264, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 289, 291, 298], "histori": [13, 25, 28, 29, 30, 34, 123, 158, 185, 222, 237, 275, 277, 285, 286, 289, 297, 298], "sever": [13, 43, 67, 73, 158, 276, 277, 281, 283, 285, 286, 288, 290, 291, 297, 298], "contain": [13, 16, 18, 24, 25, 27, 32, 35, 36, 37, 40, 41, 42, 43, 45, 47, 51, 52, 53, 54, 67, 68, 70, 71, 80, 81, 85, 110, 112, 116, 123, 129, 130, 167, 178, 204, 217, 222, 241, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 290, 291, 297, 298], "specif": [13, 24, 81, 131, 178, 277, 279, 285, 287, 288, 290, 297, 298], "capabl": [13, 275, 276, 278, 279, 281, 286, 290, 297, 298], "connect": [13, 19, 42, 43, 47, 50, 51, 62, 81, 103, 110, 112, 116, 150, 275, 276, 278, 280, 281, 287, 288, 297], "format": [13, 43, 46, 53, 54, 67, 78, 79, 81, 110, 125, 127, 128, 131, 132, 275, 276, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "powerspectraldensityarrai": [14, 29, 277], "compare_data": [14, 19, 25], "qmainwindow": [14, 19, 174, 182, 185, 191], "enum": [14, 16, 18, 24, 27, 32, 177, 188], "coher": [14, 15, 18, 23, 25, 277, 280, 291, 297], "imaginari": [14, 16, 19, 275, 280, 286, 287, 290, 297], "16": [14, 18, 27, 43, 270, 275, 276, 278, 280, 286, 288, 290, 291, 297], "magnitud": [14, 16, 19, 25, 178, 181, 190, 277, 286, 287, 288, 290, 291, 297], "phase": [14, 16, 19, 25, 30, 46, 241, 245, 275, 276, 277, 280, 285, 286, 287, 288, 290, 291, 297], "4": [14, 16, 18, 20, 21, 40, 43, 48, 49, 81, 110, 116, 119, 153, 166, 168, 170, 195, 197, 275, 276, 277, 278, 279, 280, 281, 285, 287, 290, 291, 297], "real": [14, 16, 19, 24, 30, 64, 67, 78, 110, 178, 275, 277, 280, 285, 286, 287, 288, 289, 290, 291, 297], "8": [14, 18, 27, 28, 29, 43, 46, 48, 76, 81, 82, 116, 170, 275, 276, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "clear_select": 14, "event": [14, 19, 174, 183, 191], "coherence_st": 14, "connectui": 14, "deselect_diagon": 14, "deselect_lower_triangular": 14, "deselect_upper_triangular": 14, "extend_selection_matrix": 14, "find_function_typ": 14, "imaginary_st": 14, "initui": 14, "init_matrix_plot": 14, "invert_select": 14, "magnitude_st": 14, "phase_st": 14, "plot": [14, 16, 19, 24, 25, 28, 30, 39, 41, 43, 44, 46, 48, 64, 67, 74, 81, 90, 110, 112, 119, 185, 190, 197, 208, 246, 276, 277, 279, 280, 281, 282, 285, 286, 287, 290, 291, 298], "plot_selected_funct": 14, "real_stat": 14, "select_diagon": 14, "select_lower_triangular": 14, "select_plot": 14, "select_upper_triangular": 14, "selector_click": 14, "selector_unclick": 14, "settext": 14, "state_chang": 14, "update_select": [14, 174], "nelement": [15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31], "function_typ": [15, 17, 22, 23, 24, 25, 26, 28, 29, 30, 31, 159], "variou": [16, 24, 30, 34, 64, 67, 74, 75, 170, 238, 275, 277, 279, 281, 283, 288, 289, 290, 291, 297, 298], "wai": [16, 275, 277, 278, 279, 280, 285, 286, 288, 290, 291, 297, 298], "magphas": 16, "5": [16, 18, 20, 21, 27, 28, 29, 30, 34, 41, 43, 74, 81, 87, 90, 96, 97, 99, 116, 170, 217, 237, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 290, 291, 297], "realimag": 16, "data_dimens": [17, 24], "ordinate_dtyp": [17, 24], "float64": [17, 24, 40, 45, 153, 275], "correl": [17, 170, 186, 197, 209, 275, 276, 279, 280, 281, 285, 290, 291, 298], "found": [18, 30, 43, 129, 130, 270, 280, 285, 288, 297, 298], "autocorrel": 18, "7": [18, 90, 116, 144, 170, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "autospectrum": [18, 291], "6": [18, 27, 90, 116, 119, 170, 275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "crosscorrel": 18, "crossspectrum": 18, "cumulative_frequency_distribut": 18, "13": [18, 27, 170, 275, 276, 278, 279, 280, 286, 288, 290, 291, 297], "eigenvalu": [18, 276, 280, 290], "22": [18, 27, 50, 275, 276, 278, 280, 288, 291, 297], "eigenvector": [18, 280, 290], "23": [18, 27, 50, 275, 276, 278, 280, 288, 291, 297], "energy_spectral_dens": 18, "10": [18, 81, 170, 178, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "finite_impulse_response_filt": 18, "25": [18, 41, 43, 46, 48, 74, 105, 275, 276, 278, 280, 286, 287, 288, 290, 291, 297], "force_pattern": 18, "19": [18, 27, 275, 276, 278, 280, 285, 286, 288, 290, 291, 297], "frequency_response_funct": [18, 285, 290], "mode_indicator_funct": 18, "18": [18, 27, 116, 275, 276, 278, 280, 286, 288, 290, 291, 297], "multiple_coher": 18, "26": [18, 275, 276, 278, 280, 288, 297], "orbit": 18, "17": [18, 27, 275, 276, 278, 280, 286, 288, 290, 291, 297], "order_funct": 18, "27": [18, 275, 276, 278, 279, 280, 288, 297], "partial_coher": 18, "21": [18, 27, 50, 190, 275, 276, 278, 280, 288, 291, 297], "partial_pow": 18, "20": [18, 27, 41, 43, 44, 46, 48, 74, 90, 92, 94, 95, 99, 190, 275, 276, 277, 278, 280, 285, 286, 288, 290, 291, 297], "peaks_vallei": 18, "14": [18, 170, 275, 276, 278, 279, 280, 286, 288, 290, 291, 297], "phase_compens": 18, "28": [18, 275, 276, 278, 288, 297], "power_spectral_dens": 18, "probability_density_funct": 18, "11": [18, 27, 43, 50, 170, 274, 275, 276, 278, 279, 280, 281, 286, 288, 290, 291, 297], "shock_response_spectrum": 18, "24": [18, 50, 275, 276, 278, 280, 286, 288, 291, 297], "spectrum": [18, 28, 29, 290], "12": [18, 27, 67, 170, 212, 275, 276, 277, 278, 279, 280, 286, 288, 290, 291, 297], "strain_per_cycl": 18, "stress_per_cycl": 18, "15": [18, 27, 119, 170, 181, 275, 276, 278, 280, 281, 286, 287, 288, 290, 291, 297], "time_respons": [18, 280, 297], "transmis": 18, "data_arrai": [19, 123, 185, 280, 290, 297], "iteract": [19, 185], "window": [19, 29, 30, 34, 43, 48, 67, 174, 185, 217, 237, 275, 279, 280, 285, 288, 290, 291, 297], "visual": [19, 43, 67, 73, 278, 279, 280, 281, 286, 288, 297], "dataset": [19, 24, 25, 43, 58, 81, 123, 129, 130, 132, 133, 136, 139, 143, 146, 149, 152, 155, 162, 209, 275, 278, 279, 280, 291, 297, 298], "overlaid": [19, 276, 278, 279, 281, 288, 290, 297], "second": [19, 43, 44, 46, 48, 67, 72, 79, 81, 103, 107, 108, 110, 170, 197, 222, 228, 234, 236, 275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297, 298], "ident": [19, 25, 30, 44, 64, 78, 79, 81, 178, 275, 276, 277, 278, 279, 280, 281, 286, 287, 288, 290, 291, 297], "argument": [19, 24, 25, 30, 33, 34, 41, 43, 46, 48, 64, 67, 81, 110, 185, 234, 241, 275, 276, 277, 279, 280, 281, 287, 288, 297], "compar": [19, 25, 67, 77, 79, 90, 119, 276, 277, 278, 279, 280, 281, 283, 284, 286, 288, 289, 290, 291, 298], "comparison": [19, 79, 95, 96, 275, 276, 277, 279, 282, 297], "connect_callback": [19, 174, 182, 183, 185, 187, 191], "callback": 19, "deselect_all_complex_types_except": 19, "complex_typ": 19, "deselect": [19, 280, 297], "except": [19, 109, 111, 125, 126, 186, 189, 275, 280, 281, 286, 287, 288, 291, 297], "make": [19, 78, 166, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 290, 291, 297, 298], "checkbox": [19, 280, 297], "menu": [19, 43, 46, 48, 280, 288, 297], "act": [19, 286, 288, 297], "like": [19, 86, 110, 116, 275, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "radiobutton": 19, "complextyp": 19, "select": [19, 24, 45, 106, 110, 112, 173, 174, 275, 276, 279, 280, 281, 282, 284, 289, 290, 291, 297], "selection_chang": 19, "call": [19, 43, 48, 58, 275, 276, 277, 279, 280, 285, 286, 287, 288, 290, 291, 297], "when": [19, 25, 43, 48, 51, 67, 74, 81, 110, 126, 129, 130, 170, 275, 276, 277, 278, 279, 280, 281, 285, 286, 288, 290, 291, 297, 298], "chang": [19, 43, 48, 119, 275, 277, 280, 285, 288, 290, 291, 297], "set_imaginari": 19, "set_magnitud": 19, "set_magnitude_phas": 19, "set_phas": 19, "set_real": 19, "set_real_imag": 19, "updat": [19, 43, 46, 48, 279, 281, 297], "figur": [19, 24, 25, 28, 30, 64, 76, 275, 276, 278, 279, 285, 286, 288, 290, 291, 297], "update_abscissa_log": 19, "abscissa": [19, 24, 25, 28, 29, 30, 33, 34, 67, 141, 159, 160, 262, 275, 277, 279, 280, 285, 286, 290, 297], "log": [19, 25, 178, 275, 285, 286, 287, 288, 290, 297], "scale": [19, 25, 28, 29, 41, 43, 46, 48, 214, 277, 280, 286, 288, 290, 297], "update_checkbox": 19, "disabl": [19, 280, 297], "button": [19, 275, 280, 288, 297], "auto": [19, 90, 277, 280, 290, 297], "update_data": 19, "new_data": 19, "new_compare_data": 19, "update_ordinate_log": 19, "ordin": [19, 24, 33, 67, 159, 178, 275, 277, 279, 285, 286, 290, 297], "parent": [20, 21, 187], "width": [20, 21, 25, 43, 81, 87, 90, 104, 291, 297], "height": [20, 21, 43, 81, 104, 250, 286, 297], "dpi": [20, 21], "100": [20, 21, 144, 275, 276, 278, 280, 286, 287, 288, 290, 291, 297], "figurecanvasqtagg": [20, 21], "subplot": [21, 24, 28, 30, 81, 275, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "ignore_subplot": 21, "mode": [22, 30, 43, 46, 67, 81, 90, 94, 95, 107, 108, 110, 112, 155, 173, 178, 186, 234, 236, 276, 277, 280, 281, 282, 283, 284, 286, 289, 290, 291, 298], "cmif": [22, 30, 90, 181, 190, 279, 280, 297], "nmif": [22, 30, 280, 297], "n": [24, 43, 103, 105, 119, 197, 270, 280, 285, 286, 287, 288, 290, 291, 297], "dimension": [24, 43, 64, 110, 275, 287], "argmax": [24, 278, 279], "reduct": [24, 81, 275, 276, 282, 283, 286, 297], "argmax_arg": 24, "argmax_kwarg": 24, "maximum": [24, 41, 43, 45, 48, 76, 81, 108, 170, 178, 241, 275, 278, 281, 286, 288, 291, 297], "absolut": 24, "addit": [24, 30, 34, 43, 44, 64, 67, 74, 75, 81, 139, 277, 280, 286, 288, 291, 297], "keyword": [24, 28, 30, 34, 41, 43, 46, 48, 74, 75, 105, 297], "unravel_index": 24, "self": [24, 25, 67, 81, 110, 175, 278], "get": [24, 25, 35, 43, 45, 52, 67, 70, 81, 107, 108, 110, 112, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 290, 291, 297, 298], "unflatten": 24, "argmin": [24, 275, 286], "argmin_arg": 24, "argmin_kwarg": 24, "minimum": [24, 45, 178, 241, 275, 286, 291, 297], "downsampl": [24, 275, 277, 280, 291], "factor": [24, 25, 43, 48, 74, 110, 119, 234, 236, 241, 275, 277, 280, 286, 288, 297], "signal": [24, 25, 28, 29, 30, 34, 81, 184, 185, 193, 217, 222, 228, 232, 237, 238, 241, 262, 275, 277, 279, 280, 285, 286, 287, 290, 291], "keep": [24, 42, 43, 45, 47, 67, 73, 81, 104, 107, 108, 110, 112, 275, 276, 277, 278, 279, 280, 281, 286, 287, 290, 297, 298], "onli": [24, 25, 29, 35, 42, 43, 45, 47, 48, 51, 67, 74, 105, 107, 108, 110, 170, 178, 217, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "everi": [24, 48, 275, 278, 280, 288, 290, 297], "th": [24, 103, 110, 288, 291, 297], "pair": [24, 30, 81, 281, 287, 290, 297], "abcissa": 24, "kept": [24, 43, 107, 108, 116, 178, 275, 277, 278, 279, 281, 288, 291], "extract_el": [24, 275, 277, 279, 285, 290, 291], "element": [24, 39, 42, 43, 45, 50, 51, 58, 62, 67, 101, 103, 104, 105, 110, 112, 116, 149, 170, 246, 276, 278, 279, 281, 282, 283, 288, 291], "reduc": [24, 36, 37, 42, 43, 45, 47, 67, 81, 116, 275, 276, 277, 278, 279, 280, 282, 287, 288, 290, 291, 297], "extract_elements_by_abscissa": [24, 275, 280, 286, 287, 290], "min_abscissa": 24, "max_abscissa": 24, "static": [24, 25, 30, 40, 42, 43, 45, 47, 64, 67, 112, 175, 187, 276, 277, 278, 279, 281, 285, 286], "from_uff": [24, 43, 67, 298], "unv_data_dict": [24, 36, 37, 40, 42, 45, 47, 67, 71], "squeez": [24, 35, 36, 37, 229, 281, 285], "read_unv": [24, 36, 37, 40, 42, 43, 45, 47, 53, 54, 67, 71], "automat": [24, 36, 37, 43, 48, 88, 275, 276, 277, 279, 280, 281, 287, 290, 297, 298], "read": [24, 29, 36, 37, 40, 42, 43, 45, 47, 53, 54, 67, 69, 71, 81, 110, 112, 120, 123, 125, 126, 127, 128, 129, 130, 170, 275, 280, 297, 298], "possibl": [24, 29, 36, 37, 275, 279, 286, 288, 297], "return_funct": [24, 35, 36, 37], "functiontyp": [24, 33, 280, 290, 297], "max": [24, 275, 286, 287], "max_arg": 24, "max_kwarg": 24, "min": [24, 275, 286], "min_arg": 24, "min_kwarg": 24, "num_coordin": 24, "num_el": [24, 110], "one_axi": [24, 28, 30, 286, 287], "subplots_kwarg": [24, 28, 30, 81, 96, 97, 99, 181, 225, 286, 287], "plot_kwarg": [24, 25, 28, 30, 41, 43, 46, 48, 67, 96, 97, 99, 225, 226, 275, 278, 279, 285, 288, 290], "multipl": [24, 28, 30, 35, 67, 68, 81, 128, 195, 222, 274, 275, 277, 280, 283, 284, 286, 288, 289, 290, 297], "matplotlib": [24, 28, 30, 67, 81, 197, 275, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "exist": [24, 28, 30, 35, 43, 56, 61, 67, 73, 81, 170, 275, 277, 279, 281, 288, 297], "ax": [24, 25, 28, 30, 43, 64, 67, 81, 212, 225, 267, 275, 276, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "On": [24, 28, 30, 275, 280, 291, 297], "reference_coordin": [24, 190, 279, 297], "respons": [24, 25, 30, 34, 67, 81, 119, 178, 231, 233, 234, 235, 236, 237, 275, 279, 282, 283, 284, 285, 289, 291, 298], "reshape_to_matrix": 24, "reshap": [24, 275, 281], "matrix": [24, 25, 29, 30, 40, 43, 48, 49, 63, 67, 74, 78, 81, 82, 103, 104, 107, 108, 110, 112, 116, 119, 166, 168, 169, 171, 178, 195, 196, 197, 200, 217, 222, 228, 233, 234, 236, 237, 267, 268, 275, 276, 277, 278, 279, 280, 281, 290, 291, 297, 298], "row": [24, 64, 65, 67, 81, 103, 107, 108, 197, 217, 222, 228, 275, 277, 278, 279, 285, 286, 287, 288, 290, 297], "refer": [24, 25, 30, 34, 43, 67, 81, 173, 174, 178, 180, 233, 235, 237, 274, 275, 277, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "column": [24, 64, 65, 67, 79, 107, 108, 166, 168, 197, 217, 222, 228, 270, 275, 277, 278, 279, 280, 287, 288, 297], "output_arrai": [24, 30, 40, 42, 45, 47, 67, 71], "2d": [24, 45, 67, 81, 104, 107, 108, 110, 170, 195, 204, 217, 234, 236, 275, 280, 286, 287, 290, 297, 298], "aarrai": 24, "response_coordin": [24, 81, 275, 279, 297], "npz": [24, 43, 58, 279, 280, 297], "to_imat_struct": 24, "setrecord": 24, "created": 24, "datetim": 24, "modifyd": 24, "ownernam": 24, "abscissadatatyp": 24, "abscissatypequ": 24, "abscissaaxislab": 24, "abscissaunitslab": 24, "ordnumdatatyp": 24, "ordnumtypequ": 24, "orddendatatyp": 24, "orddentypequ": 24, "ordinateaxislab": 24, "ordinateunitslab": 24, "zaxisdatatyp": 24, "zaxistypequ": 24, "zgeneralvalu": 24, "zrpmvalu": 24, "zordervalu": 24, "ztimevalu": 24, "uservalue1": [24, 140], "uservalue2": [24, 140], "uservalue3": [24, 140], "uservalue4": [24, 140], "samplingtyp": 24, "weightingtyp": 24, "windowtyp": 24, "amplitudeunit": 24, "normal": [24, 30, 43, 51, 110, 112, 234, 275, 280, 285, 286, 288, 297], "octaveformat": 24, "octaveavgtyp": 24, "expdampingfact": 24, "pulsesperrev": 24, "measurementrun": 24, "loadcas": 24, "irigtim": 24, "imat": [24, 35, 43, 52, 67, 70], "toolbox": 24, "imat_fn": [24, 35], "note": [24, 25, 50, 78, 103, 104, 105, 110, 116, 119, 170, 197, 222, 233, 234, 236, 237, 270, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "faster": [24, 285, 290], "to_imat_struct_arrai": 24, "descript": [24, 29, 43, 45, 47, 62, 90, 275, 279, 288, 297], "data_dict": 24, "specificdatatyp": 24, "unknown": [24, 27, 43, 67, 71], "typequ": 24, "verbos": [24, 116, 129, 130], "slower": [24, 286], "record": [24, 110, 275, 291], "date": [24, 110], "wa": [24, 43, 275, 276, 277, 278, 280, 281, 285, 286, 287, 288, 290, 291, 297], "now": [24, 67, 275, 276, 277, 278, 279, 280, 281, 286, 287, 288, 290, 291, 297], "owner": 24, "associ": [24, 237, 275, 285, 286, 287, 288, 290, 297], "qualifi": [24, 139, 298], "label": [24, 25, 43, 64, 275, 278, 281, 285, 286, 287, 288, 297], "unit": [24, 103, 107, 108, 136, 234, 236, 275, 278, 286, 287, 288, 290, 298], "numer": [24, 275, 277, 278, 280, 281, 287, 288, 290, 297], "denomin": [24, 286, 288], "output_struct": 24, "transform_coordinate_system": [24, 67, 275, 281], "original_geometri": [24, 67, 281], "new_geometri": [24, 67, 73, 281], "node_id_map": [24, 43, 67, 72, 77, 79, 276, 281], "perform": [24, 30, 43, 48, 67, 74, 81, 172, 233, 236, 237, 275, 276, 279, 280, 281, 282, 283, 286, 287, 289, 290, 291, 298], "transform": [24, 25, 43, 49, 67, 80, 81, 116, 127, 128, 270, 276, 277, 278, 281, 285, 287, 288, 291, 297, 298], "current": [24, 25, 43, 46, 48, 67, 110, 119, 275, 280, 281, 283, 286, 288, 297, 298], "desir": [24, 67, 69, 81, 110, 234, 236, 241, 275, 277, 280, 281, 290, 297], "id_map": [24, 43, 67, 79, 276, 281], "origin": [24, 43, 67, 73, 75, 110, 112, 170, 204, 249, 250, 251, 252, 275, 276, 277, 278, 281, 285, 286, 288, 291, 297], "new": [24, 43, 46, 64, 67, 81, 82, 110, 112, 274, 275, 277, 279, 281, 291, 297], "do": [24, 25, 28, 30, 34, 67, 79, 81, 275, 276, 277, 278, 279, 280, 281, 284, 287, 288, 289, 290, 291, 297], "common": [24, 67, 79, 120, 278, 279, 286, 288, 290, 291, 297], "map": [24, 43, 50, 57, 67, 79, 110, 112, 276, 280, 281, 288, 290, 297], "mean": [24, 30, 34, 67, 81, 228, 275, 276, 277, 280, 285, 286, 287, 288, 290, 291, 297, 298], "occur": [24, 43, 67, 127, 232, 279, 280, 285, 286, 287, 288, 290, 291, 297], "validate_common_abscissa": 24, "allclose_kwarg": 24, "same": [24, 25, 43, 48, 49, 50, 60, 62, 67, 73, 75, 81, 195, 204, 275, 276, 278, 279, 280, 286, 287, 290, 291, 297], "allclos": 24, "toler": [24, 28, 29, 76, 81, 170, 297], "power": [25, 26, 29, 277, 297, 298], "spectral": [25, 29, 158, 185, 277, 280, 290, 291, 297, 298], "densiti": [25, 29, 81, 103, 104, 105, 158, 217, 275, 277, 297, 298], "angl": [25, 169, 171, 247, 249, 250, 254, 267, 277, 286, 287, 290, 297], "comput": [25, 28, 29, 30, 34, 43, 46, 55, 56, 59, 67, 72, 74, 75, 77, 81, 103, 116, 119, 166, 168, 169, 176, 178, 184, 185, 195, 197, 198, 199, 204, 209, 217, 228, 231, 233, 234, 236, 237, 270, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 289, 291, 298], "psd": [25, 277], "frequenc": [25, 27, 28, 29, 30, 34, 41, 67, 78, 79, 81, 90, 94, 95, 119, 156, 178, 181, 182, 190, 217, 222, 226, 228, 231, 233, 234, 236, 237, 241, 245, 258, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 288, 289, 291, 298], "line": [25, 43, 47, 48, 50, 81, 110, 119, 127, 128, 131, 178, 217, 222, 228, 233, 234, 236, 237, 241, 275, 277, 279, 280, 285, 286, 287, 290, 291, 297, 298], "valueerror": [25, 28, 29, 30, 34, 43, 56, 64, 67, 71, 79, 81, 195, 267], "coherencearrai": 25, "error_summari": [25, 277], "figure_kwarg": [25, 226, 277], "linewidth": [25, 90, 226, 277, 285, 287, 288, 290, 297], "cpsd_matric": 25, "error": [25, 74, 75, 76, 79, 126, 127, 129, 130, 276, 277, 278, 279, 280, 288, 290, 291, 297], "summari": [25, 282, 283, 284, 289], "against": [25, 275, 276, 277, 278, 279, 280, 281, 286, 290, 291, 297], "cpsd": [25, 29, 184, 216, 218, 219, 221, 222, 225, 228, 230, 277, 298], "kei": [25, 129, 130, 167, 279, 286, 287, 288, 297, 298], "_": [25, 278, 288, 290, 291], "replac": [25, 204], "space": [25, 28, 29, 45, 60, 79, 81, 119, 170, 197, 217, 222, 228, 275, 279, 280, 281, 288, 290, 297], "metric": [25, 170, 209, 277, 290, 291, 297], "ey": [25, 43, 64, 277], "rm": [25, 29, 228, 239, 241, 244, 275, 277, 280, 290], "full_matrix": [25, 277], "breakpoint_frequ": [25, 229, 277], "breakpoint_level": [25, 229, 277], "breakpoint_interpol": [25, 229], "lin": 25, "min_frequ": [25, 178, 181, 182, 190, 229], "max_frequ": [25, 90, 99, 178, 181, 182, 190, 229], "diagon": [25, 29, 43, 64, 81, 275, 277, 281, 287, 288], "construct": [25, 33, 35, 43, 52, 58, 67, 70, 267, 275, 276, 277, 278, 280, 281, 286, 287, 290, 291, 297, 298], "full": [25, 64, 85, 217, 275, 276, 278, 279, 281, 287, 288, 290, 291, 297], "squar": [25, 81, 105, 228, 234, 236, 270, 277, 280, 281, 288, 290, 297], "asd": [25, 220], "breakpoint": [25, 277], "level": [25, 275, 277, 280, 286, 290, 291, 297], "interpol": [25, 67, 280], "low": [25, 178, 276, 278, 280, 286, 288, 290, 291], "cutoff": [25, 275], "below": [25, 275, 277, 278, 279, 280, 285, 290, 291, 297], "zero": [25, 29, 41, 43, 46, 81, 110, 275, 276, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "high": [25, 178, 275, 276, 278, 280, 286, 288, 291, 297], "abov": [25, 49, 50, 60, 62, 78, 275, 276, 285, 286, 287, 288, 290, 291, 297], "invalid": [25, 30, 43, 67, 79, 278], "inconsist": 25, "generate_time_histori": [25, 277], "time_length": [25, 286], "output_oversampl": [25, 222, 277], "length": [25, 29, 30, 34, 35, 43, 67, 73, 81, 87, 103, 104, 110, 112, 237, 275, 277, 280, 290, 291, 297], "sampl": [25, 29, 30, 34, 43, 48, 217, 222, 232, 237, 241, 275, 279, 280, 286, 290, 291, 297], "nyquist": [25, 241, 280, 291], "constant": [25, 103, 285, 286, 287, 288], "overlap": [25, 29, 30, 34, 81, 217, 237, 275, 276, 279, 280, 290, 291, 297], "add": [25, 43, 46, 48, 116, 275, 277, 278, 279, 281, 286, 287, 288, 290, 291, 297], "techniqu": [25, 107, 108, 278, 279, 282, 287, 288, 291], "whole": [25, 281], "realiz": [25, 222, 290, 291, 297], "so": [25, 30, 81, 110, 116, 275, 276, 277, 278, 279, 280, 281, 284, 286, 287, 288, 290, 291, 297], "longer": [25, 110, 280, 286, 288, 291, 297], "oversampl": [25, 81, 241, 275, 277, 280, 286, 290, 297], "appli": [25, 28, 29, 30, 34, 43, 45, 46, 48, 67, 74, 81, 82, 237, 241, 275, 276, 277, 278, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291], "equal": [25, 28, 29, 67, 103, 236, 275, 278, 280, 286, 287, 288, 290, 297], "bin": [25, 280, 291], "time_histori": [25, 297], "satisfi": [25, 197, 277, 281, 288, 291], "timehistoryarrai": [25, 28, 30, 34, 43, 48, 67, 81, 123, 170, 185, 275, 277, 279, 280, 297, 298], "get_asd": 25, "mimo_forward": [25, 277], "transfer_funct": [25, 119], "forward": [25, 277, 297], "mimo": [25, 280, 282, 283], "problem": [25, 275, 277, 282, 284, 285, 289], "gxx": 25, "hxv": 25, "gvv": 25, "transferfunctionarrai": [25, 34, 67, 81, 174, 178, 181, 182, 190, 191, 275, 279, 286, 290, 297], "transfer": [25, 28, 30, 34, 67, 119, 158, 178, 277, 279, 290], "between": [25, 43, 45, 57, 72, 79, 81, 82, 119, 209, 237, 241, 270, 275, 276, 277, 278, 279, 280, 281, 287, 288, 290, 291, 297], "mimo_invers": [25, 277], "response_weighting_matrix": [25, 277], "excitation_weighting_matrix": [25, 277], "regularization_paramet": [25, 277], "svd_regular": 25, "estim": [25, 76, 195, 274, 277, 279, 280, 290, 291, 297], "random": [25, 241, 275, 279, 282, 283, 285, 287, 290, 297], "vibrat": [25, 274, 280, 282, 283, 284, 285, 288, 297], "sdpy": [25, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "weight": [25, 178, 181, 190, 270, 297], "excit": [25, 81, 238, 241, 275, 279, 282, 284, 285, 289], "condit": [25, 45, 81, 82, 107, 170, 277, 280, 281, 286, 290, 297, 298], "svd": [25, 270], "truncat": [25, 275, 280], "matric": [25, 67, 80, 81, 102, 103, 119, 166, 195, 196, 197, 199, 200, 216, 236, 275, 276, 277, 279, 281, 286, 287, 289, 290, 297, 298], "solv": [25, 76, 197, 275, 277, 279, 280, 281, 286, 290, 291, 297], "pseudoinvers": [25, 297], "we": [25, 116, 275, 276, 277, 278, 279, 280, 281, 284, 286, 287, 288, 289, 290, 291, 297], "t": [25, 43, 90, 110, 112, 197, 200, 258, 270, 275, 276, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "w": [25, 110, 270, 277, 280], "l": [25, 274, 290], "regular": [25, 280], "rcond": [25, 81, 82], "linalg": [25, 275, 279, 281, 287, 288], "pinv": 25, "plot_asd": [25, 277], "well": [25, 39, 80, 123, 246, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 290, 291, 297, 298], "plot_magnitude_coherence_phas": [25, 277], "plot_ax": 25, "sharex": [25, 225, 275, 278, 279, 285, 286, 287, 288, 290, 297], "sharei": [25, 225, 285, 286, 287, 288, 297], "logx": 25, "logi": 25, "magnitude_plot_kwarg": [25, 277], "coherence_plot_kwarg": [25, 277], "angle_plot_kwarg": [25, 277], "upper": [25, 166, 168, 178, 197, 200, 277, 297], "triangl": [25, 45, 50, 110, 112, 277, 280, 281, 297], "lower": [25, 178, 275, 277, 286, 287, 290, 291, 297], "tick": 25, "push": [25, 286, 287, 288, 290], "anoth": [25, 116, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 290, 291, 298], "room": 25, "share": [25, 279, 287, 291, 297], "rang": [25, 275, 279, 280, 281, 285, 286, 288, 290, 291, 297], "logarithm": [25, 297], "logrithm": [25, 286], "keyward": 25, "rmss": 25, "set_coherence_phas": [25, 277], "coherence_arrai": 25, "angle_arrai": 25, "maintain": [25, 275, 277, 286, 288], "to_rattlesnake_specif": 25, "coordinate_ord": 25, "spectra": [26, 28, 29, 41, 158, 291], "acceler": [27, 67, 81, 119, 178, 234, 236, 275, 279, 280, 287, 288, 290, 297], "excitation_forc": 27, "heat_flux": 27, "mass": [27, 43, 50, 67, 78, 80, 81, 102, 103, 104, 119, 234, 236, 275, 276, 278, 280, 281, 284, 289, 290, 297, 298], "pressur": 27, "reaction_forc": 27, "rpm": [27, 285], "sound_intens": 27, "sound_pow": 27, "sound_pressur": 27, "strain": [27, 50, 278, 285], "stress": [27, 50, 285, 286], "temperatur": 27, "veloc": [27, 67, 81, 119, 178, 234, 236, 287, 288, 297], "linear": [28, 50, 67, 103, 104, 112, 116, 195, 197, 229, 275, 276, 278, 279, 280, 287, 288, 291, 297], "fft": [28, 29, 81, 232, 233, 237, 241, 275, 280, 285, 287, 289], "ifft": 28, "rtol": [28, 29], "atol": [28, 29], "1e": [28, 29, 76, 81, 82, 119, 271, 273, 277, 288, 291], "08": [28, 29, 76, 81, 82, 278], "yet": [28, 29, 67, 280, 281, 291, 297], "rel": [28, 29, 76, 291, 297], "abcsissa": [28, 29], "check": [28, 29, 74, 275, 276, 277, 280, 281, 283, 284, 289, 297], "notimplementederror": [28, 29, 67, 81], "samples_per_fram": [29, 217, 275, 279, 280, 297], "averages_to_keep": [29, 217], "only_asd": [29, 217], "per": [29, 43, 44, 46, 48, 103, 110, 112, 116, 119, 217, 222, 234, 236, 237, 241, 275, 276, 279, 286, 288, 290, 297], "frame": [29, 30, 34, 44, 46, 48, 90, 92, 94, 95, 99, 217, 237, 241, 275, 280, 290, 291, 297], "fraction": [29, 30, 34, 78, 81, 217, 237, 285, 286, 288, 290], "percent": [29, 67, 79, 286, 297], "50": [29, 30, 34, 41, 43, 48, 217, 237, 276, 277, 278, 280, 285, 286, 287, 288, 290, 291, 297], "averag": [29, 30, 34, 217, 233, 237, 241, 275, 277, 280, 290, 291, 297], "mani": [29, 275, 276, 277, 278, 280, 288, 290, 291, 297, 298], "autospectr": [29, 217], "cpsd_arrai": 29, "cross": [29, 103, 104, 105, 268, 281, 286, 287, 288, 290, 298], "measur": [29, 30, 34, 67, 75, 275, 277, 280, 281, 285, 286, 287, 288, 289, 290, 291, 297], "split": [29, 30, 34, 61, 288, 291], "up": [29, 30, 34, 43, 61, 197, 277, 279, 282, 285, 287, 288, 290, 291, 297], "togeth": [29, 30, 81, 82, 116, 276, 278, 280, 286, 288, 290, 297], "Be": 29, "awar": [29, 288, 291, 297], "period": [29, 291], "mai": [29, 30, 34, 241, 275, 276, 277, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "effect": [29, 108, 275, 277, 278, 280, 281, 286, 288, 290, 291, 297, 298], "out": [29, 76, 170, 275, 276, 277, 279, 280, 281, 283, 285, 286, 287, 288, 290, 291, 297], "becaus": [29, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "spectrumarrai": 29, "from_exodu": [29, 43, 67, 275, 276, 279, 280, 281, 298], "exo": [29, 43, 51, 67, 69, 112, 113, 275, 276, 279, 280, 281, 298], "x_disp": [29, 67, 69, 81], "dispx": [29, 67, 69, 81, 279, 280], "y_disp": [29, 67, 69, 81], "dispi": [29, 67, 69, 81, 279, 280], "z_disp": [29, 67, 69, 81], "dispz": [29, 67, 69, 81, 279, 280], "x_rot": [29, 67, 69, 81], "y_rot": [29, 67, 69, 81], "z_rot": [29, 67, 69, 81], "timestep": [29, 48, 67, 69, 81, 110, 112, 279, 280, 297], "exodu": [29, 43, 51, 67, 69, 81, 109, 112, 116, 276, 280, 281, 282, 298], "exodusinmemori": [29, 43, 51, 67, 69, 81, 110, 116, 275, 279, 298], "denot": [29, 67, 69, 77, 110, 166, 168, 197, 275, 276, 280, 286, 287, 288, 290, 297], "nodal": [29, 67, 69, 103, 110, 112, 158, 298], "frf": [30, 34, 67, 81, 90, 99, 174, 178, 181, 183, 184, 185, 190, 233, 234, 236, 237, 274, 275, 277, 280, 282, 285, 286, 287, 291, 297, 298], "compute_cmif": [30, 297], "part": [30, 90, 99, 275, 280, 281, 284, 285, 286, 287, 288, 289, 297], "both": [30, 74, 275, 276, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "track": [30, 90, 99, 276, 277, 286, 287, 297], "imag": [30, 44, 46, 48, 90, 91, 99, 170, 195, 197, 286, 287, 290, 291, 297, 298], "singular": [30, 197, 280, 288, 297], "left": [30, 43, 48, 100, 167, 197, 275, 277, 280, 285, 286, 288, 291, 297], "modeindicatorfunctionarrai": 30, "compute_mif": 30, "mif_typ": [30, 181, 190], "mif_arg": [30, 181], "mif_kwarg": [30, 181], "mmif": [30, 280, 297], "compute_": 30, "mif": 30, "compute_mmif": [30, 297], "mass_matrix": [30, 214], "multi": [30, 43, 48, 64, 180, 275, 280, 286, 291, 297], "compute_nmif": [30, 297], "delay_respons": 30, "dt": [30, 67, 81, 170, 232, 237, 239, 240, 242, 244, 245, 275, 280, 285, 286, 287, 288, 290, 291, 297], "adjust": [30, 46, 48, 232, 277, 297], "had": [30, 275, 281, 288, 297], "been": [30, 110, 112, 204, 276, 277, 278, 280, 281, 285, 286, 291, 297, 298], "shift": [30, 43, 232, 280, 285, 286, 291], "shifted_transfer_funct": 30, "from_time_data": [30, 275, 279, 290, 297], "reference_data": [30, 34], "response_data": [30, 34, 280], "samples_per_averag": [30, 34, 237, 279, 290], "h1": [30, 34, 233, 237, 280, 291], "timedata2frf_kwarg": [30, 34], "treat": [30, 34, 67, 276, 280, 288, 290], "1d": [30, 34, 81, 107, 108, 110, 234, 236, 237, 241, 275, 297], "coeffici": [30, 34, 67, 78, 237, 279, 280, 287, 288, 297], "No": [30, 34, 233, 237, 287, 288, 290, 291], "obtain": [30, 34, 43, 67, 237, 275, 276, 277, 278, 279, 280, 286, 287, 291, 297], "timedata2frf": [30, 34], "substructure_by_constraint_matrix": 30, "dof": [30, 104, 119, 275, 276, 277, 278, 286, 287, 288, 297, 298], "constraint_matrix": [30, 81, 281], "substructur": [30, 81, 85, 282, 283, 298], "constraint": [30, 43, 50, 51, 81, 82, 276, 278, 281, 283, 291], "constrained_frf": [30, 297], "constrain": [30, 81, 82, 280, 281, 297], "substructure_by_coordin": [30, 81, 297], "dof_pair": [30, 81, 297], "To": [30, 50, 110, 112, 116, 275, 278, 279, 280, 281, 283, 286, 287, 288, 290, 297], "constain": 30, "ground": [30, 50, 81, 286, 287, 288], "fix": [30, 81, 275, 276, 278, 280, 285, 286, 287, 288, 297], "cannot": [30, 275, 276, 279, 281, 287, 288, 291, 297], "move": [30, 275, 278, 280, 281, 285, 286, 287, 288, 290, 297], "transmiss": [31, 85, 282, 283, 297], "quantiti": [32, 46, 48, 278, 285, 287, 290, 297], "data_typ": [33, 156, 297], "comment1": [33, 78, 275, 276, 278, 279, 297], "comment2": [33, 78, 275, 278, 279, 297], "comment3": [33, 78, 275, 278, 279, 297], "comment4": [33, 78, 275, 278, 279, 297], "comment5": [33, 78, 275, 279, 297], "broadcast": [33, 275, 287, 297, 298], "final": [33, 116, 173, 241, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "comment": [33, 46, 78, 275, 276, 278, 288, 297], "describ": [33, 46, 222, 279, 285, 288, 290, 297], "obj": 33, "imat_fn_struct": 35, "In": [35, 43, 52, 67, 70, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 297], "unless": [35, 110, 112], "procedur": [39, 66], "handl": [39, 66, 246, 275, 277, 278, 279, 280, 281, 286, 290, 297], "oper": [39, 66, 275, 278, 279, 280, 281, 290, 297, 298], "model": [39, 43, 51, 66, 81, 83, 85, 101, 103, 110, 112, 116, 118, 119, 143, 277, 279, 281, 282, 283, 285, 286, 287, 288, 290], "subcompon": [39, 246], "tracelin": [39, 43, 47, 58, 62, 162, 246, 278, 279, 281, 288, 298], "coordinate_system_arrai": 40, "u40": [40, 47, 275, 297], "uint16": [40, 42, 45, 47], "cs_type": [40, 49, 153, 275, 297], "coordinatesytemarrai": 40, "deflection_shape_data": [41, 43], "background_plotter_kwarg": [41, 43, 46], "auto_upd": [41, 43, 46, 48], "01": [41, 46, 181, 190, 275, 276, 278, 280, 281, 283, 284, 288, 290, 291, 297], "undeformed_opac": [41, 43, 46, 48, 275, 276, 278, 279, 281], "starting_scal": [41, 43, 46], "deformed_opac": [41, 43, 46, 48, 275, 276, 279, 281], "num_curv": [41, 43, 48], "shapeplott": [41, 43, 290], "anim": [41, 43, 44, 46, 48, 279, 280, 286, 288, 297, 298], "deflect": [41, 43, 56, 185, 275, 278, 280, 285, 286, 288, 290], "backgroundplott": [41, 43, 44, 46, 48], "constructor": [41, 46, 64, 67], "opac": [41, 43, 46, 48], "undeform": [41, 43, 46, 48, 286], "start": [41, 43, 46, 48, 275, 277, 278, 279, 280, 281, 286, 287, 288, 290, 291, 297], "curv": [41, 43, 48, 50, 67, 180, 186, 275, 279, 280, 285, 288, 297, 298], "selector": [41, 43, 48, 280], "modify_abscissa": [41, 48], "save_multiline_anim": 41, "frame_r": [41, 44, 46, 48, 92, 94, 95, 99], "phase_change_per_fram": 41, "087": 41, "frequency_change_per_fram": 41, "start_phas": 41, "start_frequ": 41, "end_frequ": 41, "individual_imag": [41, 44, 46, 48], "element_arrai": 42, "uint8": 42, "node_list": [42, 43, 45, 47], "defc": [43, 275, 288, 297], "disc": [43, 275, 288, 297], "coordinate_system": [43, 55, 56, 58, 59, 275, 281, 288, 297], "most": [43, 278, 279, 285, 286, 288, 290, 291, 297, 298], "work": [43, 165, 275, 276, 278, 279, 281, 283, 284, 285, 288, 290, 291, 297, 298], "spatial": [43, 281], "It": [43, 110, 197, 232, 275, 276, 277, 278, 279, 280, 283, 285, 286, 287, 288, 290, 291, 297, 298], "3d": [43, 45, 107, 108, 170, 197, 204, 222, 228, 234, 236, 275, 280, 282, 288, 290, 297], "initi": [43, 44, 57, 67, 81, 275, 277, 279, 280, 287, 288, 297], "support": 43, "nodearrai": [43, 60, 275, 276, 281, 288, 297, 298], "coordinatesystemarrai": [43, 45, 49, 55, 56, 59, 275, 288, 297, 298], "tracelinearrai": [43, 62, 275, 288, 297, 298], "elementarrai": [43, 45, 50, 275, 288, 297, 298], "add_tracelin": [43, 275, 279, 281], "node_id": 43, "greater": 43, "modif": [43, 277], "made": [43, 78, 84, 86, 116, 288, 291, 297], "place": [43, 168, 275, 278, 285, 286, 288, 297], "camera_visu": 43, "k": [43, 67, 81, 103, 104, 119, 166, 168, 196, 197, 198, 199, 200, 201, 204, 236, 260, 261, 263, 278, 286, 287, 288, 290, 291], "rt": [43, 166, 168, 196, 197, 198, 199, 204], "image_s": 43, "camera": [43, 48, 165, 166, 167, 168, 170, 194, 195, 196, 197, 198, 199, 200, 204, 286, 291, 297], "intrins": [43, 166, 167, 168, 195, 198, 199, 200, 204], "extrins": [43, 166, 167, 168, 195, 197, 198, 199, 200, 204], "distanc": [43, 74, 81, 82, 204, 281], "rai": 43, "project": [43, 45, 75, 166, 168, 200, 270, 275, 277, 279, 283, 290, 297], "pinhol": [43, 204], "assign": [43, 65, 81, 110, 275, 276, 280, 281, 286, 287, 288], "geoemtri": 43, "block": [43, 51, 81, 110, 112, 116, 185, 275, 276, 279, 280, 281, 286, 297], "preferred_local_orient": [43, 51, 275], "secondary_preferred_local_orient": [43, 51, 275], "import": [43, 51, 109, 276, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 298], "flag": [43, 51, 170, 275, 280], "instrumnet": [43, 51], "finit": [43, 51, 67, 101, 116, 276, 278, 279, 281, 282, 283, 288, 291, 297], "sensor": [43, 49, 50, 51, 60, 62, 76, 107, 108, 275, 277, 279, 281, 285, 286, 290], "orient": [43, 51, 76, 103, 275, 279, 297], "perpendicular": [43, 51, 104, 275, 290, 291, 297], "surfac": [43, 50, 51, 110, 112, 116, 275, 276, 281], "mount": [43, 51], "global": [43, 45, 51, 55, 56, 59, 76, 110, 275, 277, 280, 287, 288], "prefer": [43, 51, 275, 277, 286, 288, 297], "first": [43, 48, 51, 78, 79, 81, 103, 107, 108, 110, 166, 168, 170, 197, 222, 228, 236, 241, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "try": [43, 51, 76, 278, 281, 287, 288, 290, 291], "align": [43, 51, 67, 77, 275, 276, 290, 291], "itself": [43, 51, 112, 275, 285, 286, 290, 297], "much": [43, 51, 275, 276, 277, 278, 285, 286, 287, 288, 290, 291, 297], "point": [43, 45, 48, 51, 74, 110, 170, 195, 197, 204, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 270, 275, 278, 279, 280, 281, 285, 286, 288, 290, 291, 297], "secondari": [43, 51, 275], "parallel": [43, 51, 297], "primari": [43, 51, 290], "from_imat_struct": [43, 67], "imat_fem_struct": [43, 52, 67, 70], "imat_fem": [43, 52], "unv_dict": [43, 53, 54], "readunv": [43, 53, 54, 67, 298], "global_deflect": 43, "deform": [43, 48, 278, 279, 285, 286, 288, 298], "motion": [43, 67, 104, 236, 259, 270, 275, 277, 278, 283, 286, 288, 290, 298], "global_node_coordin": 43, "respect": [43, 58, 66, 267, 275, 276, 277, 280, 281, 285, 286, 288, 297], "portion": [43, 58, 74, 81, 119, 275, 276, 277, 279, 280, 288, 290, 291, 297, 298], "need": [43, 58, 67, 77, 116, 232, 275, 276, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "proper": [43, 58, 275, 277, 279], "map_id": 43, "traceline_id_map": 43, "element_id_map": 43, "coordinate_system_id_map": 43, "accept": [43, 107, 108, 275, 276, 277, 279, 280, 286, 287, 291, 297], "being": [43, 44, 46, 48, 67, 69, 110, 197, 275, 277, 280, 286, 287, 288, 290, 291, 297], "unchang": [43, 277, 280, 297], "geom_out": 43, "modify_id": [43, 278], "node_chang": [43, 278], "traceline_chang": 43, "element_chang": 43, "coordinate_system_chang": 43, "amount": [43, 44, 81, 232, 277, 278, 280, 286, 287, 288, 290, 291, 297], "overlay_geometri": [43, 281, 297], "color_overrid": [43, 67, 73, 276, 279, 281, 297], "return_node_id_offset": [43, 281, 297], "avoid": [43, 275, 276, 281, 287], "conflict": [43, 275, 276, 278, 281, 297], "iterbl": [43, 67, 73], "overrid": [43, 67, 73, 297], "old": [43, 277, 279], "node_offset": [43, 281], "node_s": [43, 275, 278, 279, 281, 285], "line_width": [43, 275, 278, 279, 281], "view_up": [43, 275, 279, 281], "view_from": [43, 278, 285], "plotter": [43, 44, 46, 275, 279, 280, 288, 290, 297], "show_edg": [43, 275, 281], "interact": [43, 101, 174, 280, 285, 288, 290, 297, 298], "displai": [43, 46, 48, 275, 280, 297], "pixel": [43, 48, 170, 197, 198, 199, 204], "edg": [43, 50, 277, 280, 297], "show": [43, 44, 46, 48, 64, 90, 110, 112, 175, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "transpar": [43, 48], "complet": [43, 48, 131, 279, 280, 297], "opaqu": [43, 48], "invis": 43, "view": [43, 195, 280, 285, 288, 290], "draw": [43, 285, 286], "keyerror": 43, "referenc": [43, 275, 287, 288, 297], "face_mesh": 43, "mesh": [43, 110, 112, 116, 275, 276, 280, 281, 297], "point_mesh": 43, "solid_mesh": 43, "volum": [43, 116, 275], "plot_coordin": [43, 275, 277, 278, 279, 285, 288, 290, 291, 297], "arrow_scal": [43, 275, 277, 288, 297], "arrow_scale_typ": 43, "bbox": 43, "label_dof": [43, 275, 277, 278, 279, 285, 288, 290, 297], "label_font_s": 43, "arrow_ends_on_nod": 43, "arrow": [43, 279, 297], "proport": [43, 78, 81, 280, 286, 288], "bound": [43, 297], "box": [43, 279, 280, 281, 297], "raw": [43, 275, 297], "how": [43, 46, 75, 116, 127, 128, 275, 276, 277, 278, 280, 281, 283, 284, 286, 287, 288, 289, 290, 291, 297], "font": 43, "tip": [43, 119, 275, 277, 278, 285, 291, 297], "end": [43, 48, 275, 276, 278, 279, 280, 286, 287, 288, 290, 291, 297], "begin": [43, 275, 278, 279, 280, 286, 287, 288, 290, 291, 297], "defualt": 43, "plot_deflection_shap": [43, 285, 290, 297], "editor": [43, 44, 48], "plot_shap": [43, 174, 182, 191, 275, 276, 278, 279, 280, 281, 288, 290, 297], "shapearrai": [43, 46, 48, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 174, 275, 276, 277, 278, 279, 281, 288, 297, 298], "plot_transi": [43, 280, 285, 297], "displacement_data": [43, 48, 112], "displacement_scal": [43, 48, 285, 297], "frames_per_second": [43, 48], "transformation_shap": [43, 48], "app": [43, 44, 48], "window_s": [43, 44, 48], "off_screen": [43, 44, 48], "allow_quit_keypress": [43, 44, 48], "toolbar": [43, 44, 46, 48, 288, 297], "menu_bar": [43, 44, 48], "update_app_icon": [43, 44, 48], "kwarg": [43, 44, 48, 67, 105, 110, 113, 117, 175, 226, 275], "transientplott": [43, 297], "transient": [43, 48, 185, 275, 282, 283, 285, 286, 287, 288, 290, 291, 297], "step": [43, 48, 67, 81, 110, 237, 275, 276, 277, 278, 279, 280, 281, 285, 286, 288, 290, 297], "expand": [43, 48, 67, 110, 275, 279, 288], "run": [43, 48, 121, 276, 279, 280, 281, 282, 283, 285, 290, 291, 297, 298], "qapplic": [43, 44, 48], "1024": [43, 48], "768": [43, 48], "render": [43, 48], "off": [43, 48, 275, 277, 281, 286, 287, 288, 290, 291], "screen": [43, 48, 275], "autom": [43, 48, 275, 280, 297], "screenshot": [43, 48, 297], "debug": [43, 48], "exit": [43, 48, 280], "press": [43, 48, 275, 280, 288, 297], "q": [43, 48, 112, 279, 288, 297], "vtk": [43, 48], "qt": [43, 44, 48], "icon": [43, 48, 279], "logo": [43, 48], "pyvista": [43, 44, 48, 278], "titl": [43, 48, 92, 93, 96, 97, 98, 99, 110, 279, 290, 291], "multi_sampl": [43, 48], "mitig": [43, 48], "alias": [43, 48, 275, 291], "good": [43, 48, 275, 276, 277, 278, 279, 280, 286, 288, 290, 291, 297], "better": [43, 48, 64, 78, 178, 275, 280, 281, 285, 287, 288, 290, 291, 297], "impact": [43, 48, 280, 290, 291], "line_smooth": [43, 48], "enabl": [43, 48, 112, 275, 280, 297], "smoth": [43, 48], "point_smooth": [43, 48], "polygon_smooth": [43, 48], "polygon": [43, 48], "rate": [43, 48, 217, 222, 275, 277, 280, 287, 297], "actor": [43, 48], "requir": [43, 105, 110, 233, 237, 241, 275, 276, 277, 279, 280, 281, 286, 287, 288, 289, 290, 298], "rigid_body_shap": [43, 74, 75], "inertia": [43, 103], "cg": [43, 275], "principal_ax": 43, "rigid": [43, 50, 74, 75, 76, 270, 276, 278, 282, 287, 288, 290, 297], "bodi": [43, 74, 75, 76, 119, 276, 278, 282, 286, 288, 290, 297], "analyt": [43, 74, 75, 76, 178, 275, 291], "3x3": [43, 169, 171, 198, 199, 200, 204, 267], "moment": [43, 103, 275, 290], "center": [43, 275, 280, 286, 297], "graviti": [43, 275], "articl": [43, 81, 275, 279, 290], "those": [43, 66, 75, 129, 130, 275, 277, 279, 280, 281, 285, 287, 288, 290, 291, 297, 298], "output_shap": 43, "doesn": [43, 110, 112, 281, 288, 290, 291], "write_to_unv": [43, 67], "write_nod": 43, "write_coordinate_system": 43, "write_tracelin": 43, "write_el": 43, "dataset_2412_kwarg": 43, "dataset_2420_kwarg": 43, "write": [43, 67, 110, 112, 125, 131, 279, 280, 286, 288, 290, 297, 298], "unvers": 43, "written": [43, 67, 110, 280, 286], "instead": [43, 67, 81, 234, 236, 275, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "similar": [43, 67, 275, 276, 280, 285, 286, 287, 291, 297], "2411": [43, 298], "2420": [43, 298], "82": [43, 50, 275, 278, 297, 298], "2412": [43, 275, 297, 298], "app_window_class": 44, "mainwindow": 44, "essenti": [44, 277, 280, 291], "howev": [44, 234, 236, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "small": [44, 275, 276, 280, 286, 288, 290, 291, 297, 298], "save_rotation_anim": 44, "path": [44, 46, 48, 110, 123, 129, 130, 167, 275, 297, 298], "them": [44, 46, 48, 197, 275, 276, 277, 278, 279, 280, 281, 286, 287, 288, 290, 297], "gif": [44, 46, 48, 279, 288, 297], "boolean": [44, 46, 48, 297], "individu": [44, 46, 48, 49, 50, 60, 62, 279, 280, 288], "png": [44, 46, 48, 279], "img": [44, 46, 48], "node_arrai": 45, "by_grid": 45, "grid_spac": [45, 275], "x_min": 45, "y_min": 45, "z_min": 45, "x_max": 45, "y_max": 45, "z_max": 45, "grid": [45, 87, 275, 278, 281, 286, 287, 291], "approxim": [45, 275, 278, 286, 288, 290, 297], "closest": [45, 197, 275, 276, 281], "by_posit": [45, 275, 276, 281], "position_arrai": 45, "nodarrai": 45, "def_c": [45, 60, 275, 297], "disp_c": [45, 60, 275, 297], "global_coordin": 45, "cs_arrai": 45, "project_to_minimum_plan": 45, "return_3d": 45, "best": [45, 76, 107, 108, 275, 278, 279, 290], "plane": [45, 50, 74, 104, 275, 285, 290], "triangul": [45, 110, 112, 281], "projection_funct": 45, "return_element_arrai": 45, "element_color": 45, "condition_threshold": [45, 281], "delaunai": 45, "simpli": [45, 76, 81, 110, 116, 275, 277, 278, 279, 280, 281, 286, 288, 290, 291, 297], "simplic": 45, "threshold": [45, 74, 81, 190, 271, 273, 281], "remov": [45, 107, 108, 275, 279, 280, 286, 288, 290, 291, 297], "poorli": 45, "shape_nam": 46, "show_damp": 46, "geometryplott": [46, 48], "damp": [46, 67, 78, 79, 80, 81, 90, 94, 95, 119, 178, 190, 234, 236, 275, 276, 277, 278, 279, 280, 281, 284, 285, 289, 290, 291, 297, 298], "add_menu_bar": [46, 48], "bar": [46, 48, 50], "add_toolbar": [46, 48], "compute_displac": 46, "compute_scal": 46, "renorm": 46, "next_shap": 46, "increas": [46, 277, 280, 285, 286, 287, 288, 291], "play_anim": [46, 48], "plai": [46, 277, 280, 290, 291, 297], "prev_shap": 46, "decreas": [46, 280, 286], "save_anim": [46, 48, 279], "save_animation_all_shap": 46, "filename_bas": 46, "shape_": 46, "easili": [46, 275, 276, 278, 279, 286, 288, 291, 297], "produc": [46, 81, 275, 276, 277, 278, 279, 280, 281, 283, 286, 288, 290, 291, 298], "actual": [46, 275, 277, 278, 279, 281, 286, 288, 291, 297], "save_animation_from_act": 46, "select_complex": 46, "select_loop": 46, "select_scaling_0p25": [46, 48], "25x": [46, 48], "select_scaling_0p5": [46, 48], "5x": [46, 48, 297], "select_scaling_0p8": [46, 48], "8x": [46, 48, 297], "select_scaling_1": [46, 48], "reset": [46, 48], "select_scaling_1p25": [46, 48], "select_scaling_2p0": [46, 48], "2x": [46, 48, 241, 288, 297], "select_scaling_4p0": [46, 48], "4x": [46, 48, 297], "select_shap": 46, "select_speed_0p8": [46, 48], "speed": [46, 48, 288, 291, 297], "select_speed_1": [46, 48], "select_speed_1p25": [46, 48], "show_com": 46, "hide": 46, "stop_anim": [46, 48], "stop": [46, 279, 280, 288, 290, 291, 297], "toggle_undeform": 46, "update_shap": 46, "update_shape_mod": 46, "elaps": 46, "traceline_arrai": 47, "fulli": [47, 280], "go_to_first_step": 48, "go_to_last_step": 48, "go_to_next_step": 48, "go_to_previous_step": 48, "play_animation_revers": 48, "start_tim": 48, "stop_tim": 48, "last": [48, 67, 78, 166, 168, 197, 204, 275, 280, 285, 286, 288, 290, 291, 297], "update_abscissa": 48, "update_abscissa_revers": 48, "update_displac": 48, "update_selector": 48, "cartesian": [49, 275, 288, 297], "polar": [49, 103, 290], "spheric": [49, 56, 275, 288, 297], "here": [50, 275, 276, 277, 279, 280, 285, 286, 287, 288, 290, 291, 297], "rod": 50, "beam": [50, 81, 84, 86, 102, 103, 104, 105, 283, 285, 288, 298], "taper": 50, "parabol": 50, "31": [50, 275, 276, 278, 280, 288, 297], "straight": 50, "pipe": 50, "32": [50, 275, 276, 278, 280, 288, 297], "41": [50, 276, 278, 280, 288, 291, 297], "42": [50, 119, 278, 288, 297], "43": [50, 275, 278, 280, 288, 297], "cubic": 50, "44": [50, 119, 278, 280, 286, 288, 297], "quadrilater": 50, "45": [50, 90, 276, 278, 280, 288, 290, 291, 297], "46": [50, 275, 276, 278, 288, 297], "51": [50, 276, 278, 288, 297], "52": [50, 275, 276, 278, 280, 288, 297], "53": [50, 275, 276, 278, 288, 297], "54": [50, 278, 288, 297], "55": [50, 276, 278, 288, 297, 298], "56": [50, 276, 278, 288, 297], "61": [50, 278, 280, 288, 297], "plate": [50, 86, 288, 290, 291], "62": [50, 278, 288, 297], "63": [50, 276, 278, 288, 297], "64": [50, 275, 278, 288, 297], "65": [50, 278, 280, 288, 297], "66": [50, 275, 276, 278, 280, 288, 297], "71": [50, 275, 278, 280, 288, 290, 297], "membran": 50, "72": [50, 275, 278, 288], "73": [50, 275, 276, 278, 288], "74": [50, 275, 276, 278, 288], "75": [50, 96, 190, 275, 278, 286, 288, 297], "76": [50, 278, 280, 288], "81": [50, 275, 278, 280, 297], "axisymetr": 50, "solid": [50, 280, 297], "84": [50, 278, 280, 287, 288], "85": [50, 276, 278], "91": [50, 276, 278, 280], "thin": 50, "shell": 50, "92": [50, 275, 278, 280], "93": [50, 276, 278], "94": [50, 275, 278], "95": [50, 275, 276, 278, 297], "96": [50, 275, 276, 278, 280], "101": [50, 277, 278, 288, 297], "thick": [50, 105, 280, 285], "wedg": [50, 110, 112], "102": [50, 288], "103": [50, 275, 278], "104": 50, "brick": 50, "105": [50, 278], "106": 50, "111": [50, 285], "tetrahedron": 50, "112": 50, "113": [50, 278], "114": [50, 278], "115": [50, 278], "116": 50, "117": [50, 278], "118": 50, "121": [50, 278, 297], "122": 50, "136": 50, "spring": [50, 119, 284], "137": 50, "138": [50, 275], "139": 50, "141": 50, "damper": [50, 286, 287, 288], "142": [50, 275], "gound": 50, "151": [50, 298], "gap": [50, 279, 290, 297], "152": 50, "161": [50, 150], "lump": [50, 287], "171": [50, 286], "172": [50, 275], "181": 50, "191": 50, "plastic": 50, "cold": 50, "runner": 50, "192": [50, 275, 297], "hot": 50, "193": 50, "water": 50, "194": 50, "fountain": 50, "195": 50, "baffl": 50, "196": 50, "heater": 50, "201": [50, 277, 290, 297], "interfac": [50, 81, 125, 275, 276, 278, 280, 281, 283, 290, 297, 298], "202": 50, "203": 50, "204": 50, "face": [50, 110, 112, 116, 281], "208": 50, "212": 50, "axisymmetr": 50, "213": 50, "221": [50, 278], "222": 50, "231": 50, "232": [50, 288], "axisymentr": 50, "local_coord": 55, "its": [55, 59, 80, 110, 112, 197, 275, 276, 278, 279, 280, 281, 285, 286, 287, 288, 289, 291, 297, 298], "local_deflect": 56, "global_point": 56, "cylindr": [56, 275, 288, 297], "from_id": [57, 281], "to_id": [57, 281], "global_coord": 59, "seq": 61, "sequenc": [61, 110, 171], "within": [61, 275, 279, 281, 288, 291, 297, 298], "group": [61, 275], "sublist": 61, "separ": [61, 279, 280, 290, 297], "help": [63, 74, 275, 278, 279, 281, 285, 287, 290, 297], "tool": [63, 118, 173, 184, 193, 231, 275, 279, 280, 297, 298], "bookkeep": [63, 64, 275, 277, 278, 279, 281, 297], "nrow": 64, "ncol": 64, "argsort_coordin": 64, "sort": [64, 275], "row_indic": 64, "column_indic": 64, "row_coordin": [64, 65], "column_coordin": [64, 65], "num_coordinate_column": 64, "num_coordinate_row": 64, "show_colorbar": 64, "imshow_arg": 64, "colorbar": [64, 297], "imshow": [64, 197, 297], "sort_coordin": 64, "return_v": 64, "ndof": [67, 81, 278], "shape_typ": 67, "shape_arrai": [67, 68, 275, 279, 290], "complex_data_dtyp": 67, "compute_frf": [67, 285, 297], "displacement_deriv": [67, 81, 178, 181, 183, 190, 196, 277, 285, 286, 287, 288, 290, 297], "deriv": [67, 81, 178, 196, 275, 286, 287, 288, 289, 297], "output_data": 67, "concatenate_dof": [67, 281], "initial_geometri": 67, "expansion_geometri": 67, "expansion_shap": 67, "expansion_coordin": 67, "return_coeffici": 67, "serep": [67, 279, 282], "expans": [67, 278, 279, 282], "fem": [67, 275, 279, 297], "typic": [67, 69, 78, 275, 279, 285, 288, 290, 291, 297], "rotx": [67, 69], "roti": [67, 69], "rotz": [67, 69], "imat_shp_struct": [67, 70], "imat_shp": [67, 70], "characterist": [67, 71, 285, 290, 291], "is_complex": 67, "mode_t": 67, "table_format": [67, 79, 276, 278], "csv": 67, "frequency_format": [67, 79, 90, 96, 97, 99], "2f": [67, 79, 90, 94, 95, 96, 97, 278, 286], "damping_format": [67, 79, 90, 96, 97, 99, 276, 278, 280], "tabl": [67, 79, 91, 110, 123, 275, 276, 278, 279, 280, 288, 297, 298], "modal": [67, 72, 78, 81, 90, 96, 97, 119, 222, 234, 274, 277, 278, 280, 281, 282, 283], "rst": 67, "markdown": [67, 79, 276], "latex": [67, 79, 89, 279, 298], "ascii": 67, "modeshap": [67, 90, 288, 297], "overlay_shap": [67, 275, 276, 278, 279, 297], "comparit": [67, 73], "new_shap": [67, 73], "plot_frequ": 67, "interp_abscissa": 67, "interp_ordin": 67, "linestyl": 67, "marker": [67, 297], "mark": [67, 279], "postiion": [67, 275], "command": [67, 275, 288, 297], "real_data_dtyp": 67, "nodelist_or_coordinate_arrai": 67, "repack": [67, 112, 279], "linearli": [67, 279, 288], "multipli": [67, 276, 279, 286, 288, 290], "go": [67, 181, 275, 278, 285, 286, 287, 290, 297], "shape_align": [67, 276, 278], "shape_1": [67, 72, 77, 79, 275], "shape_2": [67, 72, 77, 79, 275], "equival": [67, 77, 81, 116, 268, 275, 278, 280, 288, 290, 291, 297], "other": [67, 74, 77, 116, 185, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "alreadi": [67, 77, 81, 123, 275, 280, 281, 285, 291, 297], "stiff": [67, 80, 81, 102, 103, 104, 119, 236, 275, 276, 278, 280, 281, 286, 287, 288, 289, 290, 291, 297, 298], "physic": [67, 80, 81, 275, 276, 281, 285, 287, 288, 297, 298], "time_integr": [67, 81, 275, 277, 285, 286, 287, 288, 290, 297], "forc": [67, 81, 119, 234, 263, 276, 277, 278, 279, 280, 285, 286, 287, 288, 289, 290, 291, 297, 298], "integr": [67, 81, 241, 259, 277, 280, 283, 285, 286, 287, 288, 290, 291, 298], "equat": [67, 81, 196, 197, 236, 259, 275, 277, 283, 286, 288, 290, 298], "simul": [67, 85, 275, 280, 282, 283, 286, 291, 297], "increment": [67, 76, 278], "accuraci": [67, 276, 277, 278, 280, 290, 297], "10x": [67, 275, 277, 297], "higher": [67, 286, 287, 288, 290, 291, 297], "bandwidth": [67, 81, 229, 241, 275, 277, 280, 281, 288, 290, 291, 297], "interest": [67, 170, 275, 278, 280, 285, 286, 287, 288, 290, 291, 297], "response_arrai": [67, 81], "reference_arrai": [67, 81], "to_real": 67, "collaps": [67, 297], "extra": [67, 129, 130, 275, 277, 280, 281, 291, 297], "collapse_complex_to_r": 67, "specific_data_typ": [67, 156], "load_case_numb": [67, 156], "unveris": 67, "case": [67, 116, 275, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "shape_unv": 67, "sdynpy_uff_dataset_55": 67, "assur": [72, 90, 110, 275, 277, 279, 297], "critera": [72, 281], "automac": 72, "mac_arrai": 72, "rigid_shap": [74, 75, 76, 297], "distance_numb": 74, "distance_yscal": 74, "residuals_to_label": 74, "return_shape_diagnost": 74, "rigid_shape_kwarg": [74, 75], "look": [74, 116, 178, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "residu": [74, 75, 76, 178, 181, 190, 275, 280, 297], "nomin": [74, 75, 76, 280, 286, 290, 297], "find": [74, 116, 275, 278, 279, 281, 284, 288, 297], "outlier": 74, "neighbor": 74, "penalti": [74, 277], "top": [74, 100, 197, 275, 279, 280, 281, 285, 286, 288, 297], "highlight": [74, 275, 277, 280, 286, 297], "diagnos": 74, "issu": [74, 275, 291, 297], "suspicious_channel": 74, "suspic": 74, "channel": [74, 107, 108, 123, 275, 277, 279, 291, 298], "investig": [74, 76, 275, 277, 278, 279, 280, 281, 287, 288, 290, 291, 297], "analytic_rigid_shap": 74, "uniqu": [74, 275, 278, 279, 281, 288, 290, 297], "shape_matrix_exp": 74, "suppli": [74, 75, 76, 119, 291], "subtract": [75, 275, 281, 290], "suspect_nod": 76, "new_cs_id": 76, "gtol": 76, "xtol": 76, "minim": [76, 279, 290], "nonlinear": [76, 280, 291], "optim": [76, 106, 279, 282, 297, 298], "correct": [76, 195, 276, 278, 279, 280, 281, 290, 291, 297], "give": [76, 275, 277, 280, 281, 286, 288, 290, 291, 297], "newli": 76, "suspect": 76, "converg": [76, 276, 297], "corrected_geometri": 76, "shape_matrix": [78, 107, 108, 212, 275, 277, 278, 288, 297], "modal_mass": [78, 156, 275, 297], "transpos": [78, 275, 279, 288, 290, 297], "approach": [78, 275, 277, 278, 279, 281, 286, 288, 290, 291, 297], "itegr": 78, "natur": [78, 178, 234, 275, 279, 280, 281, 285, 286, 288, 290, 291, 297], "critic": [78, 234, 285, 286, 288], "percentag": 78, "02f": [79, 99], "mac_format": [79, 96], "0f": [79, 286], "percent_error_format": [79, 275, 297], "1f": [79, 90, 99, 285], "text": [79, 278, 285, 286, 297], "mac": [79, 90, 275, 276, 277, 278, 279, 280, 281, 297], "output_str": 79, "necessari": [80, 127, 275, 276, 280, 290, 297], "take": [80, 166, 232, 237, 241, 275, 276, 278, 279, 280, 285, 286, 288, 290, 291, 297], "intern": [80, 81, 222, 275, 278, 281, 286, 287, 288, 297], "state": [80, 81, 119, 275, 280, 281, 285, 286, 287, 288, 290, 291, 297, 298], "improperli": [81, 281], "c": [81, 119, 197, 236, 260, 261, 263, 274, 278, 279, 281, 284, 286, 287, 288, 289], "stffness": 81, "m": [81, 103, 104, 105, 119, 236, 260, 261, 263, 270, 274, 278, 285, 286, 287, 288, 290], "assign_modal_damp": [81, 297], "damping_ratio": [81, 178, 179, 234, 264, 265], "num_nod": [81, 110, 297], "rho": [81, 87, 104, 105], "nu": [81, 87, 104, 105], "materi": [81, 103, 104, 275, 297], "lenghth": 81, "young": [81, 105], "modulu": [81, 103, 104, 105], "poisson": [81, 104, 105], "ratio": [81, 104, 105, 178, 234, 279, 285, 286, 288, 290, 291, 297], "steel": [81, 105, 297], "aluminum": [81, 105], "improp": [81, 267], "concaten": [81, 200, 275, 277, 278, 280, 281, 285, 286, 288, 290, 291, 297], "coordinate_node_offset": 81, "combint": 81, "b": [81, 105, 119, 181, 268, 278, 281, 284, 286, 287, 288, 289], "literatur": [81, 297], "nullspac": [81, 82], "eigensolut": [81, 276, 277, 278, 279, 280, 281, 285, 288, 290, 291, 297], "num_mod": [81, 278], "maximum_frequ": [81, 277, 278, 285, 288, 290, 291, 297], "complex_mod": [81, 190], "return_shap": [81, 278], "frequency_respons": [81, 277, 286, 287, 290, 297], "from_exodus_superel": [81, 276], "superelement_nc4": 81, "transformation_exodus_fil": 81, "superel": [81, 282, 283], "sierra": [81, 280, 281, 282, 283], "sd": [81, 280, 281, 282, 283], "netcdf4": [81, 110, 279], "bad": [81, 170, 291], "boundary_dof": [81, 276], "get_indices_by_coordin": 81, "ignore_sign": 81, "extract": [81, 90, 166, 167, 170, 171, 197, 275, 276, 279, 280, 291, 297], "ignor": [81, 277, 278, 288, 290], "duplic": [81, 275, 288, 297], "request": [81, 275, 298], "ndof_transform": 81, "reduction_transform": 81, "reduce_craig_bampton": [81, 278], "connection_degrees_of_freedom": 81, "num_fixed_base_mod": 81, "return_shape_matrix": [81, 278], "craig": [81, 282, 283], "bampton": [81, 282, 283], "form": [81, 119, 197, 234, 275, 276, 278, 281, 285, 286, 287, 288, 290, 291, 297], "reduce_dynam": [81, 278], "condens": 81, "preserv": [81, 278], "reduce_guyan": [81, 278], "guyan": 81, "set_proportional_damp": 81, "mass_fract": 81, "stiffness_fract": 81, "simulate_test": [81, 290, 291], "frame_length": [81, 290, 291], "num_averag": [81, 290, 291], "excitation_level": 81, "excitation_noise_level": 81, "response_noise_level": [81, 290], "steady_state_tim": [81, 290], "excitation_min_frequ": [81, 291], "excitation_max_frequ": [81, 291], "signal_fract": [81, 291], "extra_time_between_fram": [81, 291], "integration_oversampl": [81, 241, 275, 280, 285, 286, 287, 290, 297], "antialias_filter_cutoff_factor": 81, "antialias_filter_ord": 81, "generator_kwarg": 81, "spy": [81, 275, 281, 288], "figsiz": [81, 277, 278, 285, 286, 287, 288, 290, 297], "spy_kwarg": 81, "pyplot": [81, 197, 275, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "return_constrained_system": [81, 281], "calcul": [81, 82, 275, 277, 280, 281, 288, 297], "just": [81, 275, 278, 279, 281, 285, 286, 287, 288, 290, 291, 297], "substructure_by_posit": [81, 276, 278, 297], "distance_threshold": [81, 82, 281], "coloc": [81, 82], "consid": [81, 82, 275, 276, 277, 278, 285, 286, 288, 290, 291, 297], "combined_system": [81, 82, 276, 281, 297], "combined_geometri": [81, 82, 276, 279, 281, 297], "substructure_by_shap": [81, 281], "constraint_shap": [81, 278], "connection_dofs_0": 81, "connection_dofs_1": 81, "least": [81, 197, 270, 277, 281, 291, 297], "sens": [81, 278, 288], "basi": [81, 275, 278, 279, 281, 287], "initial_st": [81, 286, 287, 288], "pad": [81, 280, 297], "to_state_spac": 81, "output_displac": 81, "output_veloc": 81, "output_acceler": 81, "output_forc": 81, "input_coordin": 81, "feedforward": [81, 119], "a_stat": 81, "b_state": 81, "c_state": 81, "d_state": 81, "transformation_matrix_at_coordin": 81, "return_valu": 81, "demonstr": [83, 84, 85, 86, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 297], "simpl": [84, 280, 283, 284, 285, 287, 288, 290, 291], "airplan": [84, 85, 277, 278, 282, 283, 285], "full_system": [85, 278], "full_geometri": [85, 276, 278], "transmission_system": 85, "shorter": [85, 110, 297], "wing": [85, 275, 277, 278, 285], "transmission_geometri": 85, "all_system": 85, "compon": [85, 241, 275, 277, 281, 282, 286, 287, 288, 291], "all_geometri": 85, "125": [87, 275, 285, 286, 288], "beam_height": 87, "02": [87, 190, 234, 275, 277, 278, 283, 284, 285, 287, 288, 290, 291, 297], "beam_width": 87, "69000000000": 87, "33": [87, 105, 275, 276, 278, 280, 288, 297], "2830": [87, 105], "document": [88, 275, 282, 297], "report": [89, 275, 279, 280, 297], "figure_basenam": [90, 279], "output_fil": [90, 279], "figure_basename_relative_to_latex": 90, "max_shap": [90, 99], "cmif_kwarg": [90, 99], "cmif_subplots_kwarg": 90, "mac_subplots_kwarg": [90, 96, 97], "mac_plot_kwarg": 90, "geometry_plot_kwarg": [90, 92, 94, 99, 279], "shape_plot_kwarg": 90, "save_animation_kwarg": [90, 92, 94, 95, 99], "latex_cmif_graphics_opt": 90, "latex_mac_graphics_opt": 90, "latex_shape_graphics_opt": 90, "loop": [90, 170, 222, 275, 276, 280, 281, 287, 290, 297], "latex_shape_subplot_opt": 90, "latex_max_figures_per_pag": 90, "latex_max_figures_first_pag": 90, "latex_cmif_capt": 90, "experiment": [90, 172, 178, 279, 280, 283, 284, 286, 288, 290, 297], "latex_cmif_label": 90, "fig": [90, 275, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "latex_mac_capt": 90, "criterion": [90, 275, 277, 279, 297], "independ": [90, 108, 275, 277, 279, 280, 281, 285, 288, 290, 291, 297, 298], "latex_mac_label": 90, "latex_shape_subcapt": 90, "hz": [90, 178, 234, 236, 241, 275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "latex_shape_sublabel": 90, "latex_shape_capt": 90, "latex_shape_label": 90, "latex_shape_table_column": 90, "lllp": 90, "5in": 90, "latex_shape_table_capt": 90, "shown": [90, 275, 278, 279, 280, 281, 288, 291, 297], "brief": [90, 280, 290], "latex_shape_table_label": 90, "tab": [90, 275, 297], "modelist": 90, "powerpoint": [91, 279, 298], "present": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 275, 279, 280, 286, 288, 290, 291, 297, 298], "tedious": 91, "put": [91, 110, 275, 278, 285, 286, 287, 297], "larg": [91, 110, 236, 275, 276, 278, 279, 280, 285, 286, 288, 290, 297, 298], "animate_geometri": 92, "200": [92, 190, 275, 285, 286, 297], "content_slide_layout_index": [92, 94, 99, 279], "subtitl": [93, 98, 99, 279], "section_header_slide_layout_index": 93, "title_format": [94, 95], "text_format": [94, 95], "nfrequenc": [94, 95], "ndamp": [94, 95], "3f": [94, 95, 297], "plot_shape_kwarg": 94, "left_right": 94, "geometry_1": 95, "shapes_1": [95, 96, 214], "geometry_2": [95, 297], "shapes_2": [95, 96, 214], "geometry_plot_kwargs_1": 95, "plot_shape_kwargs_1": 95, "geometry_plot_kwargs_2": 95, "plot_shape_kwargs_2": 95, "two_content_slide_layout_index": 95, "shapes_1_label": 96, "shapes_2_label": 96, "axes_modifi": [96, 97], "03f": [96, 97], "matrix_plot_kwarg": [96, 97], "table_threshold": 96, "empty_slide_layout_index": [96, 97, 99, 279], "exp_data": 97, "fit_data": 97, "title_slide_layout_index": [98, 99, 279], "slide_width": 99, "slide_height": 99, "placehold": [100, 279], "bottom": [100, 280, 286, 297], "node_coord": 103, "element_connect": 103, "bend_direction_1": [103, 105], "ae": 103, "jg": 103, "ei1": 103, "ei2": 103, "mass_per_length": 103, "tmmi_per_length": 103, "elast": [103, 104, 275, 276, 297], "nx3": 103, "mx2": 103, "mx3": 103, "vector": [103, 110, 197, 200, 208, 267, 268, 270, 276, 287, 288, 290, 297], "bend": [103, 104, 288, 290], "product": [103, 268, 275, 288, 290, 291], "axial": [103, 104], "area": [103, 170, 280, 297], "torsion": [103, 275, 288], "j": [103, 110, 278, 286, 288, 290, 297], "shear": 103, "section": [103, 104, 105, 276, 279, 280, 281, 283, 285, 286, 287, 288, 289, 291, 297], "i1": [103, 275, 297], "i2": [103, 291], "6nx6n": 103, "follow": [103, 116, 119, 275, 277, 279, 287, 297, 298], "disp_x_0": 103, "disp_y_0": 103, "disp_z_0": 103, "rot_x_0": 103, "rot_y_0": 103, "rot_z_0": 103, "disp_x_1": 103, "disp_y_1": 103, "disp_z_1": 103, "rot_x_1": 103, "rot_y_1": 103, "rot_z_1": 103, "disp_x_n": 103, "disp_y_n": 103, "disp_z_n": 103, "rot_x_n": 103, "rot_y_n": 103, "rot_z_n": 103, "nnode": 104, "simplifi": [104, 286, 288], "uniform": [104, 105, 178, 270, 297], "repeat": [104, 105, 127, 275, 276, 279, 280, 286, 288, 290, 291], "h": [105, 119, 233, 234, 235, 236, 237, 277, 287, 288, 290, 291], "nelem": 105, "rectangular": [105, 276], "beamkm": [105, 298], "bend_direction_2": 105, "si": 105, "200e9": 105, "7850": 105, "kg": [105, 119], "69e9": 105, "down": [106, 275, 276, 277, 278, 279, 280, 281, 285, 286, 288, 290, 291, 297], "candid": [106, 275, 277], "sensors_to_keep": [107, 108, 275, 277], "return_condition_numb": 107, "lowest": [107, 178, 288], "bundl": [107, 108], "triaxial": [107, 108, 275], "acceleromet": [107, 108, 275, 279, 285, 286], "new_shape_matrix": [107, 108], "inci": [107, 108], "returned_condition_numb": 107, "return_efi": [108, 275], "returned_efi": 108, "r": [110, 169, 171, 197, 200, 222, 270, 271, 275, 279, 286, 287, 297, 298], "num_dim": 110, "num_elem": 110, "num_block": 110, "num_node_set": 110, "num_side_set": 110, "clobber": [110, 112, 279], "open": [110, 123, 222, 275, 279, 280], "side": [110, 197, 280, 281, 286, 287, 288, 290, 297], "close": [110, 275, 277, 279, 280, 281, 288, 291, 297], "extract_sharp_edg": 110, "get_block_surfac": [110, 112], "block_id": [110, 112], "keep_midside_nod": [110, 112, 114, 116], "warn": [110, 112, 278, 291], "skin": [110, 112], "midsid": [110, 112], "element_block_inform": [110, 112], "element_typ": [110, 112, 115], "node_indic": [110, 112], "block_surface_connect": [110, 112], "block_surface_original_el": [110, 112], "quad4": [110, 112, 116], "tri3": [110, 112], "etc": [110, 112, 279, 283, 297, 298], "recov": [110, 112, 280, 286, 288, 290], "came": [110, 112, 291, 297], "process": [110, 112, 184, 185, 193, 222, 275, 279, 280, 285, 286, 288, 289, 290, 291, 297], "differ": [110, 112, 119, 234, 236, 275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "tri": [110, 112, 279], "quad": [110, 112], "get_coord": 110, "retriev": [110, 287], "coord": [110, 198, 199, 280], "get_coord_nam": 110, "coord_nam": 110, "get_displac": 110, "displacement_nam": 110, "disp": [110, 198, 234, 236, 275, 286], "capital_coordin": 110, "get_elem_attr": 110, "num_attribut": 110, "masked_arrai": 110, "get_elem_blk_id": 110, "get_elem_blk_info": 110, "elements_in_block": 110, "nodes_per_el": 110, "attributes_per_el": 110, "get_elem_connect": 110, "num_nodes_per_el": 110, "convert": [110, 116, 280, 282, 285, 288, 297], "get_elem_num_map": 110, "elem_num_map": 110, "get_elem_typ": 110, "get_elem_variable_nam": 110, "elem_var_nam": 110, "get_elem_variable_t": 110, "elem_var_t": 110, "num_element_vari": 110, "jth": 110, "ith": 110, "get_elem_variable_valu": 110, "name_or_index": 110, "element_index": 110, "elem_variable_valu": 110, "maskedarrai": 110, "get_element_property_nam": 110, "get_element_property_valu": 110, "get_global_variable_nam": 110, "global_var_nam": 110, "get_global_variable_valu": 110, "global_variable_valu": 110, "get_info_record": 110, "info_record": 110, "get_node_num_map": [110, 280], "node_num_map": 110, "get_node_set_dist_factor": 110, "dist_factor": 110, "get_node_set_id": 110, "ns_id": 110, "get_node_set_nam": 110, "ns_name": 110, "get_node_set_nod": [110, 280], "get_node_set_num_nod": 110, "get_node_variable_nam": 110, "node_var_nam": 110, "get_node_variable_valu": [110, 280], "node_index": 110, "node_variable_valu": 110, "get_qa_record": 110, "qualiti": [110, 170, 284, 289, 291, 297], "qa_record": 110, "nest": 110, "get_side_set_dist_factor": 110, "get_side_set_fac": 110, "sideset": 110, "get_side_set_id": 110, "ss_id": 110, "get_side_set_nam": 110, "exoud": 110, "ss_name": 110, "get_side_set_node_list": 110, "get_side_set_num_fac": 110, "num_fac": 110, "get_tim": 110, "time_arrai": 110, "load_into_memori": [110, 279], "memori": [110, 112, 116, 279, 297, 298], "Not": 110, "netcdf": [110, 298], "upon": 110, "fexo": [110, 116, 275, 279, 281], "num_attr": 110, "d": [110, 119, 278, 284, 289], "attr_per_el": 110, "num_blk": 110, "num_dimens": 110, "num_elem_vari": 110, "num_elems_in_blk": 110, "elem_per_el": 110, "num_global_vari": 110, "num_node_vari": 110, "num_nodes_per_elem": 110, "nodes_per_elem": 110, "num_tim": 110, "put_coord_nam": 110, "put_coord": 110, "put_elem_blk_id": 110, "put_elem_blk_info": 110, "elem_typ": 110, "num_attrs_per_elem": 110, "shell4": 110, "hex8": [110, 116], "num_attrs_per_el": 110, "put_elem_num_map": 110, "put_elem_variable_nam": 110, "num_el_blk": 110, "num_elem_var": 110, "put_element_property_nam": 110, "put_element_property_valu": 110, "put_global_variable_nam": 110, "put_info_record": 110, "put_node_num_map": 110, "put_node_set_id": 110, "put_node_set_info": 110, "dist_fact": 110, "put_node_set_nam": 110, "put_node_variable_nam": 110, "put_qa_record": 110, "code": [110, 275, 276, 277, 278, 279, 280, 281, 285, 286, 290, 298], "put_side_set_id": 110, "put_side_set_info": 110, "put_side_set_nam": 110, "reduce_to_surfac": [110, 275, 281], "set_elem_attr": 110, "set_elem_connect": 110, "convent": 110, "set_elem_variable_valu": 110, "valid": [110, 275, 276, 279, 280, 286, 288, 290, 291], "set_global_variable_valu": 110, "set_node_variable_valu": 110, "set_tim": 110, "len": [110, 232, 275, 285, 286], "triangulate_surface_mesh": [110, 112], "patch": [110, 112], "hasn": [110, 112], "pyexodu": [110, 112], "mesh_triangulation_arrai": [110, 112], "skip": [110, 112], "triangulated_mesh_info": [110, 112], "conveni": [112, 288], "wrap": [112, 287], "around": [112, 170, 178, 275, 280, 285, 287, 297], "easier": [112, 275, 279, 288, 291, 297, 298], "manipul": [112, 279], "entir": [112, 170, 275, 277, 278, 286, 288, 290, 291, 297, 298], "want": [112, 275, 277, 279, 281, 285, 286, 287, 288, 291, 297], "from_sdynpi": [112, 279], "load_from_exodu": 112, "repackag": 112, "write_to_fil": [112, 279], "edge_threshold": 113, "60": [113, 275, 278, 280, 288, 290, 297], "reduced_element_typ": 114, "blocks_to_transform": 116, "variables_to_transform": 116, "eas": [116, 281], "insensit": 116, "quadrat": 116, "discard": [116, 170, 183, 275, 278, 280, 281, 288, 297], "corner": [116, 280, 290, 291, 297], "fexo_out": [116, 279], "TO": 116, "tetra4": 116, "hex20": 116, "mash": 116, "after": [116, 176, 275, 276, 278, 280, 286, 287, 288, 290, 291, 297], "lastli": 116, "what": [116, 275, 278, 279, 280, 281, 283, 284, 286, 287, 290, 291, 297, 298], "turn": [116, 275, 280, 297], "reduce_element_typ": 116, "reduce_element_nodes_per_fac": 116, "reduce_element_fac": 116, "reduce_element_substitute_typ": 116, "page": [116, 275, 277, 279, 283, 297], "exodusii": 116, "manual": [116, 288, 297], "prod": 116, "gov": 116, "techlib": 116, "control": [116, 222, 279, 282, 288, 290], "cgi": 116, "1992": 116, "922137": 116, "pdf": [116, 270, 279], "simplenamespac": 117, "shaker": [118, 119, 279, 282, 285, 287, 290, 291, 298], "commerci": 118, "m_armatur": 119, "m_bodi": 119, "m_forcegaug": 119, "k_suspens": 119, "k_stinger": 119, "c_suspens": 119, "c_stinger": 119, "resist": 119, "induct": 119, "force_factor": 119, "four": [119, 287, 288, 291, 297], "electromechan": 119, "armatur": 119, "trunion": 119, "gaug": [119, 275], "stinger": 119, "coil": 119, "electron": 119, "bl": 119, "magnet": 119, "mck": 119, "voltag": [119, 290, 298], "impart": 119, "plu": [119, 275], "modal_shop_100lbf": 119, "shop": 119, "2100e11": 119, "100lbf": 119, "shaker_model": 119, "1e5": 119, "63e6": 119, "ohm": 119, "6e": 119, "henri": 119, "36": [119, 275, 276, 278, 288, 297], "plot_electrical_imped": 119, "3998": 119, "3999": 119, "4000": [119, 280, 291, 297], "test_data": 119, "electr": 119, "imped": [119, 286], "arang": [119, 275, 277, 278, 279, 280, 281, 285, 286, 290, 291, 297], "state_spac": 119, "formul": [119, 287, 290], "x_dot": 119, "feedthrough": 119, "forcegaug": 119, "extern": [119, 275, 279, 280, 286, 287, 288], "matri": 119, "rattlesnak": [121, 123, 282, 283, 298], "coordinate_override_column": [122, 123], "read_only_indic": [122, 123], "nc4": [123, 276, 279], "channel_t": [123, 279], "datafram": [123, 298], "panda": [123, 298], "format_spec": [127, 131], "read_numb": [127, 128], "determin": [127, 128, 276, 277, 278, 285, 286, 288, 290, 291, 297], "uffreaderror": [127, 129, 130], "line_format_spec": 128, "lines_read": 128, "fill_lin": 131, "fill": [131, 275, 279], "definit": [132, 275, 280, 286, 287, 288, 290, 297], "header": [133, 143, 298], "model_file_nam": 134, "model_file_descript": 134, "db_program": 134, "db_date_cr": 134, "db_version": 134, "db_subvers": 134, "file_typ": 134, "date_db_last_sav": 134, "writing_program": 134, "sdynpy_uff": 134, "py": [134, 196, 278], "date_written": 134, "releas": [134, 283, 286], "version_numb": [134, 144, 159], "host_id": 134, "test_id": 134, "release_counter_per_host": 134, "dataset_numb": [134, 137, 140, 144, 147, 150, 153, 156, 159, 163], "from_uff_data_arrai": [134, 137, 140, 144, 147, 150, 153, 156, 159, 163], "write_str": [134, 137, 140, 144, 147, 150, 153, 156, 159, 163], "58": [139, 275, 278, 288, 297, 298], "set_record_numb": 140, "octave_format": 140, "measurement_run": 140, "weighting_typ": 140, "window_typ": 140, "amplitude_unit": 140, "normalization_method": 140, "abscissa_data_qualifi": 140, "ordinate_num_data_qualifi": 140, "ordinate_den_data_qualifi": 140, "zaxis_data_qualifi": 140, "sampling_typ": 140, "time_averag": 140, "zrpm": 140, "ztime": 140, "zorder": 140, "number_sampl": 140, "exponential_window_damping_factor": 140, "overall_rm": 140, "weighted_rm": 140, "response_direct": [140, 159], "reference_direct": [140, 159], "model_uid": 144, "entity_typ": 144, "entity_subtyp": 144, "entity_nam": 144, "sdynpy_geometri": [144, 290, 297], "part_numb": 144, "status_mask": 144, "datetime_short_time_format": 144, "idm_item_version_id": 144, "idm_item_id": 144, "primary_parent_uid": 144, "geometry_switch": 144, "p_analysis_switch": 144, "all_selections_switch": 144, "auto_create_dynamic_groups_switch": 144, "acdg_1d_element_switch": 144, "acdg_2d_element_switch": 144, "acdg_3d_element_switch": 144, "acdg_other_element_switch": 144, "acdg_related_nodes_switch": 144, "acdg_related_geometry_switch": 144, "acdg_related_boundary_condition_switch": 144, "node_label": 147, "export_coordinate_system": 147, "displacement_coordinate_system": 147, "element_label": 150, "fe_descriptor_id": 150, "physical_property_table_numb": 150, "material_property_table_numb": 150, "beam_orient": 150, "beam_fore_cross_section_numb": 150, "beam_aft_cross_section_numb": 150, "part_uid": 153, "part_nam": 153, "cs_label": 153, "cs_color": 153, "cs_name": 153, "cs_matric": 153, "idline1": [156, 159], "idline2": [156, 159], "idline3": [156, 159], "idline4": [156, 159], "idline5": [156, 159], "model_typ": 156, "analysis_typ": 156, "data_characterist": 156, "integer_data": 156, "real_data": 156, "node_data_dictionari": 156, "buckling_eigenvalu": 156, "frequency_step_numb": 156, "id_numb": 156, "imaginary_eigenvalu": 156, "imaginary_modal_a": 156, "imaginary_modal_b": 156, "modal_hysteretic_damp": 156, "modal_viscous_damp": 156, "mode_numb": 156, "real_eigenvalu": 156, "real_modal_a": 156, "real_modal_b": 156, "time_step_numb": 156, "function_id": 159, "load_cas": 159, "response_entity_nam": 159, "response_nod": 159, "reference_entity_nam": 159, "reference_nod": 159, "abscissa_data_typ": 159, "abscissa_length_expon": 159, "abscissa_force_expon": 159, "abscissa_temp_expon": 159, "abscissa_axis_label": 159, "abscissa_units_label": 159, "ordinate_num_data_typ": 159, "ordinate_num_length_expon": 159, "ordinate_num_force_expon": 159, "ordinate_num_temp_expon": 159, "ordinate_num_axis_label": 159, "ordinate_num_units_label": 159, "ordinate_den_data_typ": 159, "ordinate_den_length_expon": 159, "ordinate_den_force_expon": 159, "ordinate_den_temp_expon": 159, "ordinate_den_axis_label": 159, "ordinate_den_units_label": 159, "zaxis_data_typ": 159, "zaxis_length_expon": 159, "zaxis_force_expon": 159, "zaxis_temp_expon": 159, "zaxis_axis_label": 159, "zaxis_units_label": 159, "zaxis_valu": 159, "improv": [162, 277, 278, 279, 280, 291], "visibl": [162, 276, 280, 288], "traceline_numb": 163, "identif": [163, 297], "vic3d": [165, 166, 167, 168, 170, 298], "xml": [166, 168], "calibr": [166, 167, 168, 195], "insid": [166, 168, 279, 281, 285, 298], "unzip": [166, 168], "z3d": [166, 167, 168], "cx": [166, 168], "cy": [166, 168], "fx": [166, 168, 290], "fy": [166, 168], "tx": [166, 168], "ty": [166, 168], "tz": [166, 168], "triangular": [166, 168, 170, 197, 200], "intrinisc": [166, 168, 197], "orthogon": [166, 168, 197], "z3d_file": 167, "out_data": 167, "intrinsics_0": 167, "extrinsics_0": 167, "distortion_0": 167, "intrinsics_1": 167, "extrinsics_1": 167, "distortion_1": 167, "distort": [167, 291], "bryant": [169, 171], "radian": [169, 171, 234, 236, 267, 286, 288, 290], "read_3d": 170, "read_2d": 170, "read_qual": 170, "sigma_tol": 170, "element_triangulation_condit": 170, "element_color_ord": 170, "allow_dropout": 170, "export": [170, 280, 282, 297, 298], "sigma": [170, 277], "subset": [170, 275], "drop": [170, 280, 288, 290, 291], "dropout": 170, "detect": [170, 280, 291, 297], "geometry_3d": 170, "time_data_3d": 170, "geometry_2d": 170, "time_data_2d": 170, "time_data_2d_dispar": 170, "sigma_data": 170, "r_x": 171, "r_y": 171, "r_z": 171, "graphic": [173, 184, 275, 279, 280, 290, 298], "clear_plot": 174, "clicked_point": 174, "mouse_ev": 174, "cluster_mod": 174, "collect_shap": 174, "compute_and_plot_ccmif": 174, "compute_ccmif": 174, "disable_fil": 174, "enable_fil": 174, "enabled_selected_mod": 174, "enabled_shape_arrai": 174, "export_figur": 174, "export_mode_t": [174, 191], "load_fil": 174, "load_geometri": [174, 182, 191], "load_progress": 174, "plot_ccmif": 174, "plot_cmif": 174, "plot_frf": 174, "remove_fil": 174, "replace_fil": 174, "resynthes": [174, 279, 280, 297], "save_progress": 174, "save_shap": [174, 182, 191], "set_mode_properti": 174, "item": [174, 275, 278, 297], "set_properti": 174, "file_index": 174, "shape_index": 174, "toggle_auto_resynth": 174, "update_line_width": 174, "update_shape_list": 174, "no_load": 174, "qdialog": [175, 187], "pole": [176, 181, 183, 275, 279, 280, 297], "known": [176, 285, 286, 288, 297], "drive_point_coeffici": [177, 181], "participation_factor": [177, 179], "experimental_frf": 178, "natural_frequ": [178, 179, 234, 264, 265], "real_mod": [178, 181], "frequency_lines_at_reson": 178, "frequency_lines_for_residu": 178, "highest": [178, 288, 297], "shape_residu": 178, "n_mode": 178, "There": [178, 233, 237, 277, 280, 285, 286, 287, 288, 290, 291, 297], "synthesized_frf": 178, "residual_frf": 178, "residue_matrix": 179, "shape_select": 179, "shapeselect": [179, 181], "polynomi": [180, 275, 279, 280, 297], "fitter": [180, 186, 275, 279, 280, 297], "analyze_pole_converg": 181, "pole_or_index": 181, "frequency_stability_threshold": 181, "damping_stability_threshold": 181, "modal_participation_threshold": 181, "label_ord": 181, "no_converge_marg": 181, "freq_converge_mark": 181, "damp_converge_mark": 181, "full_converge_mark": 181, "angular_frequ": [181, 190], "compute_pol": 181, "polynomial_ord": 181, "compute_residu": [181, 190], "compute_shap": [181, 182, 190, 191], "selection_criteria": 181, "frequency_spac": [181, 190, 217, 229], "plot_stabl": 181, "label_pol": 181, "order_rang": 181, "pole_list_from_indic": 181, "frf_data": [182, 191, 290], "compute_stabil": 182, "create_cmif_window": 182, "create_frf_window": 182, "create_mmif_window": 182, "create_nmif_window": 182, "create_qmif_window": 182, "export_fit_data": 182, "frequency_slic": 182, "pole_selection_chang": 182, "set_geometri": [182, 297], "show_line_selector": 182, "update_data_plot": 182, "update_frequency_from_region": 182, "update_max_frequ": 182, "update_min_frequ": 182, "update_resynthesi": 182, "polypy_gui": [183, 297, 298], "polypy_tabwidget": 183, "frequency_region": 183, "qwidget": 183, "mouseclick": 183, "mousemov": 183, "plot_pol": 183, "update_stability_plot_view": 183, "update_stabilization_plot": 183, "time_history_arrai": 185, "acceptancechang": 185, "analyzepolypi": 185, "analyzesmac": 185, "block_averaging_sign": 185, "block_data_range_sign": 185, "block_sampling_sign": 185, "compute_trigg": 185, "create_roi": 185, "endtimechang": 185, "framesizechang": 185, "frametimechang": 185, "frameschang": 185, "frequencylineschang": 185, "frequencyspacingchang": 185, "get_abscissa_index_rang": 185, "hysteresischang": 185, "initialize_ui": 185, "levelchang": 185, "loaddata": 185, "loadgeometri": 185, "overlapchang": 185, "overlapsampleschang": 185, "plotdeflect": 185, "plottransi": 185, "pretriggerchang": 185, "referenceviewchang": 185, "referenceschang": 185, "reset_ui": 185, "responseviewchang": 185, "responseschang": 185, "saveautospectra": 185, "savecoher": 185, "savecrossspectra": 185, "savefrf": 185, "savewindowedtimehistori": 185, "sendtorefer": 185, "sendtorespons": 185, "showautospectra": 185, "showcoher": 185, "showcrossspectra": 185, "showfrf": 185, "showwindowedtimehistori": 185, "starttimechang": 185, "toggleroi": 185, "roi": 185, "typechang": 185, "updatehysteresisfromrefer": 185, "updatehysteresisfromrespons": 185, "updatetimefromrefer": 185, "updatetimefromrespons": 185, "updatetriggerfromrefer": 185, "updatetriggerfromrespons": 185, "windowchang": 185, "synthes": [186, 291, 298], "smac": [186, 274, 275, 279, 298], "add_root": [187, 191], "recompute_correl": 187, "switch_log_plot": 187, "update_plot_rang": 187, "update_range_selector": 187, "paraboloid": 188, "autofit_root_altern": 190, "initial_frequ": 190, "initial_damp": 190, "frequency_rang": 190, "frequency_point": 190, "frequency_converg": 190, "00025": [190, 280], "damping_low": 190, "0025": [190, 275], "damping_high": 190, "05": [190, 239, 275, 276, 277, 281, 283, 284, 297], "damping_point": 190, "damping_converg": 190, "frequency_lines_for_correl": 190, "max_it": 190, "zoom_rat": 190, "plot_converg": 190, "autofit_root_paraboloid": 190, "autofit_root": [190, 191], "autofit_typ": 190, "autofittyp": 190, "compute_correlation_matrix": [190, 191], "low_frequ": 190, "high_frequ": 190, "frequency_sampl": 190, "frequency_resolut": 190, "low_damp": 190, "high_damp": 190, "damping_sampl": 190, "compute_initial_rootlist": 190, "peak_finder_filter_s": 190, "correlation_threshold": 190, "num_roots_mif": 190, "num_roots_frequency_threshold": 190, "005": [190, 275, 297], "plot_correl": 190, "compute_pseudoinvers": [190, 191], "root": [190, 228, 276, 277, 279, 280, 288, 290, 297], "find_peak": 190, "correlation_matrix": 190, "fit_damp": 190, "min_damp": 190, "max_damp": 190, "fit_frequ": 190, "min_freq": [190, 241, 280], "max_freq": [190, 241], "fit_paraboloid": 190, "frf_sdof_complex": 190, "root_frequ": 190, "root_damp": 190, "frf_sdof_real": 190, "get_num_root": 190, "frequency_threshold": 190, "add_initial_root": 191, "confirm_initial_roots_for_autofit": 191, "delete_initial_root": 191, "delete_root": 191, "load_shap": 191, "paint_mark": 191, "plot_mac": 191, "refind_peak": 191, "update_coefficient_and_refind": 191, "update_crosshair": 191, "update_frequency_line_label": 191, "update_initial_rootlist_tab": 191, "no_reset_ax": 191, "update_rootlist_t": 191, "update_selector_and_refind": 191, "deal": [194, 207, 216, 257, 266, 277, 286, 291], "image_point": [195, 197, 201, 203], "plane_point": [195, 203, 253], "n_camera": [195, 205], "n_imag": [195, 205], "n_point": [195, 275], "k_est": 195, "rt_est": 195, "du": 196, "dx": [196, 291], "dy": 196, "dz": 196, "dv": 196, "spatial_point": 197, "six": [197, 288, 297], "intrin": 197, "v": [197, 268, 275, 277, 281, 285, 286, 288], "homogen": 197, "decomposit": [197, 290], "smallest": [197, 275, 277, 290], "null": 197, "horizont": [197, 285], "vertic": [197, 285, 290], "locat": [197, 275, 278, 279, 280, 282, 285, 286, 287, 288, 290, 291, 297], "paint": 197, "gimp": 197, "correpond": 197, "f_u": 197, "u_0": 197, "f_v": 197, "v_0": 197, "And": [197, 286, 288], "r_xx": 197, "r_xy": 197, "r_xz": 197, "t_x": 197, "r_yx": 197, "r_yi": 197, "r_yz": 197, "t_y": 197, "r_zx": 197, "r_zy": 197, "r_zz": 197, "t_z": 197, "3x4": [198, 199, 200, 204], "3xn": [198, 199], "mx": [198, 199], "pixel_disp": 198, "2xn": [198, 199], "world": [199, 287], "pixel_posit": 199, "p": [200, 201, 274, 278, 290, 291], "decompos": 200, "3x1": 200, "k_guess": 203, "rt_guess": 203, "radial_distort": [203, 205], "prismatic_distort": [203, 205], "tangential_distort": [203, 205], "radial_denominator_distort": [203, 205], "k_guess_distort": 203, "least_squares_kwarg": 203, "pixel_coordin": 204, "parameter_arrai": 205, "use_k_for_distort": 205, "preserve_magnitud": 208, "fft_1": 210, "fft_2": 210, "phi_1": [211, 288], "phi_2": [211, 288], "display_valu": 212, "text_siz": [212, 275, 276, 277, 278], "vmin": 212, "vmax": 212, "boundari": [212, 275, 276, 278, 280, 281, 291], "reference_shap": 213, "th_1": 215, "th_2": 215, "sample_r": [217, 222, 275, 285, 290, 291, 297], "response_spectral_matrix": 217, "coh": 220, "ph": 220, "cpsd_matrix": 222, "df": [222, 228, 275, 297], "schultz": 222, "nelson": 222, "synthesi": [222, 297], "proceed": [222, 274], "confer": 222, "2019": 222, "cpsd_origin": 224, "cpsd_to_match": 224, "freq": [225, 275, 276, 278, 280, 297], "spec": [226, 286], "channel_nam": 226, "csd": 228, "scalar": [228, 288], "num_channel": 229, "target_rm": 229, "delai": 232, "phae": 232, "n_signal": 232, "updated_sign": 232, "nf": [233, 234, 236, 237], "ni": [233, 234, 236, 237], "nt": [233, 237], "h2": [233, 237], "hv": [233, 237], "some": [233, 237, 241, 275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "mode_shap": 234, "input_mode_shap": 234, "frf_type": [234, 236, 290], "evalu": [234, 236, 278, 291, 297], "cycl": [234, 236, 286, 288, 291], "hertz": [234, 236, 288, 297], "angular": [234, 236, 286, 288], "percentang": 234, "nm": 234, "nonsquar": 234, "vel": [234, 236, 286], "accel": [234, 236, 286], "By": [234, 236, 275, 279, 285, 288, 290, 291, 297], "recept": [234, 236], "1j": [234, 236, 286, 287, 290], "omega": [234, 236, 286, 287, 288], "depend": [234, 275, 276, 279, 280, 286, 287, 288, 290, 297], "f": [235, 236, 278, 280, 284, 286, 287, 288, 289, 290, 291], "real_imag": 235, "x_dd": 236, "x_d": 236, "sinc": [236, 275, 276, 278, 290, 297], "invers": [236, 277, 290], "therefor": [236, 275, 276, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 297], "advis": 236, "response_fft": [237, 290], "lambda": [237, 241, 277, 286, 288], "reference_fft": [237, 290], "response_fft_arrai": 237, "reference_fft_arrai": 237, "divis": 237, "befor": [237, 275, 280, 286, 287, 291, 297], "number_of_respons": 237, "n_averag": 237, "number_of_refer": 237, "n_sampl": [239, 244], "on_fract": 239, "delay_fract": 239, "low_frequency_cutoff": [239, 244], "high_frequency_cutoff": [239, 244, 275, 280], "ramp_fract": 239, "frequency_min": [240, 285], "frequency_max": [240, 285], "signal_length": [240, 242, 285], "force_integer_cycl": 240, "fft_line": [241, 280], "f_nyq": [241, 280], "signal_rm": [241, 280], "filter_oversampl": 241, "shape_funct": 241, "sum": [241, 288, 290, 291], "sine": [241, 275, 280, 285, 286, 287, 290, 291, 297, 298], "wave": [241, 275, 280, 285, 286, 287, 290, 291, 297], "inclus": 241, "amplitud": [241, 245, 279, 285, 286, 287, 290, 291, 297], "acquisit": [241, 291], "antialias": [241, 291], "filter": [241, 280, 291, 297], "56x": 241, "theorem": 241, "replica": 241, "pulse_tim": 242, "pulse_width": 242, "pulse_peak": 242, "sine_expon": 242, "num_sampl": [243, 245, 285, 286, 287, 290, 291], "ramp_sampl": 243, "end_ramp_sampl": 243, "ncircum": 250, "naxial": 250, "radiu": 251, "plane_direct": 253, "origin_guess": 255, "direction_guess": 255, "radius_guess": 255, "sinusoid": [257, 275, 286, 287, 289, 291], "nharmon": 258, "massless_dof": 260, "fmin": 262, "fmax": 262, "inf": [262, 275, 286, 287, 290], "x0": 263, "modal_forc": 264, "return_accel": 264, "rotatoin": 267, "specfici": 267, "rotmat": 267, "cross_matrix": 268, "rvec": [269, 273], "descib": 270, "o": [270, 275, 297], "sorkin": 270, "hornung": 270, "rabinovich": 270, "depart": 270, "scienc": 270, "eth": 270, "zurich": 270, "jan": [270, 274], "2017": 270, "onlin": 270, "igl": 270, "ethz": 270, "ch": 270, "arap": 270, "svd_rot": 270, "wi": 270, "06": [271, 273, 275, 278, 280], "quat": 272, "daniel": 274, "henslei": 274, "randi": 274, "may": 274, "extend": [274, 288], "24th": 274, "nternat": 274, "odal": 274, "nalysi": 274, "onfer": 274, "220": 274, "230": 274, "st": 274, "loui": 274, "missouri": 274, "januari": 274, "2006": 274, "bart": 274, "peeter": 274, "herman": 274, "van": 274, "der": 274, "auwera": 274, "patrick": 274, "guillaum": 274, "leuridan": 274, "polymax": [274, 279, 282, 297], "domain": [274, 275, 280, 285, 287, 288, 291, 297], "standard": [274, 280, 286, 290, 298], "shock": 274, "523692": 274, "2004": 274, "url": 274, "doi": 274, "1155": 274, "usag": [275, 277, 279, 283, 297], "walk": [275, 277, 287, 289], "entireti": 275, "workflow": [275, 277, 283, 297], "collect": [275, 282, 286, 287, 288], "quicklook": 275, "plt": [275, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "featur": [275, 277, 280, 286, 287, 288, 290, 297, 298], "lot": [275, 285, 287, 288], "plot_opt": [275, 281], "trival": 275, "addition": [275, 277, 280, 281, 287, 290, 291, 297], "onc": [275, 276, 279, 280, 281, 286, 288, 290, 297], "crucial": 275, "success": 275, "reason": [275, 276, 281, 285, 286, 288, 290, 291, 297], "analys": [275, 276, 279, 280, 283, 297], "laboratori": [275, 277], "outer": [275, 281, 291], "reson": [275, 285, 286, 287, 290, 291, 297], "abl": [275, 277, 280, 287, 288, 290, 291, 297], "interior": 275, "our": [275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "exterior": 275, "At": [275, 276, 278, 279, 280, 281, 285, 286, 287, 288, 290, 297], "goal": [275, 276, 280, 291, 297], "often": [275, 279, 280, 285, 286, 287, 288, 290, 291, 297], "exclus": 275, "obliqu": 275, "directli": [275, 276, 278, 280, 281, 286, 287, 288, 290, 297], "nose": [275, 276, 277, 285], "wise": 275, "ipython": [275, 279, 298], "consol": [275, 279, 280, 286, 297, 298], "previou": [275, 277, 278, 281, 286, 287, 288, 289, 290, 291, 297], "496": 275, "062": 275, "000": [275, 288, 297], "20497": 275, "500": [275, 285, 286, 287, 288, 291], "429": 275, "256": 275, "290": 275, "407": 275, "489": 275, "063": 275, "reveal": [275, 281, 285, 297], "advantag": [275, 290, 291, 297], "intersect1d": [275, 281, 297, 298], "variant": [275, 297], "fieldnam": [275, 297], "develop": [275, 277, 278, 285, 286, 288, 290, 297], "environ": [275, 280, 282, 285, 288, 297], "recogn": [275, 288, 291, 297], "five": [275, 297, 298], "u8": [275, 297], "f8": [275, 297], "u2": [275, 297], "byte": [275, 297], "bit": [275, 279, 280, 285, 286, 288, 290, 291, 297], "unsign": [275, 297], "signifi": [275, 297], "latter": [275, 279, 286, 288, 291, 297], "12686": 275, "examin": [275, 285, 286, 287, 288, 297], "again": [275, 276, 277, 278, 279, 280, 281, 285, 286, 287, 288, 290, 291, 297], "previous": [275, 278, 285, 287, 288, 290, 291, 297], "less": [275, 276, 277, 286, 287, 288, 290, 291, 297], "40": [275, 276, 277, 278, 280, 286, 288, 297], "charact": [275, 297], "recal": [275, 281, 287, 288, 290, 291, 297], "12687": 275, "u1": [275, 297], "might": [275, 280, 285, 286, 288, 297], "similarli": [275, 278, 279, 280, 281, 287, 288, 291, 297, 298], "understand": [275, 278, 279, 280, 287, 288, 297], "verifi": [275, 277, 280, 281, 288, 291, 297], "correctli": [275, 278, 279, 280, 281, 297], "triad": [275, 297], "encod": [275, 297], "readabl": [275, 297], "1x": [275, 288, 297], "1y": [275, 287, 288, 297], "1z": [275, 288, 290, 297], "20496x": 275, "20496y": 275, "20496z": 275, "u7": [275, 279], "aspect": [275, 287, 297], "smaller": [275, 276, 288, 297], "zoom": [275, 280, 288, 291, 297], "blue": [275, 276, 277, 278, 280, 287, 297], "alwai": [275, 287, 297], "red": [275, 277, 280, 287, 297], "toward": [275, 285, 286, 287, 291], "finish": [275, 281, 297], "gather": 275, "shapes_glob": 275, "briefli": [275, 286, 290, 291, 297], "38058": 275, "u80": [275, 297], "hold": [275, 276, 278, 285, 287, 290, 297], "belong": [275, 297], "thu": [275, 280, 286, 297], "avail": [275, 278, 289, 291, 297, 298], "80": [275, 276, 278, 297], "feel": [275, 297], "relev": [275, 290, 297], "One": [275, 276, 280, 285, 286, 288, 290, 291, 297], "thing": [275, 278, 279, 280, 285, 287, 290, 297], "sometim": [275, 280, 287], "slight": [275, 291], "caus": [275, 286, 287, 291, 297], "instabl": [275, 297], "easi": [275, 277, 279, 283, 288, 291, 297], "carefulli": 275, "statement": 275, "subtl": [275, 297], "seem": [275, 280, 286, 287, 290, 297], "inde": [275, 278, 280, 286, 288, 290, 291, 297], "79983277e": 275, "35834268e": 275, "75579236e": 275, "66030128e": 275, "39180665e": 275, "experienc": 275, "readili": [275, 276, 289], "logic": 275, "trigger": [275, 280, 291, 297], "advanc": [275, 281, 297], "reiter": 275, "target": [275, 280, 297], "remain": [275, 278, 279, 285, 286, 287, 288, 297], "reader": [275, 288, 291, 297, 298], "concept": [275, 290, 291, 297], "encourag": [275, 297], "misappli": [275, 297], "nuanc": [275, 297], "introduc": [275, 277, 285, 286, 288, 291, 297], "bug": [275, 297], "As": [275, 276, 285, 286, 288, 290, 297], "mention": [275, 290, 291], "come": [275, 277, 285, 286, 287, 288, 290, 291], "cordin": 275, "onto": [275, 277, 287, 297], "appear": [275, 276, 280, 285, 287, 290, 291, 297], "done": [275, 277, 279, 280, 288, 290, 297], "geometry_glob": 275, "though": [275, 276, 278, 280, 286, 288, 290, 291, 297], "went": 275, "troubl": 275, "downselect": 275, "algorithm": [275, 277], "by_effective_independ": [275, 277], "throw": [275, 277, 281], "awai": [275, 277, 281, 286, 288], "686": 275, "long": [275, 280, 285, 288, 290, 291, 297], "overlai": [275, 276, 278, 279, 280, 285, 297], "meshgrid": [275, 281, 286], "min_coord": 275, "max_coord": 275, "range_coord": 275, "num_grid": 275, "ceil": 275, "astyp": [275, 279], "linspac": [275, 281, 286, 287, 288, 290], "grid_arrai": 275, "num": [275, 278, 279, 280, 286, 287, 288, 290, 291, 297], "zip": [275, 278, 280, 285, 286, 287, 288, 290], "grid_point": 275, "ij": [275, 281, 286], "With": [275, 276, 277, 279, 280, 281, 291, 297, 298], "particularli": [275, 277, 278, 279, 280, 286, 290, 291, 297], "tail": [275, 277, 278], "further": [275, 283, 297], "elimin": 275, "candidate_nod": 275, "norm": [275, 281], "candidate_node_id": 275, "candidate_dof": [275, 277], "newaxi": [275, 276, 277, 278, 280, 287, 288, 290, 297], "captur": [275, 280, 291, 297], "band": [275, 278, 288, 290, 291, 297], "300": [275, 285, 291], "shape_bandwidth": 275, "target_shap": 275, "30": [275, 276, 277, 278, 279, 280, 286, 287, 288, 290, 291, 297], "illustr": [275, 280, 297], "could": [275, 276, 278, 279, 280, 281, 285, 286, 287, 288, 289, 290, 291, 297], "let": [275, 276, 279, 280, 285, 286, 287, 288, 290, 291, 297], "1217": 275, "almost": [275, 276, 287, 290], "count": 275, "moveaxi": [275, 277, 281, 287], "re": [275, 279, 281, 290, 291, 297], "oridin": 275, "keep_indic": [275, 277, 281], "intuit": [275, 279, 286, 288, 290, 297], "few": [275, 277, 278, 280, 287, 288, 290, 291, 297], "fuselag": [275, 278], "efi": 275, "set_yscal": [275, 285, 286, 287, 288, 290], "set_xlim": [275, 287, 291], "get_xlim": 275, "set_ylabel": [275, 276, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "set_xlabel": [275, 276, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "keep_dof": 275, "abund": 275, "aid": [275, 279, 280, 297], "test_geometri": [275, 279, 281], "2796": 275, "051": 275, "497": 275, "562": 275, "5248": 275, "095": 275, "031": 275, "6157": 275, "970": 275, "310": [275, 278], "6172": 275, "413": 275, "001": [275, 297], "6214": 275, "989": 275, "224": 275, "6272": 275, "438": 275, "037": 275, "6376": 275, "6392": 275, "6405": 275, "155": 275, "8143": 275, "384": 275, "129": 275, "8160": 275, "11664": 275, "11705": 275, "11722": 275, "11735": 275, "11764": 275, "11892": 275, "11909": 275, "13603": 275, "13647": 275, "13660": 275, "17107": 275, "17563": 275, "17573": 275, "123": 275, "18331": 275, "18416": 275, "185": [275, 288], "18787": 275, "19579": 275, "19651": 275, "29": [275, 276, 278, 288, 297], "19665": 275, "green": [275, 276, 277, 278, 280, 297], "pink": 275, "sure": [275, 279, 280, 281, 285, 287, 290, 297], "everyth": [275, 281], "ensur": [275, 276, 277, 278, 279, 280, 281, 285, 286, 288, 290, 291, 297], "distinguish": [275, 281, 287, 297], "nice": [275, 279, 288, 297, 298], "matrix_plot": [275, 276, 277, 278, 279, 280, 281, 297], "test_shap": [275, 277, 281], "ll": 275, "too": [275, 278, 285, 286, 288, 297], "instal": [275, 283], "tediou": [275, 279, 290], "inevit": [275, 288, 290, 291], "kind": [275, 280, 285, 286, 288, 290, 297], "purposefulli": 275, "don": [275, 279, 281, 285, 288, 290, 291, 297], "overwrit": [275, 276], "test_geometry_error": 275, "5th": 275, "elicit": 275, "rest": [275, 286, 297], "fairli": [275, 278], "veri": [275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 290, 291, 297], "projector": 275, "mathbf": [275, 277, 278, 287, 288, 290, 291, 297], "phi": [275, 278, 288, 297], "_a": 275, "test_system": 275, "wherea": [275, 280, 288, 297], "90": [275, 276, 278, 285, 286, 287, 297], "2868905": 275, "99964993": 275, "3210105": 275, "88194563": 275, "3289727": 275, "48791008": 275, "67": [275, 278, 288, 297], "75138079": 275, "66707341": 275, "55042371": 275, "76026978e": 275, "03": [275, 276, 278, 280, 283, 284, 288], "40194807e": 275, "58617331e": 275, "73749203e": 275, "09022372e": 275, "04": [275, 278, 283, 284], "68270938e": 275, "53050658e": 275, "80137822e": 275, "07032636e": 275, "46528917e": 275, "02431820e": 275, "76349533e": 275, "69407153e": 275, "83686628e": 275, "59999135e": 275, "49012119e": 275, "74121905e": 275, "04985114e": 275, "55739072e": 275, "65502669e": 275, "38297408e": 275, "34896916e": 275, "71546727e": 275, "47339469e": 275, "93925263e": 275, "19915019e": 275, "66942214e": 275, "39905468e": 275, "48742295e": 275, "91024169e": 275, "55791597e": 275, "30305914e": 275, "16004354e": 275, "31560277e": 275, "15253196e": 275, "19728196e": 275, "2796x": 275, "2796y": 275, "2796z": 275, "5248x": 275, "5248y": 275, "5248z": 275, "6157x": 275, "6157y": 275, "6157z": 275, "6172x": 275, "6172y": 275, "6172z": 275, "6214x": 275, "6214y": 275, "6214z": 275, "6272x": 275, "6272y": 275, "6272z": 275, "6376x": 275, "6376y": 275, "6376z": 275, "6392x": 275, "6392y": 275, "6392z": 275, "6405x": 275, "6405y": 275, "6405z": 275, "8143x": 275, "8143y": 275, "8143z": 275, "8160x": 275, "8160y": 275, "8160z": 275, "11664x": 275, "11664y": 275, "11664z": 275, "11705x": 275, "11705y": 275, "11705z": 275, "11722x": 275, "11722y": 275, "11722z": 275, "11735x": 275, "11735y": 275, "11735z": 275, "11764x": 275, "11764y": 275, "11764z": 275, "11892x": 275, "11892y": 275, "11892z": 275, "11909x": 275, "11909y": 275, "11909z": 275, "13603x": 275, "13603y": 275, "13603z": 275, "13647x": 275, "13647y": 275, "13647z": 275, "13660x": 275, "13660y": 275, "13660z": 275, "17107x": 275, "17107y": 275, "17107z": 275, "17563x": 275, "17563y": 275, "17563z": 275, "17573x": 275, "17573y": 275, "17573z": 275, "18331x": 275, "18331y": 275, "18331z": 275, "18416x": 275, "18416y": 275, "18416z": 275, "18787x": 275, "18787y": 275, "18787z": 275, "19579x": 275, "19579y": 275, "19579z": 275, "19651x": 275, "19651y": 275, "19651z": 275, "19665x": 275, "19665y": 275, "19665z": 275, "aim": [275, 290], "accur": [275, 276, 277, 278, 280, 286, 290, 297], "invari": 275, "lsim": [275, 297], "test_bandwidth": 275, "rb_frame": 275, "choos": [275, 280, 287, 288, 297], "rb_frequenc": 275, "chose": [275, 291, 297], "rb_coordin": 275, "startup": [275, 280, 286], "queri": [275, 288], "erron": [275, 297], "rb_shape": 275, "print": [275, 276, 278, 280, 281, 286, 287, 288, 297], "nois": [275, 277, 280, 290, 291, 297], "frequency_index": 275, "incorrect": [275, 297], "throughout": [275, 288], "intention": 275, "opposit": [275, 286, 287, 288], "thoroughli": [275, 290], "analyz": [275, 277, 282, 286, 287, 288, 290, 297], "34": [275, 276, 278, 280, 288, 297], "316000": 275, "35": [275, 276, 278, 280, 288, 297], "f4": 275, "Being": 275, "316": 275, "peculiar": 275, "contrari": 275, "rememb": [275, 290, 291, 297], "37": [275, 276, 278, 288, 297], "contrast": [275, 297], "38": [275, 276, 278, 280, 288, 297], "16000": 275, "39": [275, 276, 278, 280, 285, 286, 287, 288, 297], "c16": [275, 297], "ve": [275, 279, 288], "understood": [275, 288], "task": 275, "hand": [275, 279, 280, 285, 286, 291, 297], "discuss": [275, 285, 288, 290, 291, 297], "rigid_body_check": 275, "attempt": [275, 277, 281, 286, 290, 291, 297], "suspici": 275, "warrant": 275, "quantit": [275, 277], "wrong": [275, 297], "suspicious_dof": 275, "significantli": [275, 277, 278, 280, 290, 291, 297], "immedi": [275, 280, 291, 297], "behav": [275, 278, 287, 297], "hone": [275, 297], "difficult": [275, 279, 288, 291, 297], "rigid_body_fix_node_orient": 275, "suspicious_nod": 275, "test_geometry_correct": 275, "drive": [275, 277, 280, 288, 297], "drive_point": 275, "simultan": [275, 280, 281, 290, 291, 297], "total": [275, 280, 287, 288, 297], "back": [275, 276, 277, 279, 280, 281, 285, 286, 287, 288, 291, 297], "modal_fram": 275, "random_forc": 275, "statist": 275, "sqrt": [275, 286, 288, 290], "rfftfreq": [275, 280, 290, 291], "rfft": [275, 280, 290, 291], "sharp": [275, 280, 286, 287, 297], "responses_mod": [275, 288], "references_mod": 275, "responses_sampl": 275, "slice": [275, 277, 279, 285, 290, 291], "references_sampl": 275, "frf_sampl": 275, "hann": [275, 277, 280, 291, 297], "guiplot": [275, 277, 279, 280, 290, 297], "quickli": [275, 277, 279, 280, 283, 285, 286, 287, 288, 291, 297], "via": [275, 280, 288, 290, 297], "polymax_gui": [275, 279], "gui": [275, 279, 280, 291, 297], "pm": 275, "stabil": [275, 279, 280, 297], "diagram": [275, 280, 286, 297], "instanc": [275, 280, 285, 288], "drag": [275, 288, 297], "region": [275, 291, 297], "stabl": [275, 280, 297], "click": [275, 279, 280, 288, 297], "disk": [275, 280, 297, 298], "shape_comparison_t": [275, 276, 278, 280, 297], "test_shapes_polymax": [275, 279], "shapes_polymax": 275, "shape_correspond": 275, "4f": 275, "00": [275, 276, 278, 288, 297], "0067": 275, "9820": 275, "0218": 275, "9605": 275, "59": [275, 278, 287, 288, 297], "0458": 275, "4512": 275, "0344": 275, "4827": 275, "99": [275, 276, 278, 280, 291], "0077": 275, "7148": 275, "3471": 275, "0114": 275, "98": [275, 276, 278, 280, 291, 297], "0855": 275, "78": [275, 278, 280], "77": [275, 278, 280], "0156": 275, "97": [275, 276, 278, 280], "4382": 275, "47": [275, 276, 278, 288, 297], "0189": 275, "0342": 275, "57": [275, 276, 278, 288, 297], "49": [275, 276, 278, 280, 288, 297], "0003": 275, "1664": 275, "0012": 275, "0377": 275, "0000": [275, 288, 297], "0906": 275, "0026": 275, "1076": 275, "0078": 275, "1584": 275, "0061": 275, "3016": 275, "0013": 275, "1005": 275, "107": [275, 278], "0018": 275, "1139": 275, "0065": 275, "5165": 275, "140": [275, 297], "0016": 275, "3194": 275, "0097": 275, "2438": 275, "148": 275, "0045": 275, "3527": 275, "158": 275, "70": [275, 276, 278, 280, 288, 297], "0005": 275, "2717": 275, "164": [275, 298], "0063": 275, "1195": 275, "68": [275, 278, 288, 297], "0183": 275, "8317": 275, "0171": 275, "8663": 275, "183": 275, "0042": 275, "1180": 275, "180": [275, 286, 287, 297], "dot": [275, 286, 287, 288], "shape_phas": 275, "einsum": 275, "test_comparison_geometri": 275, "test_comparison_shap": 275, "fem_comparison_geometri": 275, "fem_comparison_shap": 275, "stick": 275, "insuffici": 275, "commun": 275, "stakehold": 275, "uniaxi": [275, 279, 290], "among": [275, 291], "expansion_basi": 275, "expanded_shap": 275, "Or": [275, 280, 297], "expansion_comparison_geometri": 275, "expansion_comparison_shap": 275, "toi": 276, "cubit": [276, 281], "spaceship": 276, "attach": [276, 278, 281, 286, 287, 288, 297], "execut": [276, 281], "thruster": 276, "nodeset": [276, 280], "block_1": 276, "block_2": 276, "third": [276, 279, 280], "block_al": 276, "truth": [276, 281, 282, 290], "eigen": [276, 281], "cbr": 276, "block_": 276, "degr": 276, "eig": 276, "inp": 276, "basic": [276, 283, 284, 285, 290, 297], "popul": [276, 279, 290, 297], "reli": [276, 278, 280, 287, 297], "packag": [276, 278, 280, 283, 286, 288, 290, 291, 297], "check_shap": 276, "reduced_shap": 276, "wish": [276, 277, 280, 281, 288, 290, 297], "identifi": [276, 277, 279, 280, 285, 286, 288, 291, 297], "symmetri": 276, "perfect": [276, 278, 291, 297], "agreement": [276, 277, 279, 280, 290], "technic": 276, "pertin": 276, "super": 276, "aren": [276, 281], "cb_shape": 276, "full_shap": [276, 278], "know": [276, 279, 285, 286, 288, 290, 297], "compare_geo": 276, "compare_shap": [276, 278], "set_titl": [276, 278, 279, 280, 285, 286, 288, 290, 291, 297], "tend": [276, 280, 286, 287, 288, 290, 291, 297], "break": [276, 285, 291, 297], "poor": [276, 277, 278, 280, 290, 291, 297], "fact": [276, 285, 286, 287, 288, 290, 291], "nearli": [276, 278, 286, 291], "assembli": [276, 278, 281], "colloc": 276, "combined_shap": [276, 279, 297], "successfulli": [276, 278, 280, 281, 297], "stai": [276, 280, 285, 297], "renam": [276, 281], "original_nod": 276, "substructured_nod": 276, "substructure_indic": 276, "truth_indic": 276, "463": 276, "585": 276, "750": [276, 288, 297], "834": [276, 280], "1368": 276, "1434": 276, "1458": 276, "1665": 276, "1727": 276, "2021": 276, "07": [276, 278], "2767": 276, "2766": 276, "3140": 276, "3138": 276, "3432": 276, "48": [276, 278, 280, 288, 297], "3767": 276, "3765": 276, "3871": 276, "3870": 276, "86": [276, 278], "4063": 276, "4062": 276, "4251": 276, "4250": 276, "4312": 276, "4319": 276, "4948": 276, "4947": 276, "5195": 276, "5193": 276, "5713": 276, "5687": 276, "6213": 276, "6198": 276, "6215": 276, "6210": 276, "6945": 276, "7110": 276, "7102": 276, "79": [276, 278, 280], "7247": 276, "83": [276, 278, 288], "7246": 276, "7398": 276, "7397": 276, "7732": 276, "7729": 276, "8052": 276, "87": [276, 278], "8049": 276, "8101": 276, "7992": 276, "09": [276, 297], "8336": 276, "8310": 276, "8877": 276, "8860": 276, "9108": 276, "9069": 276, "9323": 276, "9263": 276, "9627": 276, "9591": 276, "9914": 276, "9875": 276, "10095": 276, "10060": 276, "10308": 276, "10307": 276, "10391": 276, "10369": 276, "12108": 276, "12079": 276, "isn": [276, 281, 291, 297], "until": [276, 280, 297], "31st": 276, "cb": [276, 278], "sdynpi": [277, 278, 279, 280, 284, 285, 289, 291], "replic": 277, "tune": [277, 280, 288], "beam_airplan": [277, 278, 285, 290], "demo": [277, 278, 285, 288, 290, 291], "modal_system": [277, 285, 288, 290, 291, 297], "control_dof": 277, "025": [277, 288, 297], "recreat": 277, "dure": [277, 280, 281, 288, 297], "lead": 277, "environment_dof": 277, "242": 277, "301": [277, 278], "302": 277, "304": 277, "305": [277, 278], "respond": [277, 285, 286, 287, 288, 290], "1000": [277, 280, 286, 287, 288, 290, 291, 297], "arbitrari": 277, "uncorrel": [277, 290], "input_cpsd": 277, "predict": [277, 278, 285, 286, 287, 298], "environment_specif": 277, "great": [277, 291], "excitation_loc": [277, 290], "201x": [277, 278, 297], "201z": [277, 278, 285, 297], "233z": [277, 278], "305y": [277, 278], "control_frf": 277, "strategi": [277, 280], "perhap": [277, 278, 285, 286, 290, 297], "simplest": [277, 297], "util": [277, 290, 297], "straightforward": [277, 286], "control_predict": 277, "900": [277, 297], "trivial": [277, 288, 291], "offer": [277, 286, 288, 290, 297], "apsd": 277, "focus": [277, 280, 287], "mainli": 277, "relationship": [277, 286, 290, 291], "ill": 277, "usual": [277, 287], "fast": [277, 291], "input_weighting_matrix_tikhonov": 277, "input_weighting_scale_tikhonov": 277, "input_cpsd_tikhonov": 277, "control_predictions_tikhonov": 277, "expens": 277, "input_weighting_matrix_shaker_eq": 277, "input_weighting_scale_shaker_eq": 277, "5e": 277, "input_cpsd_shaker_eq": 277, "control_predictions_shaker_eq": 277, "shaker_equ": 277, "101y": [277, 278, 285, 297], "serious": 277, "coordinate_to_improv": 277, "input_cpsd_weight": 277, "control_predictions_weight": 277, "weighted_pseudoinvers": 277, "degrad": [277, 278, 291], "driven": [277, 287], "white": [277, 279, 297], "gracefulli": [277, 290], "buzz_input_cpsd": 277, "buzz_predict": 277, "buzz_coher": 277, "buzz_phas": 277, "modified_environment_specif": 277, "trend": [277, 280, 286], "dark": 277, "light": [277, 286], "accomod": 277, "input_cpsd_buzz": 277, "control_predictions_buzz": 277, "attract": [277, 286], "certainli": [277, 290], "input_sign": 277, "input_cpsd_buzz_check": 277, "alpha": [277, 286, 288], "diff": [277, 280], "control_buzz": 277, "buzz_simul": 277, "tutori": [277, 283], "notebook": 278, "component_system": 278, "126": [278, 297], "492": 278, "transmission_simul": 278, "132": 278, "component_geometri": 278, "easiest": [278, 291], "futur": [278, 280], "1xx": 278, "2xx": 278, "3xx": 278, "dprohe": [278, 279], "appdata": 278, "python38": 278, "lib": 278, "site": 278, "core": [278, 279, 290, 297], "1541": 278, "pyvistadeprecationwarn": 278, "cell_arrai": 278, "deprec": 278, "cell_data": 278, "1401": 278, "point_arrai": 278, "point_data": 278, "busi": [278, 297], "interrog": [278, 280, 287], "101z": [278, 285, 297], "101rx": [278, 297], "101ry": [278, 297], "101rz": [278, 297], "102x": 278, "102y": 278, "102z": 278, "102rx": 278, "102ry": 278, "102rz": 278, "103x": 278, "103y": 278, "103z": 278, "103rx": 278, "103ry": 278, "103rz": 278, "104x": 278, "104y": 278, "104z": 278, "104rx": 278, "104ry": 278, "104rz": 278, "105x": 278, "105y": 278, "105z": 278, "105rx": 278, "105ry": 278, "105rz": 278, "106x": 278, "106y": 278, "106z": 278, "106rx": 278, "106ry": 278, "106rz": 278, "107x": 278, "107y": 278, "107z": 278, "107rx": 278, "107ry": 278, "107rz": 278, "108x": 278, "108y": 278, "108z": 278, "108rx": 278, "108ry": 278, "108rz": 278, "109x": 278, "109y": 278, "109z": 278, "109rx": 278, "109ry": 278, "109rz": 278, "110x": 278, "110y": 278, "110z": 278, "110rx": 278, "110ry": 278, "110rz": 278, "111x": 278, "111y": 278, "111z": 278, "111rx": 278, "111ry": 278, "111rz": 278, "112x": 278, "112y": 278, "112z": 278, "112rx": 278, "112ry": 278, "112rz": 278, "113x": 278, "113y": 278, "113z": 278, "113rx": 278, "113ry": 278, "113rz": 278, "114x": 278, "114y": 278, "114z": 278, "114rx": 278, "114ry": 278, "114rz": 278, "115x": 278, "115y": 278, "115z": 278, "115rx": 278, "115ry": 278, "115rz": 278, "116x": 278, "116y": 278, "116z": 278, "116rx": 278, "116ry": 278, "116rz": 278, "117x": 278, "117y": 278, "117z": 278, "117rx": 278, "117ry": 278, "117rz": 278, "118x": 278, "118y": 278, "118z": 278, "118rx": 278, "118ry": 278, "118rz": 278, "119x": 278, "119y": 278, "119z": 278, "119rx": 278, "119ry": 278, "119rz": 278, "120x": 278, "120y": 278, "120z": 278, "120rx": 278, "120ry": 278, "120rz": 278, "121x": 278, "121y": [278, 297], "121z": 278, "121rx": 278, "121ry": 278, "121rz": 278, "lt": [278, 285, 288, 290], "u6": 278, "ahead": 278, "component_shap": 278, "cee": 278, "python_util": 278, "src": 278, "sdynpy_system": 278, "453": 278, "runtimewarn": 278, "encount": 278, "true_divid": 278, "diag": [278, 288], "pi": [278, 286, 287, 288, 290, 291, 297], "un": [278, 291], "co": [278, 286], "pick": [278, 279, 285, 297], "fourth": [278, 280], "wing_boundary_dof": 278, "262": 278, "tail_boundary_dof": 278, "119": 278, "303": 278, "308": 278, "all_boundary_dof": 278, "internal_dof": 278, "109": 278, "306": 278, "reduction_dof": 278, "201y": [278, 297], "205x": 278, "205y": 278, "205z": 278, "209x": 278, "209y": 278, "209z": 278, "213x": 278, "213y": 278, "213z": 278, "217x": 278, "217y": 278, "217z": 278, "221x": 278, "221y": 278, "221z": 278, "221rx": 278, "221ry": 278, "221rz": 278, "225x": 278, "225y": 278, "225z": 278, "229x": 278, "229y": 278, "229z": 278, "233x": 278, "233y": 278, "237x": 278, "237y": 278, "237z": 278, "241x": 278, "241y": 278, "241z": [278, 285], "245x": 278, "245y": 278, "245z": 278, "249x": 278, "249y": 278, "249z": [278, 285], "253x": 278, "253y": 278, "253z": 278, "257x": 278, "257y": 278, "257z": 278, "261x": 278, "261y": 278, "261z": 278, "262x": 278, "262y": 278, "262z": 278, "262rx": 278, "262ry": 278, "262rz": 278, "265x": 278, "265y": 278, "265z": 278, "269x": 278, "269y": 278, "269z": 278, "273x": 278, "273y": 278, "273z": 278, "277x": 278, "277y": 278, "277z": 278, "281x": 278, "281y": 278, "281z": 278, "301x": 278, "301y": 278, "301z": 278, "303x": 278, "303y": 278, "303z": 278, "303rx": 278, "303ry": 278, "303rz": 278, "305x": 278, "305z": 278, "306x": 278, "306y": 278, "306z": 278, "308x": 278, "308y": 278, "308z": 278, "308rx": 278, "308ry": 278, "308rz": 278, "310x": 278, "310y": 278, "310z": 278, "account": [278, 280], "formula": [278, 286, 288, 290], "bmatrix": [278, 287, 288, 290], "dd": 278, "da": 278, "678": 278, "system_guyan": 278, "component_shapes_guyan": 278, "system_i": 278, "in1d": [278, 281], "full_system_guyan": 278, "full_geometry_guyan": 278, "full_shapes_guyan": 278, "general": 278, "truth_shapes_to_compar": 278, "shapes_to_compar": 278, "frequency_error": 278, "88": 278, "89": 278, "69": [278, 288, 297], "452": 278, "incorpor": [278, 297], "dynamic_frequ": 278, "system_dynam": 278, "component_shapes_dynam": 278, "full_system_dynam": 278, "full_geometry_dynam": 278, "full_shapes_dynam": 278, "431": 278, "elsewher": 278, "famou": 278, "ii": 278, "ib": 278, "bi": 278, "bb": 278, "henc": [278, 290], "system_cb": 278, "component_shapes_cb": 278, "n_fixed_base_mod": 278, "full_system_cb": 278, "full_geometry_cb": 278, "full_shapes_cb": 278, "clearli": [278, 285, 286, 287, 288, 291, 297], "fair": 278, "system_cm": 278, "component_shapes_cm": 278, "full_system_cm": 278, "full_geometry_cm": 278, "full_shapes_cm": 278, "shape_mac": 278, "cm": [278, 297], "geometry_i": 278, "shapes_i": 278, "full_shapes_to_compar": 278, "shapes_i_to_compar": 278, "flip_sign": 278, "compare_geom": 278, "metadata": [278, 279, 288], "set_ylim": [278, 286, 287, 291], "legend": [278, 286, 287, 288, 290], "across": [278, 285, 288, 291, 297], "surprisingli": 278, "special": [278, 287], "struggl": 278, "expect": [278, 279, 280, 286, 288, 290, 291, 297, 298], "reaction": 278, "abil": [278, 279, 288, 297, 298], "focu": [278, 285, 287, 297], "bog": 278, "pptx": 279, "read_rattlesnake_output": [279, 298], "rattlesnake_modal_data": 279, "time_data": [279, 298], "tight_layout": [279, 280, 285, 286, 287, 288, 290, 291, 297], "worth": [279, 280, 286, 288], "explor": [279, 280, 297], "31745": 279, "tell": [279, 280, 281, 285, 287, 288, 291, 297], "piec": [279, 280, 288], "sdynpy_coordin": 279, "28376x": 279, "28376y": 279, "28376z": 279, "28560x": 279, "28560y": 279, "28560z": 279, "17290x": 279, "17290y": 279, "17290z": 279, "16733x": 279, "16733y": 279, "16733z": 279, "2467x": 279, "2467y": 279, "2467z": 279, "2392x": 279, "2392y": 279, "2392z": 279, "33715y": 279, "36140y": 279, "24046x": 279, "30947x": 279, "8579y": 279, "12664y": 279, "4475z": 279, "2991y": 279, "5457x": 279, "ramp": [279, 291, 297], "time_start": 279, "time_end": 279, "truncated_time_data": 279, "response_indic": 279, "reference_indic": 279, "pull": [279, 285, 286, 287, 288, 297], "launch": 279, "frf_window": 279, "lbf": 279, "realli": [279, 288], "510": 279, "propreti": 279, "obviou": [279, 280, 285, 286, 287, 297], "vari": [279, 291, 297], "eventu": [279, 281, 286, 291, 297], "question": 279, "exodus_eigensolut": 279, "fem_geometri": 279, "destroi": 279, "keep_nod": 279, "12664": 279, "17290": 279, "30947": 279, "28560": 279, "36140": 279, "33715": 279, "28376": 279, "24046": 279, "16733": 279, "8579": 279, "4475": 279, "2467": 279, "2991": 279, "2392": 279, "5457": 279, "rc": 279, "rattlesnake_test_geometri": 279, "smac_gui": [279, 297, 298], "sdynpy_smac": 279, "0x14fe6f05b80": 279, "guiess": 279, "solver": [279, 280], "autofit": [279, 297], "switch": [279, 286, 297], "rattlesnake_test_shapes_smac": 279, "script": [279, 280, 297], "sdynpy_polymax": 279, "0x14fff4c5d30": 279, "resynthesi": [279, 280, 297], "rattlesnake_test_shapes_polymax": 279, "test_shapes_smac": 279, "fem_shap": 279, "2000": [279, 280, 281, 287, 290, 297], "meaning": [279, 285, 297], "response_dof": [279, 291, 297], "test_shape_matrix_smac": 279, "test_shape_matrix_polymax": 279, "test_shape_matrix_fem": 279, "fem_shapes_reduc": 279, "mac_smac_polymax": 279, "mac_smac_fem": 279, "mac_polymax_fem": 279, "Then": [279, 280, 297], "fem_match": 279, "geometry_kwarg": 279, "mode_1": 279, "perfectli": [279, 290], "enough": [279, 280, 281, 285, 286, 290, 291], "doc": [279, 298], "create_summary_pptx": [279, 298], "creeat": 279, "templat": 279, "design": [279, 285, 297], "slide": [279, 297], "background": 279, "corpor": 279, "reformat": 279, "custom": 279, "layout": [279, 297], "theme": 279, "pr": 279, "powerpoint_sandia_them": 279, "barc": 279, "rattlesnake_test_quicklook": 279, "overview": [279, 283], "create_latex_summari": [279, 298], "strongli": 279, "suggest": [279, 280, 285, 298], "subdirectori": 279, "snippet": 279, "rattlesnake_test": 279, "rattlesnake_test_memo_cont": 279, "tex": 279, "documentclass": 279, "usepackag": 279, "graphicx": 279, "caption": 279, "subcapt": 279, "author": 279, "dan": 279, "rohe": 279, "maketitl": 279, "abstract": [279, 286], "obvious": 279, "context": 279, "surround": [279, 285, 291], "setup": [279, 280, 285, 297], "analyst": 279, "who": 279, "postprocess": 279, "gain": [279, 288, 297], "happen": [279, 280, 286, 287, 288, 290, 291, 297], "limit": [279, 281, 285, 290, 291, 297], "lstsq": 279, "rebuild": 279, "properli": [279, 291], "assumpt": [279, 291, 297], "fexo_repack": 279, "expanded_shapes_polymax": 279, "combined_expanded_geometri": 279, "combined_expanded_shap": 279, "expanded_mode_1": 279, "rattlesnake_test_output": 279, "rattlesnake_test_output_expand": 279, "paraview": 279, "contact": 280, "solidmechan": 280, "explicit": 280, "cantilev": 280, "fork": 280, "character": [280, 285], "smooth": 280, "pseudorandom_sign": 280, "quit": [280, 285, 288, 297], "clumbsi": 280, "scroll": [280, 288], "inc": 280, "pseudorandom_signal_fft": 280, "abruptli": 280, "10th": 280, "shorten": 280, "lose": 280, "intermedi": 280, "leakag": [280, 291], "determinist": [280, 291], "smoothli": 280, "past": [280, 286, 291], "signal_shap": 280, "random_sign": 280, "random_signal_": 280, "random_signal_fft": 280, "repetit": 280, "deck": 280, "wrote": 280, "piecewis": 280, "prescrib": 280, "nodelist_2": 280, "aprepro": 280, "termin": 280, "0000025": 280, "twice": [280, 297], "tuning_fork_pseudorandom": 280, "40002": 280, "333": 280, "144": 280, "displacement_x": 280, "displacement_i": 280, "displacement_z": 280, "acceleration_x": 280, "acceleration_i": 280, "acceleration_z": 280, "force_external_x": 280, "force_external_i": 280, "force_external_z": 280, "external_energi": 280, "internal_energi": 280, "kinetic_energi": 280, "momentum_x": 280, "momentum_i": 280, "momentum_z": 280, "explicitli": [280, 288], "grab": 280, "force_nod": 280, "excitation_force_sign": 280, "force_data": 280, "signalprocessinggui": [280, 291, 297], "all_data": 280, "shortli": [280, 288, 297], "durat": [280, 297], "uncertainti": 280, "sm": 280, "explain": 280, "diverg": [280, 297], "steadi": [280, 286, 290, 291, 297], "decai": [280, 286, 287, 291, 297], "exponenti": [280, 286, 287, 288, 291, 297], "vice": [280, 297], "versa": [280, 297], "doubl": [280, 286, 297], "sent": [280, 297], "send": [280, 297], "anyth": 280, "rectangl": 280, "reject": [280, 291], "counter": 280, "notic": 280, "clean": [280, 291], "219": 280, "polypi": [280, 298], "bring": [280, 288, 297], "spurious": 280, "thoughout": 280, "peak": [280, 285, 286, 287, 288, 297], "qmif": [280, 297], "sensit": 280, "dip": [280, 291], "poli": [280, 297], "statu": 280, "messag": 280, "symbol": [280, 288, 297], "unstabl": 280, "shouldn": 280, "particip": [280, 297], "circl": [280, 287, 297], "rule": [280, 286, 288, 291, 297], "thumb": [280, 291, 297], "peopl": 280, "mous": [280, 288, 297], "hover": [280, 297], "black": 280, "frfgui": 280, "332": 280, "judg": [280, 297], "adequaci": [280, 297], "accumul": 280, "overal": [280, 297], "pictur": 280, "tuning_fork_random": 280, "force_external_": 280, "slightli": [280, 291, 297], "leav": [280, 287, 297], "alon": 280, "substanti": 280, "relat": [280, 290], "outsid": [280, 286, 291], "standpoint": 280, "unrel": 280, "suffer": [280, 290], "lessen": 280, "diminish": 280, "middl": [280, 288, 290, 291], "seen": [280, 281, 285, 287, 288, 291, 297], "tuning_fork_geometri": 280, "benefici": 280, "exodus_sd": 280, "tuning_fork_sd": 280, "shapes_sd": 280, "shapes_sm_pr": 280, "tuning_fork_pseudorandom_shap": 280, "shapes_sm_ra": 280, "tuning_fork_random_shap": 280, "mechan": [280, 288, 298], "sm_mac": 280, "pr_indic": 280, "ra_indic": 280, "755": 280, "1299": 280, "1717": 280, "1808": 280, "bewteen": 280, "artifici": [280, 291, 297], "excel": 280, "coars": 280, "hexahedr": 280, "softer": 280, "refin": 280, "sd_mac": 280, "2500": [280, 287, 288, 290], "sd_indic": 280, "176": 280, "166": 280, "240": 280, "358": 280, "327": 280, "362": 280, "426": 280, "378": 280, "832": 280, "848": 280, "1129": 280, "1011": 280, "1383": 280, "1098": 280, "1445": 280, "1457": 280, "1234": 280, "1860": 280, "1937": 280, "1655": 280, "1947": 280, "1751": 280, "2015": 280, "artifact": [280, 291], "heavili": [280, 288, 290, 297], "lid": 281, "bc": 281, "abc": 281, "serv": 281, "qhullerror": 281, "qhull": 281, "creation": [281, 291], "fail": 281, "pretend": [281, 286, 297], "container_s": 281, "component_s": 281, "lid_depth": 281, "container_thick": 281, "lid_posit": 281, "component_posit": 281, "grid_siz": 281, "component_grid_s": 281, "grid_inset": 281, "other_dimens": 281, "meshgrid_input": 281, "grid_0": 281, "grid_1": 281, "grid_2": 281, "this_posit": 281, "ones": [281, 297], "this_positions_opposit": 281, "exactli": [281, 286, 288, 290, 291], "max_condit": 281, "n_node": 281, "original_indic": 281, "face_indic": 281, "face_nod": 281, "face_el": 281, "atleast_1d": 281, "proce": [281, 286, 288, 297], "transmission_simulator_mod": 281, "system_ab": 281, "system_bc": 281, "system_b": 281, "geom": 281, "forget": 281, "won": 281, "connection_nod": 281, "connection_map_ab": 281, "connection_map_bc": 281, "connection_map_b": 281, "soften": 281, "connection_shapes_ab": 281, "connection_shapes_bc": 281, "connection_shapes_b": 281, "connection_shap": 281, "connection_dofs_ab": 281, "connection_dofs_bc": 281, "connection_dofs_b": 281, "constraint_matrix_ab_b": 281, "constraint_matrix_bc_b": 281, "constrained_system": [281, 297], "constrained_shap": [281, 297], "instrument": [282, 285], "virtual": 282, "experi": [282, 291], "checkout": 282, "recommend": [283, 291, 297], "showcas": 283, "bibliographi": 283, "search": 283, "undamp": [284, 287, 297], "harmon": [284, 290], "homework": [284, 289], "studi": 285, "oppos": [285, 287, 288], "boat": 285, "wind": 285, "turbin": 285, "bumpi": 285, "road": 285, "car": 285, "tire": 285, "utmost": 285, "surviv": 285, "failur": 285, "servic": 285, "express": [285, 286, 288, 290], "differenti": [285, 286], "analogi": 285, "roof": 285, "ultim": 285, "strength": 285, "word": [285, 290], "depth": 285, "worri": [285, 291], "next": [285, 287, 288, 290, 297], "explan": 285, "subpackag": 285, "propel": 285, "load_loc": 285, "275z": 285, "load_sign": 285, "turbul": 285, "slowli": [285, 291], "nightmar": 285, "decod": 285, "responses_fft": [285, 287], "loads_fft": 285, "flat": [285, 286], "pretti": 285, "uniformli": 285, "peaki": 285, "big": [285, 297], "distinct": 285, "preferenti": 285, "bias": 285, "care": [285, 286, 297], "imbalanc": 285, "spin": [285, 288], "imagin": [285, 291], "force_loc": 285, "response_loc": [285, 290], "die": [285, 286, 291], "amplifi": [285, 286], "attenu": [285, 291], "trace": 285, "practic": [285, 288, 290, 291], "sweep": 285, "chirp_sign": 285, "chirp": [285, 297], "chirp_respons": 285, "chirp_load": 285, "swept": 285, "axessubplot": 285, "ylabel": 285, "gt": [285, 290], "thought": 285, "add_subplot": [285, 286], "ax2": 285, "frame_on": 285, "c0": 285, "tick_param": 285, "c1": [285, 287, 288], "xaxi": 285, "tick_top": 285, "yaxi": 285, "tick_right": 285, "set_label_posit": 285, "amplif": [285, 286, 288], "surpris": 285, "pattern": 285, "cover": [285, 288, 290, 291, 297], "complic": [285, 287, 288, 297], "clearer": 285, "saw": [285, 286, 287, 288, 289, 297], "theori": [285, 286, 287, 290], "behind": [285, 286, 290], "fundament": 286, "phenomenon": [286, 291], "primarili": [286, 288], "presenc": 286, "restor": [286, 288], "stretch": 286, "farther": 286, "atom": 286, "molecul": 286, "arriv": [286, 288], "suddenli": 286, "constantli": 286, "slow": [286, 290, 297], "continu": [286, 288, 291, 297], "travel": [286, 287], "overcom": [286, 288], "sai": [286, 287, 291, 297], "gridspec": 286, "funcanim": 286, "fa": 286, "def": 286, "draw_spring_mass": 286, "mass_siz": 286, "mass_to_ground_length": 286, "num_wind": 286, "spring_width": 286, "arrow_s": 286, "arrow_label": 286, "arrow_color": 286, "arrow_offset": 286, "fontsiz": 286, "spring_length": 286, "ground_posit": 286, "mass_x": 286, "mass_i": 286, "va": 286, "num_arrow": 286, "els": 286, "arrow_posit": 286, "mean_posit": 286, "quiver": 286, "xy": [286, 290], "scale_unit": 286, "kx": 286, "ddot": [286, 287, 288], "dof_nam": 286, "force_sign": [286, 287, 288], "plot_spring_mass_respons": 286, "displacement_index": 286, "drawing_axi": 286, "disp_axi": 286, "vel_axi": 286, "accel_axi": 286, "force_axi": 286, "constrained_layout": 286, "disp_siz": 286, "vel_siz": 286, "accel_s": 286, "force_s": 286, "axvlin": [286, 291], "signfic": [286, 290], "downward": 286, "seri": [286, 297], "short": [286, 288, 291], "acquir": [286, 291], "momentum": 286, "upward": [286, 287], "250": [286, 288], "compress": 286, "325": 286, "indefinit": [286, 288, 291], "fortun": 286, "truli": 286, "loss": 286, "ball": 286, "bounc": 286, "never": [286, 287, 297], "guitar": 286, "pluck": [286, 288], "sound": 286, "di": 286, "damping_valu": 286, "oscil": 286, "think": [286, 287, 290, 297], "c_": 286, "cr": 286, "km": 286, "applic": [286, 297], "plug": [286, 288], "5000": [286, 297], "amplification_factor": 286, "amplfic": 286, "notabl": 286, "spike": 286, "unintuit": 286, "realist": [286, 288, 291, 297], "lag": 286, "cosin": 286, "x_1": [286, 287, 288], "x_2": [286, 287, 288], "sin": [286, 297], "compact": 286, "euler": 286, "substitut": [286, 287, 288, 290], "former": [286, 297], "chain": [286, 288], "multiplicand": 286, "taken": [286, 297], "nonzero": [286, 288], "divid": [286, 288, 290], "goe": [286, 287], "set_ytick": [286, 287], "infin": [286, 291], "transit": 286, "blunt": [286, 297], "span": [286, 297], "probabl": [286, 290], "sharper": [286, 297], "repons": 286, "practition": [286, 290, 291], "expos": 286, "laser": [286, 290], "vibromet": 286, "becom": [286, 287, 288, 290, 291], "accustom": 286, "derivative_label": 286, "reduction_label": 286, "ax_row": 286, "undergo": [286, 288], "opportun": [286, 291], "neglig": [286, 297], "ma": 286, "influenc": 286, "domin": 286, "inerti": 286, "undefin": 286, "swap": [286, 288], "infinit": [286, 288, 291, 297], "talk": 286, "subsequ": [286, 290], "rigor": 286, "unnecessari": 286, "huge": 286, "degree_of_freedom": 286, "strang": [286, 297], "600": 286, "reach": [286, 290, 297], "frequency_lin": [286, 291, 297], "frf_valu": 286, "axhlin": 286, "hit": [286, 290], "agre": 286, "own": [286, 287], "15000": 286, "resolut": [286, 297], "fine": 286, "medium": 286, "vast": 287, "major": [287, 291], "m_1": [287, 288, 290], "k_1": [287, 288, 290], "m_2": [287, 288, 290], "k_2": [287, 288, 290], "f_1": [287, 288], "_1": [287, 288, 290, 291], "f_2": [287, 288], "_2": [287, 288, 290], "rearrang": 287, "whenev": 287, "algebra": [287, 288, 297], "firstli": 287, "equval": 287, "newton": 287, "law": [287, 291], "m1": [287, 288], "m2": [287, 288], "k1": [287, 288], "k2": [287, 288], "1500": [287, 288, 290, 291], "10000": [287, 288, 290], "sinusodi": 287, "superposit": 287, "c_1": [287, 288, 290], "c_2": [287, 288, 290], "induc": 287, "affect": [287, 290], "m_0": 287, "_0": 287, "c_0": 287, "k_0": 287, "c2": [287, 288], "interestingli": 287, "segment": 287, "vdot": [287, 288], "f_i": 287, "x_i": [287, 288], "cancel": [287, 288, 290], "invert": [287, 288, 290, 291, 297], "far": [287, 290, 297], "1001": [287, 288], "mathemat": [287, 288, 291], "inv": 287, "response_nam": 287, "response_frf": 287, "axes_row": 287, "nphase": [287, 291], "phase_axi": 287, "phase_handl": 287, "mag_axi": 287, "twinx": 287, "magnitude_handl": 287, "input_nam": 287, "unlik": [287, 290, 297], "steep": 287, "vallei": [287, 290, 297], "anti": [287, 290, 291], "consecut": 287, "behavior": 287, "travers": 287, "360": 287, "circular": 287, "half": [287, 290, 291, 297], "learn": [287, 290], "axis_ext": 287, "instruct": 287, "incred": 287, "input_force_loc": 287, "output_response_loc": 287, "2y": [287, 297], "excitation_frequ": [287, 290], "3000": [287, 291, 297], "revisit": 287, "m_3": [287, 288, 290], "k_3": [287, 288, 290], "k_4": [287, 288, 290], "shuffl": 287, "unshuffl": 287, "manag": 288, "closer": 288, "asid": 288, "matter": [288, 291], "subject": 288, "said": 288, "expon": 288, "sympi": 288, "sp": 288, "x1": 288, "x2": 288, "lam": 288, "expr": 288, "sub": [288, 289, 297], "char_expr": 288, "det": 288, "eq": 288, "displaystyl": 288, "k_": 288, "m_": 288, "littl": [288, 297], "4500": 288, "1500000": 288, "evalf": 288, "406": 288, "9296691827464": 288, "1843": 288, "0703308172535": 288, "eval": 288, "2105527460540504": 288, "832680064485663": 288, "593": 288, "07033082": 288, "1686": 288, "14066163": 288, "6861406616345074x": 288, "843": 288, "1186": 288, "1861406616345072x": 288, "declar": 288, "familiar": [288, 291, 297], "underdetermin": 288, "eachoth": 288, "arbitrarili": 288, "answer": 288, "5930703308172536": 288, "8430703308172537": 288, "foremost": 288, "coeffic": 288, "extrapol": 288, "thankfulli": 288, "q_1": 288, "q_2": 288, "That": 288, "exact": [288, 291, 297], "premultipli": 288, "tild": 288, "m_m": 288, "k_m": 288, "array2str": 288, "formatt": 288, "float_kind": 288, "5f": 288, "70346": 288, "00000": 288, "42154": 288, "693": 288, "19038": 288, "4463": 288, "05962": 288, "decoupl": 288, "4460": 288, "remark": 288, "earlier": 288, "wonder": 288, "scaled_eigenvector": 288, "92967": 288, "07033": 288, "omega_1": 288, "omega_2": 288, "76618": 288, "64262": 288, "45440": 288, "54177": 288, "necessarili": [288, 291, 297], "ruler": 288, "clamp": 288, "desk": 288, "home": 288, "coupl": [288, 297], "incredibli": [288, 290], "beta": 288, "smear": 288, "benefit": 288, "touch": 288, "diagonaliz": 288, "tyical": 288, "imposs": [288, 291], "zeta": 288, "proportion": 288, "over2": 288, "grow": 288, "critid": 288, "disapp": 288, "joint": 288, "energi": 288, "dissap": 288, "discret": [288, 291], "suspens": 288, "automobil": 288, "terribl": [288, 291], "reformul": 288, "c_m": 288, "63771245": 288, "15386436": 288, "48728755": 288, "insignific": [288, 290], "la": 288, "system_physical_damp": 288, "system_modal_damp": 288, "initial_state_mod": 288, "block_diag": 288, "responses_phys": 288, "response_phys": 288, "response_mod": 288, "drastic": 288, "signific": [288, 291], "insight": 288, "involv": [288, 290], "pre": [288, 291], "zeta_1": 288, "zeta_2": 288, "compactli": 288, "ddots2": 288, "zeta_n": 288, "omega_n": 288, "uncoupl": [288, 297], "reciproc": 288, "summat": [288, 290], "sum_": [288, 290, 291], "phi_k": 288, "2i": 288, "zeta_k": 288, "omega_k": 288, "h_per_mod": 288, "2j": 288, "nforc": 288, "nfrf": 288, "counterintuit": 288, "preval": 288, "beam_plat": [288, 290, 291], "plate_system": 288, "plate_shap": 288, "270": 288, "0002": 288, "4788": 288, "0777": 288, "1884": 288, "214": 288, "7808": 288, "2875": 288, "311": 288, "9626": 288, "355": 288, "5867": 288, "361": 288, "3963": 288, "364": 288, "7936": 288, "370": 288, "0250": 288, "462": 288, "3216": 288, "539": 288, "8559": 288, "8296": 288, "594": 288, "6486": 288, "634": 288, "0691": 288, "643": 288, "6099": 288, "710": 288, "9058": 288, "746": 288, "4506": 288, "776": 288, "8982": 288, "809": 288, "6974": 288, "853": 288, "9038": 288, "857": 288, "0849": 288, "879": 288, "0950": 288, "00000000e": 288, "68587394e": 288, "74788054e": 288, "02077709e": 288, "85188450e": 288, "14780834e": 288, "32287546e": 288, "11962560e": 288, "55586672e": 288, "61396270e": 288, "64793564e": 288, "70025026e": 288, "62321608e": 288, "39855912e": 288, "93829573e": 288, "94648580e": 288, "34069147e": 288, "43609950e": 288, "10905806e": 288, "46450634e": 288, "76898214e": 288, "09697367e": 288, "53903834e": 288, "57084918e": 288, "79095024e": 288, "87845506e": 288, "09847824e": 288, "26589551e": 288, "38717885e": 288, "19171311e": 288, "29348485e": 288, "16437174e": 288, "74485641e": 288, "44773478e": 288, "90028325e": 288, "69589392e": 288, "67067932e": 288, "14736558e": 288, "97525145e": 288, "14529355e": 288, "18747047e": 288, "21629035e": 288, "16191482e": 288, "48712418e": 288, "68911588e": 288, "12167411e": 288, "07189408e": 288, "29814800e": 288, "82376881e": 288, "23884395e": 288, "25809218e": 288, "09546603e": 288, "85048039e": 288, "35203567e": 288, "70009100e": 288, "29780204e": 288, "19001068e": 288, "19373036e": 288, "01245326e": 288, "55525400e": 288, "88140699e": 288, "tradit": 288, "stiffnesss": 288, "interconnect": 288, "col": 288, "miss": [288, 290, 297], "ration": 288, "imaging": 288, "post": 288, "math": 288, "plate_geometri": 288, "375": 288, "625": 288, "875": 288, "hard": 288, "preferr": 288, "wheel": 288, "pan": 288, "45rx": 288, "45ry": 288, "45rz": 288, "u5": [288, 297], "twist": 288, "clear": [288, 291], "simpler": 288, "framework": 288, "did": 288, "3x": [288, 297], "unfortun": [289, 291], "broadband": [289, 291], "consider": 289, "discov": 290, "viabl": 290, "drawback": 290, "quicker": 290, "realism": 290, "fly": 290, "41z": 290, "excitation_amplitud": 290, "sample_length": 290, "excitation_sign": 290, "steady_state_respons": 290, "steady_state_refer": 290, "response_magnitud": 290, "response_phas": 290, "harmonic_mag_phas": 290, "response_complex": 290, "exp": 290, "reference_magnitud": 290, "reference_phas": 290, "reference_complex": 290, "frf_line": 290, "subplot_kw": 290, "deflection_shap": 290, "0x1b17302cca0": 290, "120": [290, 297], "frf_matrix": 290, "frf_coordin": 290, "outer_product": 290, "frf_sine": 290, "dsplot": 290, "disadvantag": [290, 291], "rand": 290, "excitation_signal_fft": 290, "excitation_signal_freq": 290, "pseudorandom": [290, 297, 298], "tile": 290, "frf_broadband": 290, "narrow": [290, 297], "broad": 290, "adventag": 290, "accommod": 290, "bartlett": 290, "welch": 290, "conjug": 290, "xf": [290, 291], "xx": 290, "sequenti": 290, "_i": [290, 291], "ff": [290, 291], "situat": [290, 297], "mental": 290, "harder": [290, 291, 297], "hammer": [290, 291], "rare": 290, "floor": [290, 291, 297], "juxtapos": 290, "antireson": [290, 291], "optic": 290, "digit": [290, 298], "vibrometeri": 290, "transduc": 290, "underestim": 290, "overestim": [290, 291], "p_": 290, "commonli": 290, "understim": 290, "implic": 290, "restrict": 290, "greatli": 290, "seldom": 290, "somewher": [290, 297], "_3": 290, "partial": 290, "choleski": 290, "cd": 290, "fz": 290, "zf": 290, "xz": 290, "zz": 290, "hermetian": 290, "unmeasur": 290, "gamma": 290, "mcoh": 290, "wingtip": 290, "241": 290, "999": 290, "frf_truth": 290, "wait": [290, 291], "response_sign": 290, "reference_sign": 290, "gaussian": 290, "deviat": 290, "quarter": [290, 291], "noisi": [290, 291], "response_signals_nois": 290, "randn": 290, "reference_noise_level": 290, "reference_signals_nois": 290, "frf_no_nois": 290, "frf_ref_nois": 290, "frf_res_nois": 290, "frf_both_nois": 290, "precis": [290, 291, 297], "outperform": 290, "significatli": 290, "margin": 290, "win": 290, "dreadfulli": 290, "hundr": 290, "thousand": 290, "build": 290, "analog": 290, "difficulti": 290, "inabl": 290, "popular": [290, 291, 297], "favor": 290, "xxx": 290, "tradition": 291, "flavor": 291, "blur": 291, "therefrom": 291, "fourier": [291, 297], "suppos": 291, "signal_fft": 291, "inclin": 291, "hat": 291, "xi": 291, "int_": 291, "infti": 291, "afford": 291, "stand": 291, "meant": 291, "discontinu": [291, 297], "knowledg": 291, "believ": 291, "someth": 291, "assumed_sign": 291, "resampl": 291, "leak": 291, "lesson": 291, "teach": 291, "puls": [291, 297], "isol": 291, "rank": 291, "defici": 291, "unabl": 291, "mind": 291, "reference_dof": [291, 297], "response_random_mimo": 291, "reference_random_mimo": 291, "xlim": 291, "all_sign": 291, "spgui": [291, 297], "unattenu": 291, "degred": 291, "inher": 291, "response_pr_mimo": 291, "reference_pr_mimo": 291, "inexperienc": 291, "claim": 291, "game": 291, "chanc": 291, "response_pr_simo": 291, "reference_pr_simo": 291, "minor": 291, "repeatedli": 291, "suit": 291, "response_chirp_simo": 291, "reference_chirp_simo": 291, "first_fram": 291, "first_frame_fft": 291, "nmagnitud": 291, "lesser": 291, "tailor": 291, "didn": 291, "mutlipl": 291, "idea": [291, 297], "activ": 291, "randomli": 291, "hour": 291, "dai": 291, "minut": 291, "price": 291, "pai": 291, "response_burst_mimo": 291, "reference_burst_mimo": 291, "nor": 291, "effort": [291, 297], "cut": 291, "keenli": 291, "modern": 291, "unwis": 291, "especi": [291, 297], "response_impact": 291, "reference_impact": 291, "1e1": 291, "roll": 291, "decid": 291, "evolv": 291, "year": 291, "100x": 291, "advent": 291, "rippl": 291, "alia": 297, "somewhat": 297, "classic": 297, "academ": 297, "meter": 297, "010": 297, "020": 297, "030": 297, "040": 297, "050": 297, "060": 297, "070": 297, "080": 297, "090": 297, "110": 297, "130": 297, "150": 297, "160": 297, "170": 297, "190": 297, "resum": 297, "mimg": 297, "dimg": 297, "simg": 297, "tight": 297, "timg": 297, "1rx": 297, "1ry": 297, "1rz": 297, "2z": 297, "2rx": 297, "2ry": 297, "2rz": 297, "3y": 297, "3z": 297, "3rx": 297, "3ry": 297, "3rz": 297, "4y": 297, "4z": 297, "4rx": 297, "4ry": 297, "4rz": 297, "5y": 297, "5z": 297, "5rx": 297, "5ry": 297, "5rz": 297, "6x": 297, "6y": 297, "6z": 297, "6rx": 297, "6ry": 297, "6rz": 297, "7x": 297, "7y": 297, "7z": 297, "7rx": 297, "7ry": 297, "7rz": 297, "8y": 297, "8z": 297, "8rx": 297, "8ry": 297, "8rz": 297, "9x": 297, "9y": 297, "9z": 297, "9rx": 297, "9ry": 297, "9rz": 297, "10y": 297, "10z": 297, "10rx": 297, "10ry": 297, "10rz": 297, "11x": 297, "11y": 297, "11z": 297, "11rx": 297, "11ry": 297, "11rz": 297, "12x": 297, "12y": 297, "12z": 297, "12rx": 297, "12ry": 297, "12rz": 297, "13x": 297, "13y": 297, "13z": 297, "13rx": 297, "13ry": 297, "13rz": 297, "14x": 297, "14y": 297, "14z": 297, "14rx": 297, "14ry": 297, "14rz": 297, "15x": 297, "15y": 297, "15z": 297, "15rx": 297, "15ry": 297, "15rz": 297, "16x": 297, "16y": 297, "16z": 297, "16rx": 297, "16ry": 297, "16rz": 297, "17x": 297, "17y": 297, "17z": 297, "17rx": 297, "17ry": 297, "17rz": 297, "18x": 297, "18y": 297, "18z": 297, "18rx": 297, "18ry": 297, "18rz": 297, "19x": 297, "19y": 297, "19z": 297, "19rx": 297, "19ry": 297, "19rz": 297, "20x": 297, "20y": 297, "20z": 297, "20rx": 297, "20ry": 297, "20rz": 297, "21x": 297, "21y": 297, "21z": 297, "21rx": 297, "21ry": 297, "21rz": 297, "0153": 297, "648": 297, "5603": 297, "1297": 297, "1207": 297, "1787": 297, "8068": 297, "3504": 297, "9762": 297, "3575": 297, "6135": 297, "intut": 297, "action": 297, "widget": 297, "toggl": 297, "perspect": 297, "hidden": 297, "unintend": 297, "unintention": 297, "treatment": 297, "ramif": 297, "first_shap": 297, "becam": 297, "indexed_shap": 297, "indexed_frequ": 297, "overwritten": 297, "redefinit": 297, "reassign": 297, "ten": 297, "logical_arrai": 297, "redefin": 297, "link": 297, "naiv": 297, "afterward": 297, "interpret": 297, "unus": 297, "unmodifi": 297, "integer_arrai": 297, "propog": 297, "cost": 297, "why": 297, "impos": 297, "burst_random": 297, "signal_bandwidth": 297, "num_fram": 297, "total_sampl": 297, "rms_level": 297, "num_sign": 297, "transvers": 297, "excitation_dof": 297, "argu": 297, "8000": 297, "80000": 297, "wari": 297, "suffici": 297, "60000": 297, "unsatisfactori": 297, "sdynpy_data": 297, "0xxxxxxxxxxxx": 297, "nonetheless": 297, "valuabl": 297, "003": 297, "forth": 297, "cursor": 297, "plan": 297, "revers": 297, "frfs_system": 297, "frfs_modal_system": 297, "frfs_shape": 297, "frfs_time": 297, "drive_frfs_system": 297, "drive_frfs_modal_system": 297, "drive_frfs_shap": 297, "drive_frfs_tim": 297, "hear": 297, "all_time_data": 297, "lost": 297, "han": 297, "functino": 297, "directori": 297, "frfs_signalprocessinggui": 297, "frfs_spgui": 297, "deflectionshapeplott": 297, "num_respons": 297, "num_refer": 297, "viewer": 297, "reconstruct": 297, "matur": 297, "progress": 297, "promin": 297, "chosen": 297, "whatev": 297, "delet": 297, "recomput": 297, "contaimin": 297, "uncheck": 297, "2340": 297, "pure": 297, "synthet": 297, "2200": 297, "stabilizi": 297, "264": 297, "2265": 297, "2076": 297, "strong": 297, "shapes_polypi": 297, "polish": 297, "simlar": 297, "ofth": 297, "stage": 297, "260": 297, "guess": 297, "priori": 297, "rootlist": 297, "confirm": 297, "tighten": 297, "loosen": 297, "likewis": 297, "dialog": 297, "unintut": 297, "essenc": 297, "lighter": 297, "fifth": 297, "3550": 297, "3600": 297, "swath": 297, "998": 297, "487": 297, "colormap": 297, "pin": 297, "rough": 297, "shapes_smac": 297, "mac_polypi": 297, "mac_smac": 297, "tabul": 297, "polypy_correspond": 297, "smac_correspond": 297, "decim": 297, "024": 297, "064": 297, "1296": 297, "014": 297, "307": 297, "008": 297, "028": 297, "3505": 297, "672": 297, "3576": 297, "198": 297, "564": 297, "overlaid_geometri": 297, "overlaid_shap": 297, "system_2": 297, "node_id_offset": 297, "damped_system": 297, "damped_system_2": 297, "combined_frf": 297, "211z": 297, "coincid": 297, "constrained_geometri": 297, "fewer": 297, "186": 297, "interface_dof": 297, "unconstrain": 297, "201ry": 297, "201rx": 297, "201rz": 297, "constrained_frf_ss": 297, "book": 297, "compare_coordin": 297, "constrained_frf_compar": 297, "pip": 298, "analy": 298, "23rz": 298, "inner": 298, "1858": 298, "2400": 298, "uff_dict": 298, "readuff": 298, "vic": 298, "read_vic3d_mat_fil": 298, "glob": 298, "suitabl": 298, "beamkm_2d": 298, "electro": 298, "routin": 298, "microsoft": 298}, "objects": {"": [[0, 0, 0, "-", "sdynpy"]], "sdynpy": [[1, 0, 0, "-", "core"], [83, 0, 0, "-", "demo"], [88, 0, 0, "-", "doc"], [101, 0, 0, "-", "fem"], [120, 0, 0, "-", "fileio"], [172, 0, 0, "-", "modal"], [193, 0, 0, "-", "signal_processing"]], "sdynpy.core": [[2, 0, 0, "-", "sdynpy_array"], [4, 0, 0, "-", "sdynpy_colors"], [5, 0, 0, "-", "sdynpy_coordinate"], [13, 0, 0, "-", "sdynpy_data"], [39, 0, 0, "-", "sdynpy_geometry"], [63, 0, 0, "-", "sdynpy_matrix"], [66, 0, 0, "-", "sdynpy_shape"], [80, 0, 0, "-", "sdynpy_system"]], "sdynpy.core.sdynpy_array": [[3, 1, 1, "", "SdynpyArray"]], "sdynpy.core.sdynpy_array.SdynpyArray": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "assemble_mat_dict"], [3, 3, 1, "", "fields"], [3, 2, 1, "", "load"], [3, 2, 1, "", "ndenumerate"], [3, 2, 1, "", "save"], [3, 2, 1, "", "savemat"]], "sdynpy.core.sdynpy_coordinate": [[6, 1, 1, "", "CoordinateArray"], [7, 5, 1, "", "coordinate_array"], [8, 5, 1, "", "create_coordinate_string"], [9, 5, 1, "", "from_matlab_cellstr"], [10, 5, 1, "", "from_nodelist"], [11, 5, 1, "", "outer_product"], [12, 5, 1, "", "parse_coordinate_string"]], "sdynpy.core.sdynpy_coordinate.CoordinateArray": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "abs"], [6, 4, 1, "", "data_dtype"], [6, 2, 1, "", "from_matlab_cellstr"], [6, 2, 1, "", "from_nodelist"], [6, 2, 1, "", "local_direction"], [6, 2, 1, "", "sign"], [6, 2, 1, "", "string_array"]], "sdynpy.core.sdynpy_data": [[14, 1, 1, "", "CPSDPlot"], [15, 1, 1, "", "CoherenceArray"], [16, 1, 1, "", "ComplexType"], [17, 1, 1, "", "CorrelationArray"], [18, 1, 1, "", "FunctionTypes"], [19, 1, 1, "", "GUIPlot"], [20, 1, 1, "", "MPLCanvas"], [21, 1, 1, "", "MPLMultiCanvas"], [22, 1, 1, "", "ModeIndicatorFunctionArray"], [23, 1, 1, "", "MultipleCoherenceArray"], [24, 1, 1, "", "NDDataArray"], [25, 1, 1, "", "PowerSpectralDensityArray"], [26, 1, 1, "", "PowerSpectrumArray"], [27, 1, 1, "", "SpecificDataType"], [28, 1, 1, "", "SpectrumArray"], [29, 1, 1, "", "TimeHistoryArray"], [30, 1, 1, "", "TransferFunctionArray"], [31, 1, 1, "", "TransmissibilityArray"], [32, 1, 1, "", "TypeQual"], [33, 5, 1, "", "data_array"], [34, 5, 1, "", "frf_from_time_data"], [35, 5, 1, "", "from_imat_struct"], [36, 5, 1, "", "from_uff"], [37, 5, 1, "", "from_unv"], [38, 5, 1, "", "load"]], "sdynpy.core.sdynpy_data.CPSDPlot": [[14, 1, 1, "", "DataType"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "clear_selection"], [14, 2, 1, "", "coherence_state"], [14, 2, 1, "", "connectUI"], [14, 2, 1, "", "deselect_diagonal"], [14, 2, 1, "", "deselect_lower_triangular"], [14, 2, 1, "", "deselect_upper_triangular"], [14, 2, 1, "", "extend_selection_matrix"], [14, 2, 1, "", "find_function_types"], [14, 2, 1, "", "imaginary_state"], [14, 2, 1, "", "initUI"], [14, 2, 1, "", "init_matrix_plot"], [14, 2, 1, "", "invert_selection"], [14, 2, 1, "", "magnitude_state"], [14, 2, 1, "", "phase_state"], [14, 2, 1, "", "plot"], [14, 2, 1, "", "plot_selected_function"], [14, 2, 1, "", "real_state"], [14, 2, 1, "", "select_diagonal"], [14, 2, 1, "", "select_lower_triangular"], [14, 2, 1, "", "select_plotted"], [14, 2, 1, "", "select_upper_triangular"], [14, 2, 1, "", "selector_click"], [14, 2, 1, "", "selector_unclick"], [14, 2, 1, "", "settext"], [14, 2, 1, "", "state_changed"], [14, 2, 1, "", "update_selection"]], "sdynpy.core.sdynpy_data.CPSDPlot.DataType": [[14, 4, 1, "", "COHERENCE"], [14, 4, 1, "", "IMAGINARY"], [14, 4, 1, "", "MAGNITUDE"], [14, 4, 1, "", "PHASE"], [14, 4, 1, "", "REAL"]], "sdynpy.core.sdynpy_data.CoherenceArray": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.ComplexType": [[16, 4, 1, "", "IMAGINARY"], [16, 4, 1, "", "MAGNITUDE"], [16, 4, 1, "", "MAGPHASE"], [16, 4, 1, "", "PHASE"], [16, 4, 1, "", "REAL"], [16, 4, 1, "", "REALIMAG"], [16, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.CorrelationArray": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.FunctionTypes": [[18, 4, 1, "", "AUTOCORRELATION"], [18, 4, 1, "", "AUTOSPECTRUM"], [18, 4, 1, "", "COHERENCE"], [18, 4, 1, "", "CROSSCORRELATION"], [18, 4, 1, "", "CROSSSPECTRUM"], [18, 4, 1, "", "CUMULATIVE_FREQUENCY_DISTRIBUTION"], [18, 4, 1, "", "EIGENVALUE"], [18, 4, 1, "", "EIGENVECTOR"], [18, 4, 1, "", "ENERGY_SPECTRAL_DENSITY"], [18, 4, 1, "", "FINITE_IMPULSE_RESPONSE_FILTER"], [18, 4, 1, "", "FORCE_PATTERN"], [18, 4, 1, "", "FREQUENCY_RESPONSE_FUNCTION"], [18, 4, 1, "", "GENERAL"], [18, 4, 1, "", "MODE_INDICATOR_FUNCTION"], [18, 4, 1, "", "MULTIPLE_COHERENCE"], [18, 4, 1, "", "ORBIT"], [18, 4, 1, "", "ORDER_FUNCTION"], [18, 4, 1, "", "PARTIAL_COHERENCE"], [18, 4, 1, "", "PARTIAL_POWER"], [18, 4, 1, "", "PEAKS_VALLEY"], [18, 4, 1, "", "PHASE_COMPENSATION"], [18, 4, 1, "", "POWER_SPECTRAL_DENSITY"], [18, 4, 1, "", "PROBABILITY_DENSITY_FUNCTION"], [18, 4, 1, "", "SHOCK_RESPONSE_SPECTRUM"], [18, 4, 1, "", "SPECTRUM"], [18, 4, 1, "", "STRAIN_PER_CYCLE"], [18, 4, 1, "", "STRESS_PER_CYCLE"], [18, 4, 1, "", "TIME_RESPONSE"], [18, 4, 1, "", "TRANSMISIBILITY"], [18, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.GUIPlot": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "connect_callbacks"], [19, 2, 1, "", "deselect_all_complex_types_except"], [19, 2, 1, "", "selection_changed"], [19, 2, 1, "", "set_imaginary"], [19, 2, 1, "", "set_magnitude"], [19, 2, 1, "", "set_magnitude_phase"], [19, 2, 1, "", "set_phase"], [19, 2, 1, "", "set_real"], [19, 2, 1, "", "set_real_imag"], [19, 2, 1, "", "update"], [19, 2, 1, "", "update_abscissa_log"], [19, 2, 1, "", "update_checkbox"], [19, 2, 1, "", "update_data"], [19, 2, 1, "", "update_ordinate_log"]], "sdynpy.core.sdynpy_data.MPLCanvas": [[20, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.MPLMultiCanvas": [[21, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.MultipleCoherenceArray": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.NDDataArray": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "argmax"], [24, 2, 1, "", "argmin"], [24, 3, 1, "", "data_dimension"], [24, 2, 1, "", "downsample"], [24, 2, 1, "", "extract_elements"], [24, 2, 1, "", "extract_elements_by_abscissa"], [24, 2, 1, "", "from_uff"], [24, 2, 1, "", "from_unv"], [24, 3, 1, "", "function_type"], [24, 2, 1, "", "load"], [24, 2, 1, "", "max"], [24, 2, 1, "", "min"], [24, 3, 1, "", "num_coordinates"], [24, 3, 1, "", "num_elements"], [24, 2, 1, "", "plot"], [24, 3, 1, "", "reference_coordinate"], [24, 2, 1, "", "reshape_to_matrix"], [24, 3, 1, "", "response_coordinate"], [24, 2, 1, "", "save"], [24, 2, 1, "", "to_imat_struct"], [24, 2, 1, "", "to_imat_struct_array"], [24, 2, 1, "", "transform_coordinate_system"], [24, 2, 1, "", "validate_common_abscissa"]], "sdynpy.core.sdynpy_data.PowerSpectralDensityArray": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "angle"], [25, 2, 1, "", "coherence"], [25, 2, 1, "", "error_summary"], [25, 2, 1, "", "eye"], [25, 3, 1, "", "function_type"], [25, 2, 1, "", "generate_time_history"], [25, 2, 1, "", "get_asd"], [25, 2, 1, "", "mimo_forward"], [25, 2, 1, "", "mimo_inverse"], [25, 2, 1, "", "plot_asds"], [25, 2, 1, "", "plot_magnitude_coherence_phase"], [25, 2, 1, "", "rms"], [25, 2, 1, "", "set_coherence_phase"], [25, 2, 1, "", "to_rattlesnake_specification"]], "sdynpy.core.sdynpy_data.PowerSpectrumArray": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.SpecificDataType": [[27, 4, 1, "", "ACCELERATION"], [27, 4, 1, "", "DISPLACEMENT"], [27, 4, 1, "", "EXCITATION_FORCE"], [27, 4, 1, "", "FREQUENCY"], [27, 4, 1, "", "GENERAL"], [27, 4, 1, "", "HEAT_FLUX"], [27, 4, 1, "", "MASS"], [27, 4, 1, "", "ORDER"], [27, 4, 1, "", "PRESSURE"], [27, 4, 1, "", "REACTION_FORCE"], [27, 4, 1, "", "RPM"], [27, 4, 1, "", "SOUND_INTENSITY"], [27, 4, 1, "", "SOUND_POWER"], [27, 4, 1, "", "SOUND_PRESSURE"], [27, 4, 1, "", "STRAIN"], [27, 4, 1, "", "STRESS"], [27, 4, 1, "", "TEMPERATURE"], [27, 4, 1, "", "TIME"], [27, 4, 1, "", "UNKNOWN"], [27, 4, 1, "", "VELOCITY"], [27, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.SpectrumArray": [[28, 2, 1, "", "__init__"], [28, 3, 1, "", "function_type"], [28, 2, 1, "", "ifft"], [28, 2, 1, "", "plot"]], "sdynpy.core.sdynpy_data.TimeHistoryArray": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "cpsd"], [29, 2, 1, "", "fft"], [29, 2, 1, "", "from_exodus"], [29, 3, 1, "", "function_type"], [29, 2, 1, "", "rms"]], "sdynpy.core.sdynpy_data.TransferFunctionArray": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "compute_cmif"], [30, 2, 1, "", "compute_mif"], [30, 2, 1, "", "compute_mmif"], [30, 2, 1, "", "compute_nmif"], [30, 2, 1, "", "delay_response"], [30, 2, 1, "", "from_time_data"], [30, 3, 1, "", "function_type"], [30, 2, 1, "", "plot"], [30, 2, 1, "", "substructure_by_constraint_matrix"], [30, 2, 1, "", "substructure_by_coordinate"]], "sdynpy.core.sdynpy_data.TransmissibilityArray": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.TypeQual": [[32, 4, 1, "", "ROTATION"], [32, 4, 1, "", "TRANSLATION"], [32, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_geometry": [[40, 1, 1, "", "CoordinateSystemArray"], [41, 1, 1, "", "DeflectionShapePlotter"], [42, 1, 1, "", "ElementArray"], [43, 1, 1, "", "Geometry"], [44, 1, 1, "", "GeometryPlotter"], [45, 1, 1, "", "NodeArray"], [46, 1, 1, "", "ShapePlotter"], [47, 1, 1, "", "TracelineArray"], [48, 1, 1, "", "TransientPlotter"], [49, 5, 1, "", "coordinate_system_array"], [50, 5, 1, "", "element_array"], [51, 5, 1, "", "from_exodus"], [52, 5, 1, "", "from_imat_struct"], [53, 5, 1, "", "from_uff"], [54, 5, 1, "", "from_unv"], [55, 5, 1, "", "global_coord"], [56, 5, 1, "", "global_deflection"], [57, 1, 1, "", "id_map"], [58, 5, 1, "", "load"], [59, 5, 1, "", "local_coord"], [60, 5, 1, "", "node_array"], [61, 5, 1, "", "split_list"], [62, 5, 1, "", "traceline_array"]], "sdynpy.core.sdynpy_geometry.CoordinateSystemArray": [[40, 2, 1, "", "__init__"], [40, 4, 1, "", "data_dtype"], [40, 2, 1, "", "from_unv"]], "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "modify_abscissa"], [41, 2, 1, "", "save_multiline_animation"]], "sdynpy.core.sdynpy_geometry.ElementArray": [[42, 2, 1, "", "__init__"], [42, 4, 1, "", "data_dtype"], [42, 2, 1, "", "from_unv"], [42, 2, 1, "", "reduce"]], "sdynpy.core.sdynpy_geometry.Geometry": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "add_traceline"], [43, 2, 1, "", "camera_visualization"], [43, 2, 1, "", "copy"], [43, 2, 1, "", "from_exodus"], [43, 2, 1, "", "from_imat_struct"], [43, 2, 1, "", "from_uff"], [43, 2, 1, "", "from_unv"], [43, 2, 1, "", "global_deflection"], [43, 2, 1, "", "global_node_coordinate"], [43, 2, 1, "", "load"], [43, 2, 1, "", "map_ids"], [43, 2, 1, "", "modify_ids"], [43, 2, 1, "", "overlay_geometries"], [43, 2, 1, "", "plot"], [43, 2, 1, "", "plot_coordinate"], [43, 2, 1, "", "plot_deflection_shape"], [43, 2, 1, "", "plot_shape"], [43, 2, 1, "", "plot_transient"], [43, 2, 1, "", "reduce"], [43, 2, 1, "", "rigid_body_shapes"], [43, 2, 1, "", "save"], [43, 2, 1, "", "write_to_unv"]], "sdynpy.core.sdynpy_geometry.GeometryPlotter": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "save_rotation_animation"]], "sdynpy.core.sdynpy_geometry.NodeArray": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "by_grid"], [45, 2, 1, "", "by_position"], [45, 4, 1, "", "data_dtype"], [45, 2, 1, "", "from_unv"], [45, 2, 1, "", "global_coordinate"], [45, 2, 1, "", "project_to_minimum_plane"], [45, 2, 1, "", "reduce"], [45, 2, 1, "", "triangulate"]], "sdynpy.core.sdynpy_geometry.ShapePlotter": [[46, 2, 1, "", "__init__"], [46, 2, 1, "", "add_menu_bar"], [46, 2, 1, "", "add_toolbars"], [46, 2, 1, "", "compute_displacements"], [46, 2, 1, "", "next_shape"], [46, 2, 1, "", "play_animation"], [46, 2, 1, "", "prev_shape"], [46, 2, 1, "", "save_animation"], [46, 2, 1, "", "save_animation_all_shapes"], [46, 2, 1, "", "save_animation_from_action"], [46, 2, 1, "", "select_complex"], [46, 2, 1, "", "select_loop"], [46, 2, 1, "", "select_scaling_0p25"], [46, 2, 1, "", "select_scaling_0p5"], [46, 2, 1, "", "select_scaling_0p8"], [46, 2, 1, "", "select_scaling_1"], [46, 2, 1, "", "select_scaling_1p25"], [46, 2, 1, "", "select_scaling_2p0"], [46, 2, 1, "", "select_scaling_4p0"], [46, 2, 1, "", "select_shape"], [46, 2, 1, "", "select_speed_0p8"], [46, 2, 1, "", "select_speed_1"], [46, 2, 1, "", "select_speed_1p25"], [46, 2, 1, "", "show_comment"], [46, 2, 1, "", "stop_animation"], [46, 2, 1, "", "toggle_undeformed"], [46, 2, 1, "", "update_shape"], [46, 2, 1, "", "update_shape_mode"]], "sdynpy.core.sdynpy_geometry.TracelineArray": [[47, 2, 1, "", "__init__"], [47, 4, 1, "", "data_dtype"], [47, 2, 1, "", "from_unv"], [47, 2, 1, "", "reduce"]], "sdynpy.core.sdynpy_geometry.TransientPlotter": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "add_menu_bar"], [48, 2, 1, "", "add_toolbars"], [48, 2, 1, "", "go_to_first_step"], [48, 2, 1, "", "go_to_last_step"], [48, 2, 1, "", "go_to_next_step"], [48, 2, 1, "", "go_to_previous_step"], [48, 2, 1, "", "modify_abscissa"], [48, 2, 1, "", "play_animation"], [48, 2, 1, "", "play_animation_reverse"], [48, 2, 1, "", "save_animation"], [48, 2, 1, "", "select_scaling_0p25"], [48, 2, 1, "", "select_scaling_0p5"], [48, 2, 1, "", "select_scaling_0p8"], [48, 2, 1, "", "select_scaling_1"], [48, 2, 1, "", "select_scaling_1p25"], [48, 2, 1, "", "select_scaling_2p0"], [48, 2, 1, "", "select_scaling_4p0"], [48, 2, 1, "", "select_speed_0p8"], [48, 2, 1, "", "select_speed_1"], [48, 2, 1, "", "select_speed_1p25"], [48, 2, 1, "", "stop_animation"], [48, 2, 1, "", "update_abscissa"], [48, 2, 1, "", "update_abscissa_reverse"], [48, 2, 1, "", "update_displacement"]], "sdynpy.core.sdynpy_geometry.id_map": [[57, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_matrix": [[64, 1, 1, "", "Matrix"], [65, 5, 1, "", "matrix"]], "sdynpy.core.sdynpy_matrix.Matrix": [[64, 2, 1, "", "__init__"], [64, 2, 1, "", "argsort_coordinate"], [64, 3, 1, "", "coordinate"], [64, 2, 1, "", "data_dtype"], [64, 2, 1, "", "eye"], [64, 3, 1, "", "num_coordinate_columns"], [64, 3, 1, "", "num_coordinate_rows"], [64, 2, 1, "", "plot"], [64, 2, 1, "", "sort_coordinate"]], "sdynpy.core.sdynpy_shape": [[67, 1, 1, "", "ShapeArray"], [68, 5, 1, "", "concatenate_dofs"], [69, 5, 1, "", "from_exodus"], [70, 5, 1, "", "from_imat_struct"], [71, 5, 1, "", "from_unv"], [72, 5, 1, "", "mac"], [73, 5, 1, "", "overlay_shapes"], [74, 5, 1, "", "rigid_body_check"], [75, 5, 1, "", "rigid_body_error"], [76, 5, 1, "", "rigid_body_fix_node_orientation"], [77, 5, 1, "", "shape_alignment"], [78, 5, 1, "", "shape_array"], [79, 5, 1, "", "shape_comparison_table"]], "sdynpy.core.sdynpy_shape.ShapeArray": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "complex_data_dtype"], [67, 2, 1, "", "compute_frf"], [67, 2, 1, "", "concatenate_dofs"], [67, 2, 1, "", "expand"], [67, 2, 1, "", "from_exodus"], [67, 2, 1, "", "from_imat_struct"], [67, 2, 1, "", "from_uff"], [67, 2, 1, "", "from_unv"], [67, 2, 1, "", "is_complex"], [67, 2, 1, "", "mode_table"], [67, 3, 1, "", "modeshape"], [67, 3, 1, "", "ndof"], [67, 2, 1, "", "overlay_shapes"], [67, 2, 1, "", "plot_frequency"], [67, 2, 1, "", "real_data_dtype"], [67, 2, 1, "", "reduce"], [67, 2, 1, "", "repack"], [67, 2, 1, "", "shape_alignment"], [67, 2, 1, "", "system"], [67, 2, 1, "", "time_integrate"], [67, 2, 1, "", "to_real"], [67, 2, 1, "", "transform_coordinate_system"], [67, 2, 1, "", "write_to_unv"]], "sdynpy.core.sdynpy_system": [[81, 1, 1, "", "System"], [82, 5, 1, "", "substructure_by_position"]], "sdynpy.core.sdynpy_system.System": [[81, 3, 1, "", "C"], [81, 3, 1, "", "K"], [81, 3, 1, "", "M"], [81, 2, 1, "", "__init__"], [81, 2, 1, "", "assign_modal_damping"], [81, 2, 1, "", "beam"], [81, 2, 1, "", "concatenate"], [81, 2, 1, "", "constrain"], [81, 3, 1, "", "coordinate"], [81, 2, 1, "", "copy"], [81, 3, 1, "", "damping"], [81, 2, 1, "", "eigensolution"], [81, 2, 1, "", "frequency_response"], [81, 2, 1, "", "from_exodus_superelement"], [81, 2, 1, "", "get_indices_by_coordinate"], [81, 2, 1, "", "load"], [81, 3, 1, "", "mass"], [81, 3, 1, "", "ndof"], [81, 3, 1, "", "ndof_transformed"], [81, 2, 1, "", "reduce"], [81, 2, 1, "", "reduce_craig_bampton"], [81, 2, 1, "", "reduce_dynamic"], [81, 2, 1, "", "reduce_guyan"], [81, 2, 1, "", "save"], [81, 2, 1, "", "set_proportional_damping"], [81, 2, 1, "", "simulate_test"], [81, 2, 1, "", "spy"], [81, 3, 1, "", "stiffness"], [81, 2, 1, "", "substructure_by_coordinate"], [81, 2, 1, "", "substructure_by_position"], [81, 2, 1, "", "substructure_by_shape"], [81, 2, 1, "", "time_integrate"], [81, 2, 1, "", "to_state_space"], [81, 3, 1, "", "transformation"], [81, 2, 1, "", "transformation_matrix_at_coordinates"]], "sdynpy.demo": [[84, 0, 0, "-", "beam_airplane"], [86, 0, 0, "-", "beam_plate"]], "sdynpy.demo.beam_airplane": [[85, 5, 1, "", "create_models"]], "sdynpy.demo.beam_plate": [[87, 5, 1, "", "create_models"]], "sdynpy.doc": [[89, 0, 0, "-", "sdynpy_latex"], [91, 0, 0, "-", "sdynpy_ppt"]], "sdynpy.doc.sdynpy_latex": [[90, 5, 1, "", "create_latex_summary"]], "sdynpy.doc.sdynpy_ppt": [[92, 5, 1, "", "add_geometry_overview_slide"], [93, 5, 1, "", "add_section_header_slide"], [94, 5, 1, "", "add_shape_animation_slides"], [95, 5, 1, "", "add_shape_comparison_animation_slides"], [96, 5, 1, "", "add_shape_comparison_overview_slide"], [97, 5, 1, "", "add_shape_overview_slide"], [98, 5, 1, "", "add_title_slide"], [99, 5, 1, "", "create_summary_pptx"], [100, 5, 1, "", "position_placeholder"]], "sdynpy.fem": [[102, 0, 0, "-", "sdynpy_beam"], [106, 0, 0, "-", "sdynpy_dof"], [109, 0, 0, "-", "sdynpy_exodus"], [118, 0, 0, "-", "sdynpy_shaker"]], "sdynpy.fem.sdynpy_beam": [[103, 5, 1, "", "beamkm"], [104, 5, 1, "", "beamkm_2d"], [105, 5, 1, "", "rect_beam_props"]], "sdynpy.fem.sdynpy_dof": [[107, 5, 1, "", "by_condition_number"], [108, 5, 1, "", "by_effective_independence"]], "sdynpy.fem.sdynpy_exodus": [[110, 1, 1, "", "Exodus"], [111, 6, 1, "", "ExodusError"], [112, 1, 1, "", "ExodusInMemory"], [113, 5, 1, "", "extract_sharp_edges"], [114, 5, 1, "", "face_connectivity"], [115, 5, 1, "", "mesh_triangulation_array"], [116, 5, 1, "", "reduce_exodus_to_surfaces"], [117, 1, 1, "", "subfield"]], "sdynpy.fem.sdynpy_exodus.Exodus": [[110, 2, 1, "", "__init__"], [110, 2, 1, "", "close"], [110, 2, 1, "", "extract_sharp_edges"], [110, 2, 1, "", "get_block_surface"], [110, 2, 1, "", "get_coord"], [110, 2, 1, "", "get_coord_names"], [110, 2, 1, "", "get_coords"], [110, 2, 1, "", "get_displacements"], [110, 2, 1, "", "get_elem_attr"], [110, 2, 1, "", "get_elem_blk_ids"], [110, 2, 1, "", "get_elem_blk_info"], [110, 2, 1, "", "get_elem_connectivity"], [110, 2, 1, "", "get_elem_num_map"], [110, 2, 1, "", "get_elem_type"], [110, 2, 1, "", "get_elem_variable_names"], [110, 2, 1, "", "get_elem_variable_table"], [110, 2, 1, "", "get_elem_variable_value"], [110, 2, 1, "", "get_elem_variable_values"], [110, 2, 1, "", "get_element_property_names"], [110, 2, 1, "", "get_element_property_value"], [110, 2, 1, "", "get_global_variable_names"], [110, 2, 1, "", "get_global_variable_values"], [110, 2, 1, "", "get_info_records"], [110, 2, 1, "", "get_node_num_map"], [110, 2, 1, "", "get_node_set_dist_factors"], [110, 2, 1, "", "get_node_set_ids"], [110, 2, 1, "", "get_node_set_names"], [110, 2, 1, "", "get_node_set_nodes"], [110, 2, 1, "", "get_node_set_num_nodes"], [110, 2, 1, "", "get_node_variable_names"], [110, 2, 1, "", "get_node_variable_value"], [110, 2, 1, "", "get_node_variable_values"], [110, 2, 1, "", "get_qa_records"], [110, 2, 1, "", "get_side_set_dist_factors"], [110, 2, 1, "", "get_side_set_faces"], [110, 2, 1, "", "get_side_set_ids"], [110, 2, 1, "", "get_side_set_names"], [110, 2, 1, "", "get_side_set_node_list"], [110, 2, 1, "", "get_side_set_num_faces"], [110, 2, 1, "", "get_times"], [110, 2, 1, "", "load_into_memory"], [110, 2, 1, "", "num_attr"], [110, 3, 1, "", "num_blks"], [110, 3, 1, "", "num_dimensions"], [110, 3, 1, "", "num_elem_variables"], [110, 3, 1, "", "num_elems"], [110, 2, 1, "", "num_elems_in_blk"], [110, 3, 1, "", "num_global_variables"], [110, 3, 1, "", "num_node_sets"], [110, 3, 1, "", "num_node_variables"], [110, 3, 1, "", "num_nodes"], [110, 2, 1, "", "num_nodes_per_elem"], [110, 3, 1, "", "num_side_sets"], [110, 3, 1, "", "num_times"], [110, 2, 1, "", "put_coord_names"], [110, 2, 1, "", "put_coords"], [110, 2, 1, "", "put_elem_blk_ids"], [110, 2, 1, "", "put_elem_blk_info"], [110, 2, 1, "", "put_elem_num_map"], [110, 2, 1, "", "put_elem_variable_names"], [110, 2, 1, "", "put_element_property_names"], [110, 2, 1, "", "put_element_property_value"], [110, 2, 1, "", "put_global_variable_names"], [110, 2, 1, "", "put_info_records"], [110, 2, 1, "", "put_node_num_map"], [110, 2, 1, "", "put_node_set_ids"], [110, 2, 1, "", "put_node_set_info"], [110, 2, 1, "", "put_node_set_names"], [110, 2, 1, "", "put_node_variable_names"], [110, 2, 1, "", "put_qa_records"], [110, 2, 1, "", "put_side_set_ids"], [110, 2, 1, "", "put_side_set_info"], [110, 2, 1, "", "put_side_set_names"], [110, 2, 1, "", "reduce_to_surfaces"], [110, 2, 1, "", "set_elem_attr"], [110, 2, 1, "", "set_elem_connectivity"], [110, 2, 1, "", "set_elem_variable_value"], [110, 2, 1, "", "set_elem_variable_values"], [110, 2, 1, "", "set_global_variable_values"], [110, 2, 1, "", "set_node_variable_value"], [110, 2, 1, "", "set_node_variable_values"], [110, 2, 1, "", "set_time"], [110, 2, 1, "", "set_times"], [110, 3, 1, "", "title"], [110, 2, 1, "", "triangulate_surface_mesh"]], "sdynpy.fem.sdynpy_exodus.ExodusInMemory": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "from_sdynpy"], [112, 2, 1, "", "get_block_surface"], [112, 2, 1, "", "load_from_exodus"], [112, 2, 1, "", "repack"], [112, 2, 1, "", "triangulate_surface_mesh"], [112, 2, 1, "", "write_to_file"]], "sdynpy.fem.sdynpy_exodus.subfield": [[117, 2, 1, "", "__init__"]], "sdynpy.fem.sdynpy_shaker": [[119, 1, 1, "", "Shaker4DoF"]], "sdynpy.fem.sdynpy_shaker.Shaker4DoF": [[119, 2, 1, "", "MCK"], [119, 2, 1, "", "__init__"], [119, 2, 1, "", "modal_shop_100lbf"], [119, 2, 1, "", "plot_electrical_impedance"], [119, 2, 1, "", "state_space"], [119, 2, 1, "", "transfer_function"]], "sdynpy.fileio": [[121, 0, 0, "-", "sdynpy_rattlesnake"], [125, 0, 0, "-", "sdynpy_uff"], [132, 0, 0, "-", "sdynpy_uff_datasets"], [165, 0, 0, "-", "sdynpy_vic"]], "sdynpy.fileio.sdynpy_rattlesnake": [[122, 5, 1, "", "read_modal_data"], [123, 5, 1, "", "read_rattlesnake_output"], [124, 5, 1, "", "read_system_id_data"]], "sdynpy.fileio.sdynpy_uff": [[126, 6, 1, "", "UFFReadError"], [127, 5, 1, "", "parse_uff_line"], [128, 5, 1, "", "parse_uff_lines"], [129, 5, 1, "", "readuff"], [130, 5, 1, "", "readunv"], [131, 5, 1, "", "write_uff_line"]], "sdynpy.fileio.sdynpy_uff_datasets": [[133, 0, 0, "-", "sdynpy_uff_dataset_151"], [136, 0, 0, "-", "sdynpy_uff_dataset_164"], [139, 0, 0, "-", "sdynpy_uff_dataset_1858"], [143, 0, 0, "-", "sdynpy_uff_dataset_2400"], [146, 0, 0, "-", "sdynpy_uff_dataset_2411"], [149, 0, 0, "-", "sdynpy_uff_dataset_2412"], [152, 0, 0, "-", "sdynpy_uff_dataset_2420"], [155, 0, 0, "-", "sdynpy_uff_dataset_55"], [158, 0, 0, "-", "sdynpy_uff_dataset_58"], [162, 0, 0, "-", "sdynpy_uff_dataset_82"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151": [[134, 1, 1, "", "Sdynpy_UFF_Dataset_151"], [135, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151": [[134, 2, 1, "", "__init__"], [134, 3, 1, "", "dataset_number"], [134, 2, 1, "", "from_uff_data_array"], [134, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164": [[137, 1, 1, "", "Sdynpy_UFF_Dataset_164"], [138, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164": [[137, 2, 1, "", "__init__"], [137, 3, 1, "", "dataset_number"], [137, 2, 1, "", "from_uff_data_array"], [137, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858": [[140, 1, 1, "", "Sdynpy_UFF_Dataset_1858"], [141, 5, 1, "", "is_abscissa_even"], [142, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858": [[140, 2, 1, "", "__init__"], [140, 3, 1, "", "dataset_number"], [140, 2, 1, "", "from_uff_data_array"], [140, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400": [[144, 1, 1, "", "Sdynpy_UFF_Dataset_2400"], [145, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400": [[144, 2, 1, "", "__init__"], [144, 3, 1, "", "dataset_number"], [144, 2, 1, "", "from_uff_data_array"], [144, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411": [[147, 1, 1, "", "Sdynpy_UFF_Dataset_2411"], [148, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411": [[147, 2, 1, "", "__init__"], [147, 3, 1, "", "dataset_number"], [147, 2, 1, "", "from_uff_data_array"], [147, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412": [[150, 1, 1, "", "Sdynpy_UFF_Dataset_2412"], [151, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412": [[150, 2, 1, "", "__init__"], [150, 3, 1, "", "dataset_number"], [150, 2, 1, "", "from_uff_data_array"], [150, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420": [[153, 1, 1, "", "Sdynpy_UFF_Dataset_2420"], [154, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420": [[153, 2, 1, "", "__init__"], [153, 3, 1, "", "dataset_number"], [153, 2, 1, "", "from_uff_data_array"], [153, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55": [[156, 1, 1, "", "Sdynpy_UFF_Dataset_55"], [157, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55": [[156, 2, 1, "", "__init__"], [156, 3, 1, "", "buckling_eigenvalue"], [156, 3, 1, "", "dataset_number"], [156, 3, 1, "", "frequency"], [156, 3, 1, "", "frequency_step_number"], [156, 2, 1, "", "from_uff_data_array"], [156, 3, 1, "", "id_number"], [156, 3, 1, "", "imaginary_eigenvalue"], [156, 3, 1, "", "imaginary_modal_a"], [156, 3, 1, "", "imaginary_modal_b"], [156, 3, 1, "", "load_case_number"], [156, 3, 1, "", "modal_hysteretic_damping"], [156, 3, 1, "", "modal_mass"], [156, 3, 1, "", "modal_viscous_damping"], [156, 3, 1, "", "mode_number"], [156, 3, 1, "", "real_eigenvalue"], [156, 3, 1, "", "real_modal_a"], [156, 3, 1, "", "real_modal_b"], [156, 3, 1, "", "time"], [156, 3, 1, "", "time_step_number"], [156, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58": [[159, 1, 1, "", "Sdynpy_UFF_Dataset_58"], [160, 5, 1, "", "is_abscissa_even"], [161, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58": [[159, 2, 1, "", "__init__"], [159, 3, 1, "", "dataset_number"], [159, 2, 1, "", "from_uff_data_array"], [159, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82": [[163, 1, 1, "", "Sdynpy_UFF_Dataset_82"], [164, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82": [[163, 2, 1, "", "__init__"], [163, 3, 1, "", "dataset_number"], [163, 2, 1, "", "from_uff_data_array"], [163, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_vic": [[166, 5, 1, "", "camera_matrix_from_vic_parameters"], [167, 5, 1, "", "extract_vic_cal_parameters"], [168, 5, 1, "", "get_vic_camera_parameters"], [169, 5, 1, "", "matrix_from_bryant_angles"], [170, 5, 1, "", "read_vic3D_mat_files"], [171, 5, 1, "", "vic_angles_from_matrix"]], "sdynpy.modal": [[173, 0, 0, "-", "sdynpy_ccmif"], [176, 0, 0, "-", "sdynpy_modeshape"], [180, 0, 0, "-", "sdynpy_polypy"], [184, 0, 0, "-", "sdynpy_signal_processing_gui"], [186, 0, 0, "-", "sdynpy_smac"]], "sdynpy.modal.sdynpy_ccmif": [[174, 1, 1, "", "ColoredCMIF"], [175, 1, 1, "", "PropertiesDialog"]], "sdynpy.modal.sdynpy_ccmif.ColoredCMIF": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "clear_plot"], [174, 2, 1, "", "clicked_point"], [174, 2, 1, "", "cluster_modes"], [174, 2, 1, "", "collect_shapes"], [174, 2, 1, "", "compute_and_plot_ccmif"], [174, 2, 1, "", "compute_ccmif"], [174, 2, 1, "", "connect_callbacks"], [174, 2, 1, "", "disable_file"], [174, 2, 1, "", "enable_file"], [174, 3, 1, "", "enabled_selected_modes"], [174, 3, 1, "", "enabled_shape_array"], [174, 2, 1, "", "export_figure"], [174, 2, 1, "", "export_mode_table"], [174, 2, 1, "", "load_file"], [174, 2, 1, "", "load_geometry"], [174, 2, 1, "", "load_progress"], [174, 2, 1, "", "plot_ccmif"], [174, 2, 1, "", "plot_cmifs"], [174, 2, 1, "", "plot_frfs"], [174, 2, 1, "", "plot_shapes"], [174, 2, 1, "", "remove_file"], [174, 2, 1, "", "replace_file"], [174, 2, 1, "", "resynthesize"], [174, 2, 1, "", "save_progress"], [174, 2, 1, "", "save_shapes"], [174, 2, 1, "", "set_mode_properties"], [174, 2, 1, "", "set_properties"], [174, 2, 1, "", "toggle_auto_resynth"], [174, 2, 1, "", "update_line_width"], [174, 2, 1, "", "update_selection"], [174, 2, 1, "", "update_shape_list"]], "sdynpy.modal.sdynpy_ccmif.PropertiesDialog": [[175, 2, 1, "", "__init__"], [175, 2, 1, "", "show"]], "sdynpy.modal.sdynpy_modeshape": [[177, 1, 1, "", "ShapeSelection"], [178, 5, 1, "", "compute_residues"], [179, 5, 1, "", "compute_shapes"]], "sdynpy.modal.sdynpy_modeshape.ShapeSelection": [[177, 4, 1, "", "ALL"], [177, 4, 1, "", "DRIVE_POINT_COEFFICIENT"], [177, 4, 1, "", "PARTICIPATION_FACTOR"], [177, 2, 1, "", "__init__"]], "sdynpy.modal.sdynpy_polypy": [[181, 1, 1, "", "PolyPy"], [182, 1, 1, "", "PolyPy_GUI"], [183, 1, 1, "", "PolyPy_Stability"]], "sdynpy.modal.sdynpy_polypy.PolyPy": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "analyze_pole_convergence"], [181, 3, 1, "", "angular_frequencies"], [181, 2, 1, "", "compute_poles"], [181, 2, 1, "", "compute_residues"], [181, 2, 1, "", "compute_shapes"], [181, 3, 1, "", "frequencies"], [181, 3, 1, "", "frequency_spacing"], [181, 2, 1, "", "plot_stability"], [181, 2, 1, "", "pole_list_from_indices"]], "sdynpy.modal.sdynpy_polypy.PolyPy_GUI": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "compute_shapes"], [182, 2, 1, "", "compute_stabilization"], [182, 2, 1, "", "connect_callbacks"], [182, 2, 1, "", "create_cmif_window"], [182, 2, 1, "", "create_frf_window"], [182, 2, 1, "", "create_mmif_window"], [182, 2, 1, "", "create_nmif_window"], [182, 2, 1, "", "create_qmif_window"], [182, 2, 1, "", "export_fit_data"], [182, 3, 1, "", "frequencies"], [182, 3, 1, "", "frequency_slice"], [182, 2, 1, "", "load_geometry"], [182, 3, 1, "", "max_frequency"], [182, 3, 1, "", "min_frequency"], [182, 2, 1, "", "plot_shapes"], [182, 2, 1, "", "pole_selection_changed"], [182, 2, 1, "", "save_shapes"], [182, 2, 1, "", "set_geometry"], [182, 2, 1, "", "show_line_selectors"], [182, 2, 1, "", "update_data_plot"], [182, 2, 1, "", "update_frequency_from_region"], [182, 2, 1, "", "update_max_frequency"], [182, 2, 1, "", "update_min_frequency"], [182, 2, 1, "", "update_resynthesis"]], "sdynpy.modal.sdynpy_polypy.PolyPy_Stability": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "connect_callbacks"], [183, 2, 1, "", "discard"], [183, 2, 1, "", "mouseClicked"], [183, 2, 1, "", "mouseMoved"], [183, 2, 1, "", "plot_poles"], [183, 2, 1, "", "update_stability_plot_views"], [183, 2, 1, "", "update_stabilization_plot"]], "sdynpy.modal.sdynpy_signal_processing_gui": [[185, 1, 1, "", "SignalProcessingGUI"]], "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI": [[185, 2, 1, "", "__init__"], [185, 2, 1, "", "acceptanceChanged"], [185, 2, 1, "", "analyzePolyPy"], [185, 2, 1, "", "analyzeSMAC"], [185, 2, 1, "", "block_averaging_signals"], [185, 2, 1, "", "block_data_range_signals"], [185, 2, 1, "", "block_sampling_signals"], [185, 2, 1, "", "compute"], [185, 2, 1, "", "compute_triggers"], [185, 2, 1, "", "connect_callbacks"], [185, 2, 1, "", "create_rois"], [185, 2, 1, "", "endTimeChanged"], [185, 2, 1, "", "frameSizeChanged"], [185, 2, 1, "", "frameTimeChanged"], [185, 2, 1, "", "framesChanged"], [185, 2, 1, "", "frequencyLinesChanged"], [185, 2, 1, "", "frequencySpacingChanged"], [185, 2, 1, "", "get_abscissa_index_range"], [185, 2, 1, "", "hysteresisChanged"], [185, 2, 1, "", "initialize_ui"], [185, 2, 1, "", "levelChanged"], [185, 2, 1, "", "loadData"], [185, 2, 1, "", "loadGeometry"], [185, 2, 1, "", "overlapChanged"], [185, 2, 1, "", "overlapSamplesChanged"], [185, 2, 1, "", "plotDeflection"], [185, 2, 1, "", "plotTransient"], [185, 2, 1, "", "pretriggerChanged"], [185, 2, 1, "", "referenceViewChanged"], [185, 2, 1, "", "referencesChanged"], [185, 2, 1, "", "reset_ui"], [185, 2, 1, "", "responseViewChanged"], [185, 2, 1, "", "responsesChanged"], [185, 2, 1, "", "saveAutospectra"], [185, 2, 1, "", "saveCoherence"], [185, 2, 1, "", "saveCrossspectra"], [185, 2, 1, "", "saveFRF"], [185, 2, 1, "", "saveWindowedTimeHistory"], [185, 2, 1, "", "sendToReference"], [185, 2, 1, "", "sendToResponse"], [185, 2, 1, "", "showAutospectra"], [185, 2, 1, "", "showCoherence"], [185, 2, 1, "", "showCrossspectra"], [185, 2, 1, "", "showFRF"], [185, 2, 1, "", "showWindowedTimeHistory"], [185, 2, 1, "", "startTimeChanged"], [185, 2, 1, "", "toggleROI"], [185, 2, 1, "", "typeChanged"], [185, 2, 1, "", "updateHysteresisFromReference"], [185, 2, 1, "", "updateHysteresisFromResponse"], [185, 2, 1, "", "updateTimeFromReference"], [185, 2, 1, "", "updateTimeFromResponse"], [185, 2, 1, "", "updateTriggerFromReference"], [185, 2, 1, "", "updateTriggerFromResponse"], [185, 2, 1, "", "windowChanged"]], "sdynpy.modal.sdynpy_smac": [[187, 1, 1, "", "AddRootDialog"], [188, 1, 1, "", "AutoFitTypes"], [189, 6, 1, "", "ConvergenceException"], [190, 1, 1, "", "SMAC"], [191, 1, 1, "", "SMAC_GUI"], [192, 5, 1, "", "correlation_coefficient"]], "sdynpy.modal.sdynpy_smac.AddRootDialog": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "add_root"], [187, 2, 1, "", "connect_callbacks"], [187, 2, 1, "", "recompute_correlation"], [187, 2, 1, "", "switch_log_plot"], [187, 2, 1, "", "update_plot_range"], [187, 2, 1, "", "update_range_selectors"]], "sdynpy.modal.sdynpy_smac.AutoFitTypes": [[188, 4, 1, "", "ALTERNATE"], [188, 4, 1, "", "PARABOLOID"], [188, 2, 1, "", "__init__"]], "sdynpy.modal.sdynpy_smac.SMAC": [[190, 2, 1, "", "__init__"], [190, 3, 1, "", "angular_frequencies"], [190, 2, 1, "", "autofit_root_alternate"], [190, 2, 1, "", "autofit_root_paraboloid"], [190, 2, 1, "", "autofit_roots"], [190, 2, 1, "", "compute_correlation_matrix"], [190, 2, 1, "", "compute_initial_rootlist"], [190, 2, 1, "", "compute_pseudoinverse"], [190, 2, 1, "", "compute_residues"], [190, 2, 1, "", "compute_shapes"], [190, 2, 1, "", "find_peaks"], [190, 2, 1, "", "fit_damping"], [190, 2, 1, "", "fit_frequency"], [190, 2, 1, "", "fit_paraboloid"], [190, 3, 1, "", "frequencies"], [190, 3, 1, "", "frequency_spacing"], [190, 2, 1, "", "frf_sdof_complex"], [190, 2, 1, "", "frf_sdof_real"], [190, 2, 1, "", "get_num_roots"], [190, 3, 1, "", "reference_coordinates"], [190, 2, 1, "", "save"]], "sdynpy.modal.sdynpy_smac.SMAC_GUI": [[191, 2, 1, "", "__init__"], [191, 2, 1, "", "add_initial_root"], [191, 2, 1, "", "add_root"], [191, 2, 1, "", "autofit_roots"], [191, 2, 1, "", "compute_correlation_matrix"], [191, 2, 1, "", "compute_pseudoinverse"], [191, 2, 1, "", "compute_shapes"], [191, 2, 1, "", "confirm_initial_roots_for_autofit"], [191, 2, 1, "", "connect_callbacks"], [191, 2, 1, "", "delete_initial_roots"], [191, 2, 1, "", "delete_roots"], [191, 2, 1, "", "export_mode_table"], [191, 2, 1, "", "load_geometry"], [191, 2, 1, "", "load_shapes"], [191, 2, 1, "", "paint_markers"], [191, 2, 1, "", "plot_mac"], [191, 2, 1, "", "plot_shapes"], [191, 2, 1, "", "refind_peaks"], [191, 2, 1, "", "save_shapes"], [191, 2, 1, "", "update_coefficient_and_refind"], [191, 2, 1, "", "update_crosshairs"], [191, 2, 1, "", "update_frequency_line_label"], [191, 2, 1, "", "update_initial_rootlist_tab"], [191, 2, 1, "", "update_rootlist_table"], [191, 2, 1, "", "update_selector_and_refind"]], "sdynpy.signal_processing": [[194, 0, 0, "-", "sdynpy_camera"], [207, 0, 0, "-", "sdynpy_complex"], [209, 0, 0, "-", "sdynpy_correlation"], [216, 0, 0, "-", "sdynpy_cpsd"], [231, 0, 0, "-", "sdynpy_frf"], [238, 0, 0, "-", "sdynpy_generator"], [246, 0, 0, "-", "sdynpy_geometry_fitting"], [257, 0, 0, "-", "sdynpy_harmonic"], [259, 0, 0, "-", "sdynpy_integration"], [266, 0, 0, "-", "sdynpy_rotation"]], "sdynpy.signal_processing.sdynpy_camera": [[195, 5, 1, "", "calibration_linear_estimate"], [196, 5, 1, "", "camera_derivative_matrix"], [197, 5, 1, "", "camera_matrix_from_image"], [198, 5, 1, "", "compute_pixel_displacement"], [199, 5, 1, "", "compute_pixel_position"], [200, 5, 1, "", "decomposeP"], [201, 5, 1, "", "distort_points"], [202, 5, 1, "", "homogeneous_coordinates"], [203, 5, 1, "", "optimize_calibration"], [204, 5, 1, "", "point_on_pixel"], [205, 5, 1, "", "reconstruct_scene_from_calibration_parameters"], [206, 5, 1, "", "unhomogeneous_coordinates"]], "sdynpy.signal_processing.sdynpy_complex": [[208, 5, 1, "", "collapse_complex_to_real"]], "sdynpy.signal_processing.sdynpy_correlation": [[210, 5, 1, "", "frac"], [211, 5, 1, "", "mac"], [212, 5, 1, "", "matrix_plot"], [213, 5, 1, "", "msf"], [214, 5, 1, "", "orthog"], [215, 5, 1, "", "trac"]], "sdynpy.signal_processing.sdynpy_cpsd": [[217, 5, 1, "", "cpsd"], [218, 5, 1, "", "cpsd_autospectra"], [219, 5, 1, "", "cpsd_coherence"], [220, 5, 1, "", "cpsd_from_coh_phs"], [221, 5, 1, "", "cpsd_phase"], [222, 5, 1, "", "cpsd_to_time_history"], [223, 5, 1, "", "dB_pow"], [224, 5, 1, "", "match_coherence_phase"], [225, 5, 1, "", "plot_asds"], [226, 5, 1, "", "plot_cpsd_error"], [227, 5, 1, "", "rms"], [228, 5, 1, "", "rms_csd"], [229, 5, 1, "", "shaped_psd"], [230, 5, 1, "", "trace"]], "sdynpy.signal_processing.sdynpy_frf": [[232, 5, 1, "", "delay_signal"], [233, 5, 1, "", "fft2frf"], [234, 5, 1, "", "modes2frf"], [235, 5, 1, "", "plot"], [236, 5, 1, "", "sysmat2frf"], [237, 5, 1, "", "timedata2frf"]], "sdynpy.signal_processing.sdynpy_generator": [[239, 5, 1, "", "burst_random"], [240, 5, 1, "", "chirp"], [241, 5, 1, "", "pseudorandom"], [242, 5, 1, "", "pulse"], [243, 5, 1, "", "ramp_envelope"], [244, 5, 1, "", "random"], [245, 5, 1, "", "sine"]], "sdynpy.signal_processing.sdynpy_geometry_fitting": [[247, 5, 1, "", "cone_error_fn_fixed_angle"], [248, 5, 1, "", "cone_error_fn_free_angle"], [249, 5, 1, "", "cone_fit"], [250, 5, 1, "", "create_cone"], [251, 5, 1, "", "cylinder_fit"], [252, 5, 1, "", "distance_point_line"], [253, 5, 1, "", "distance_point_plane"], [254, 5, 1, "", "fit_cone_fixed_angle"], [255, 5, 1, "", "fit_cylinder"], [256, 5, 1, "", "fit_line_point_cloud"]], "sdynpy.signal_processing.sdynpy_harmonic": [[258, 5, 1, "", "harmonic_mag_phase"]], "sdynpy.signal_processing.sdynpy_integration": [[260, 5, 1, "", "MCK_incomplete_to_StateSpace"], [261, 5, 1, "", "MCK_to_StateSpace"], [262, 5, 1, "", "frequency_domain_differentiation"], [263, 5, 1, "", "integrate_MCK"], [264, 5, 1, "", "integrate_modes"], [265, 5, 1, "", "modal_parameters_to_MCK"]], "sdynpy.signal_processing.sdynpy_rotation": [[267, 5, 1, "", "R"], [268, 5, 1, "", "cross_mat"], [269, 5, 1, "", "cross_mat_vectorized"], [270, 5, 1, "", "lstsq_rigid_transform"], [271, 5, 1, "", "matrix_to_rodrigues"], [272, 5, 1, "", "quaternion_to_rotation_matrix"], [273, 5, 1, "", "rodrigues_to_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"sdynpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 281, 282, 283, 286, 287, 288, 290, 296, 297, 298], "core": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 298], "sdynpy_arrai": [2, 3], "sdynpyarrai": 3, "sdynpy_color": 4, "sdynpy_coordin": [5, 6, 7, 8, 9, 10, 11, 12], "coordinatearrai": 6, "coordinate_arrai": 7, "create_coordinate_str": 8, "from_matlab_cellstr": 9, "from_nodelist": 10, "outer_product": 11, "parse_coordinate_str": 12, "sdynpy_data": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "cpsdplot": 14, "coherencearrai": 15, "complextyp": 16, "correlationarrai": 17, "functiontyp": 18, "guiplot": 19, "mplcanva": 20, "mplmulticanva": 21, "modeindicatorfunctionarrai": 22, "multiplecoherencearrai": 23, "nddataarrai": 24, "powerspectraldensityarrai": 25, "powerspectrumarrai": 26, "specificdatatyp": 27, "spectrumarrai": 28, "timehistoryarrai": 29, "transferfunctionarrai": 30, "transmissibilityarrai": 31, "typequ": 32, "data_arrai": 33, "frf_from_time_data": 34, "from_imat_struct": [35, 52, 70], "from_uff": [36, 53], "from_unv": [37, 54, 71], "load": [38, 58, 275, 279, 281, 298], "sdynpy_geometri": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "coordinatesystemarrai": 40, "deflectionshapeplott": 41, "elementarrai": 42, "geometri": [43, 275, 279, 297], "geometryplott": 44, "nodearrai": 45, "shapeplott": 46, "tracelinearrai": 47, "transientplott": 48, "coordinate_system_arrai": 49, "element_arrai": 50, "from_exodu": [51, 69], "global_coord": 55, "global_deflect": 56, "id_map": 57, "local_coord": 59, "node_arrai": 60, "split_list": 61, "traceline_arrai": 62, "sdynpy_matrix": [63, 64, 65], "matrix": [64, 65, 287, 288], "sdynpy_shap": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "shapearrai": 67, "concatenate_dof": 68, "mac": [72, 211], "overlay_shap": 73, "rigid_body_check": 74, "rigid_body_error": 75, "rigid_body_fix_node_orient": 76, "shape_align": 77, "shape_arrai": 78, "shape_comparison_t": 79, "sdynpy_system": [80, 81, 82], "system": [81, 275, 285, 286, 287, 288, 297], "substructure_by_posit": 82, "demo": [83, 84, 85, 86, 87], "beam_airplan": [84, 85], "create_model": [85, 87], "beam_plat": [86, 87], "doc": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "sdynpy_latex": [89, 90], "create_latex_summari": 90, "sdynpy_ppt": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "add_geometry_overview_slid": 92, "add_section_header_slid": 93, "add_shape_animation_slid": 94, "add_shape_comparison_animation_slid": 95, "add_shape_comparison_overview_slid": 96, "add_shape_overview_slid": 97, "add_title_slid": 98, "create_summary_pptx": 99, "position_placehold": 100, "fem": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "sdynpy_beam": [102, 103, 104, 105], "beamkm": 103, "beamkm_2d": 104, "rect_beam_prop": 105, "sdynpy_dof": [106, 107, 108], "by_condition_numb": 107, "by_effective_independ": 108, "sdynpy_exodu": [109, 110, 111, 112, 113, 114, 115, 116, 117], "exodu": [110, 275, 279], "exoduserror": 111, "exodusinmemori": 112, "extract_sharp_edg": 113, "face_connect": 114, "mesh_triangulation_arrai": 115, "reduce_exodus_to_surfac": 116, "subfield": 117, "sdynpy_shak": [118, 119], "shaker4dof": 119, "fileio": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "sdynpy_rattlesnak": [121, 122, 123, 124], "read_modal_data": 122, "read_rattlesnake_output": 123, "read_system_id_data": 124, "sdynpy_uff": [125, 126, 127, 128, 129, 130, 131], "uffreaderror": 126, "parse_uff_lin": [127, 128], "readuff": 129, "readunv": 130, "write_uff_lin": 131, "sdynpy_uff_dataset": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "sdynpy_uff_dataset_151": [133, 134, 135], "read": [135, 138, 142, 145, 148, 151, 154, 157, 161, 164], "sdynpy_uff_dataset_164": [136, 137, 138], "sdynpy_uff_dataset_1858": [139, 140, 141, 142], "is_abscissa_even": [141, 160], "sdynpy_uff_dataset_2400": [143, 144, 145], "sdynpy_uff_dataset_2411": [146, 147, 148], "sdynpy_uff_dataset_2412": [149, 150, 151], "sdynpy_uff_dataset_2420": [152, 153, 154], "sdynpy_uff_dataset_55": [155, 156, 157], "sdynpy_uff_dataset_58": [158, 159, 160, 161], "sdynpy_uff_dataset_82": [162, 163, 164], "sdynpy_v": [165, 166, 167, 168, 169, 170, 171], "camera_matrix_from_vic_paramet": 166, "extract_vic_cal_paramet": 167, "get_vic_camera_paramet": 168, "matrix_from_bryant_angl": 169, "read_vic3d_mat_fil": 170, "vic_angles_from_matrix": 171, "modal": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 275, 279, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298], "sdynpy_ccmif": [173, 174, 175], "coloredcmif": 174, "propertiesdialog": 175, "sdynpy_modeshap": [176, 177, 178, 179], "shapeselect": 177, "compute_residu": 178, "compute_shap": 179, "sdynpy_polypi": [180, 181, 182, 183], "polypi": [181, 297], "polypy_gui": 182, "polypy_st": 183, "sdynpy_signal_processing_gui": [184, 185], "signalprocessinggui": [185, 290], "sdynpy_smac": [186, 187, 188, 189, 190, 191, 192], "addrootdialog": 187, "autofittyp": 188, "convergenceexcept": 189, "smac": [190, 297], "smac_gui": 191, "correlation_coeffici": 192, "signal_process": [193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "sdynpy_camera": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "calibration_linear_estim": 195, "camera_derivative_matrix": 196, "camera_matrix_from_imag": 197, "compute_pixel_displac": 198, "compute_pixel_posit": 199, "decomposep": 200, "distort_point": 201, "homogeneous_coordin": 202, "optimize_calibr": 203, "point_on_pixel": 204, "reconstruct_scene_from_calibration_paramet": 205, "unhomogeneous_coordin": 206, "sdynpy_complex": [207, 208], "collapse_complex_to_r": 208, "sdynpy_correl": [209, 210, 211, 212, 213, 214, 215], "frac": 210, "matrix_plot": 212, "msf": 213, "orthog": 214, "trac": 215, "sdynpy_cpsd": [216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "cpsd": 217, "cpsd_autospectra": 218, "cpsd_coher": 219, "cpsd_from_coh_ph": 220, "cpsd_phase": 221, "cpsd_to_time_histori": 222, "db_pow": 223, "match_coherence_phas": 224, "plot_asd": 225, "plot_cpsd_error": 226, "rm": 227, "rms_csd": 228, "shaped_psd": 229, "trace": 230, "sdynpy_frf": [231, 232, 233, 234, 235, 236, 237], "delay_sign": 232, "fft2frf": 233, "modes2frf": 234, "plot": [235, 275, 278, 288, 297], "sysmat2frf": 236, "timedata2frf": 237, "sdynpy_gener": [238, 239, 240, 241, 242, 243, 244, 245], "burst_random": 239, "chirp": [240, 291], "pseudorandom": [241, 280, 291], "puls": 242, "ramp_envelop": 243, "random": [244, 277, 280, 291], "sine": 245, "sdynpy_geometry_fit": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "cone_error_fn_fixed_angl": 247, "cone_error_fn_free_angl": 248, "cone_fit": 249, "create_con": 250, "cylinder_fit": 251, "distance_point_lin": 252, "distance_point_plan": 253, "fit_cone_fixed_angl": 254, "fit_cylind": 255, "fit_line_point_cloud": 256, "sdynpy_harmon": [257, 258], "harmonic_mag_phas": 258, "sdynpy_integr": [259, 260, 261, 262, 263, 264, 265], "mck_incomplete_to_statespac": 260, "mck_to_statespac": 261, "frequency_domain_differenti": 262, "integrate_mck": 263, "integrate_mod": 264, "modal_parameters_to_mck": 265, "sdynpy_rot": [266, 267, 268, 269, 270, 271, 272, 273], "r": 267, "cross_mat": 268, "cross_mat_vector": 269, "lstsq_rigid_transform": 270, "matrix_to_rodrigu": 271, "quaternion_to_rotation_matrix": 272, "rodrigues_to_matrix": 273, "bibliographi": 274, "airplan": 275, "test": [275, 277, 279, 281, 290, 295, 298], "content": [275, 276, 277, 279, 280, 281, 282, 283, 284, 289, 297], "import": [275, 277, 278, 279, 297], "default": 275, "option": 275, "finit": [275, 280, 298], "element": [275, 280, 297, 298], "model": [275, 276, 278, 280, 297, 298], "convert": 275, "object": [275, 298], "creat": [275, 278, 279, 297], "from": [275, 276, 288, 290], "an": [275, 277, 297], "file": 275, "explor": 275, "node": [275, 297], "coordin": [275, 297], "tracelin": [275, 297], "visual": 275, "degre": [275, 278, 281, 286, 287, 288, 292], "freedom": [275, 278, 281, 286, 287, 288, 292], "shape": [275, 288, 297], "correct": 275, "neg": 275, "frequenc": [275, 286, 287, 290, 297], "arrai": [275, 297], "view": [275, 297], "versu": [275, 297], "copi": [275, 297], "transform": 275, "optim": [275, 277], "instrument": [275, 277], "oop": 275, "error": 275, "run": [275, 277], "virtual": 275, "experi": 275, "rigid": 275, "bodi": 275, "checkout": 275, "integr": [275, 297], "set": [275, 276, 278, 280, 281, 286], "up": [275, 276, 278, 280, 281, 286], "forc": 275, "function": [275, 286, 287, 290, 297], "gener": [275, 279, 288, 290, 297], "synthet": 275, "data": [275, 278, 279, 290, 293, 294, 297, 298], "time": [275, 290, 297], "identifi": [275, 287], "bad": 275, "fit": [275, 279, 294, 297], "mode": [275, 278, 279, 285, 288, 294, 297], "us": [275, 276, 277, 281, 290, 297], "polymax": 275, "compar": [275, 295, 297], "serep": 275, "expans": 275, "substructur": [276, 278, 281, 297], "craig": [276, 278], "bampton": [276, 278], "superel": 276, "sierra": 276, "sd": 276, "problem": [276, 280, 281, 286, 287, 288, 290, 291], "analyz": [276, 279, 280], "combin": 276, "compon": [276, 278], "summari": [276, 277, 280, 281, 285, 286, 287, 288, 290], "mimo": 277, "vibrat": [277, 286, 287, 291], "simul": [277, 281, 290], "environ": 277, "select": [277, 278, 292], "shaker": 277, "excit": [277, 280, 286, 287, 288, 290, 291, 292, 297], "locat": 277, "perform": [277, 278, 288, 297], "control": 277, "simpl": [277, 286, 297], "pseudoinvers": 277, "tikhonov": 277, "regular": 277, "weight": 277, "respons": [277, 280, 286, 287, 288, 290, 292, 297], "buzz": 277, "method": [277, 281], "reduct": 278, "3d": 278, "collect": 278, "truth": 278, "guyan": 278, "dynam": 278, "synthesi": 278, "comparison": [278, 280, 286], "result": [278, 280, 281], "rattlesnak": 279, "demonstr": 279, "comput": [279, 286, 287, 288, 290, 297], "frf": [279, 288, 290], "paramet": 279, "document": [279, 283, 298], "export": 279, "analysi": [280, 285, 288, 289, 291, 295, 298], "transient": 280, "techniqu": [280, 290], "transmiss": 281, "reduc": 281, "exampl": 282, "welcom": 283, "": 283, "inform": 283, "indic": [283, 297], "tabl": 283, "tutori": [284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295], "01": 285, "what": [285, 288], "i": 285, "so": 285, "how": 285, "do": 285, "we": 285, "find": 285, "02": 286, "basic": 286, "A": [286, 287, 288, 290], "undamp": 286, "spring": [286, 287, 288], "mass": [286, 287, 288], "ad": [286, 287, 297], "damp": [286, 287, 288], "singl": [286, 288, 297], "harmon": [286, 287, 288], "between": 286, "displac": 286, "veloc": 286, "acceler": 286, "work": [286, 287], "homework": [286, 287, 288, 290, 291], "1": [286, 287, 288, 290], "2": [286, 287, 288, 290], "3": [286, 287, 288], "investig": 286, "design": 286, "chang": 286, "4": [286, 288], "03": 287, "multipl": [287, 291], "free": 287, "write": 287, "equat": [287, 297], "motion": [287, 297], "drive": 287, "point": 287, "04": 288, "solv": 288, "eigenvalu": 288, "eigenvector": 288, "more": 288, "about": 288, "seri": 288, "rayleigh": 288, "matric": 288, "construct": 288, "characterist": 288, "polynomi": 288, "same": 288, "oper": 288, "5": 288, "quantiti": 288, "05": [289, 290, 291, 292, 293, 294, 295], "experiment": [289, 291, 298], "part": [290, 291, 292, 293, 294, 295], "sinusoid": 290, "broadband": 290, "fft": [290, 291], "power": 290, "spectra": 290, "The": 290, "h1": 290, "h2": 290, "h3": 290, "hcd": 290, "hv": 290, "coher": 290, "histori": 290, "b": 291, "type": 291, "requir": 291, "consider": 291, "input": 291, "burst": 291, "impuls": 291, "c": 292, "d": 293, "qualiti": 293, "check": 293, "e": 294, "f": 295, "program": 296, "interfac": 296, "showcas": 297, "beam": 297, "assign": 297, "field": 297, "index": 297, "integ": 297, "slice": 297, "logic": 297, "produc": 297, "signal": [297, 298], "code": 297, "base": 297, "graphic": 297, "deflect": 297, "synthes": 297, "correl": 297, "anoth": 297, "appli": 297, "constraint": 297, "usag": 298, "instal": 298, "overview": 298, "process": 298}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"sdynpy": [[0, "module-sdynpy"]], "sdynpy.core": [[1, "module-sdynpy.core"]], "sdynpy.core.sdynpy_array": [[2, "module-sdynpy.core.sdynpy_array"]], "sdynpy.core.sdynpy_array.SdynpyArray": [[3, "sdynpy-core-sdynpy-array-sdynpyarray"]], "sdynpy.core.sdynpy_colors": [[4, "module-sdynpy.core.sdynpy_colors"]], "sdynpy.core.sdynpy_coordinate": [[5, "module-sdynpy.core.sdynpy_coordinate"]], "sdynpy.core.sdynpy_coordinate.CoordinateArray": [[6, "sdynpy-core-sdynpy-coordinate-coordinatearray"]], "sdynpy.core.sdynpy_coordinate.coordinate_array": [[7, "sdynpy-core-sdynpy-coordinate-coordinate-array"]], "sdynpy.core.sdynpy_coordinate.create_coordinate_string": [[8, "sdynpy-core-sdynpy-coordinate-create-coordinate-string"]], "sdynpy.core.sdynpy_coordinate.from_matlab_cellstr": [[9, "sdynpy-core-sdynpy-coordinate-from-matlab-cellstr"]], "sdynpy.core.sdynpy_coordinate.from_nodelist": [[10, "sdynpy-core-sdynpy-coordinate-from-nodelist"]], "sdynpy.core.sdynpy_coordinate.outer_product": [[11, "sdynpy-core-sdynpy-coordinate-outer-product"]], "sdynpy.core.sdynpy_coordinate.parse_coordinate_string": [[12, "sdynpy-core-sdynpy-coordinate-parse-coordinate-string"]], "sdynpy.core.sdynpy_data": [[13, "module-sdynpy.core.sdynpy_data"]], "sdynpy.core.sdynpy_data.CPSDPlot": [[14, "sdynpy-core-sdynpy-data-cpsdplot"]], "sdynpy.core.sdynpy_data.CoherenceArray": [[15, "sdynpy-core-sdynpy-data-coherencearray"]], "sdynpy.core.sdynpy_data.ComplexType": [[16, "sdynpy-core-sdynpy-data-complextype"]], "sdynpy.core.sdynpy_data.CorrelationArray": [[17, "sdynpy-core-sdynpy-data-correlationarray"]], "sdynpy.core.sdynpy_data.FunctionTypes": [[18, "sdynpy-core-sdynpy-data-functiontypes"]], "sdynpy.core.sdynpy_data.GUIPlot": [[19, "sdynpy-core-sdynpy-data-guiplot"]], "sdynpy.core.sdynpy_data.MPLCanvas": [[20, "sdynpy-core-sdynpy-data-mplcanvas"]], "sdynpy.core.sdynpy_data.MPLMultiCanvas": [[21, "sdynpy-core-sdynpy-data-mplmulticanvas"]], "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray": [[22, "sdynpy-core-sdynpy-data-modeindicatorfunctionarray"]], "sdynpy.core.sdynpy_data.MultipleCoherenceArray": [[23, "sdynpy-core-sdynpy-data-multiplecoherencearray"]], "sdynpy.core.sdynpy_data.NDDataArray": [[24, "sdynpy-core-sdynpy-data-nddataarray"]], "sdynpy.core.sdynpy_data.PowerSpectralDensityArray": [[25, "sdynpy-core-sdynpy-data-powerspectraldensityarray"]], "sdynpy.core.sdynpy_data.PowerSpectrumArray": [[26, "sdynpy-core-sdynpy-data-powerspectrumarray"]], "sdynpy.core.sdynpy_data.SpecificDataType": [[27, "sdynpy-core-sdynpy-data-specificdatatype"]], "sdynpy.core.sdynpy_data.SpectrumArray": [[28, "sdynpy-core-sdynpy-data-spectrumarray"]], "sdynpy.core.sdynpy_data.TimeHistoryArray": [[29, "sdynpy-core-sdynpy-data-timehistoryarray"]], "sdynpy.core.sdynpy_data.TransferFunctionArray": [[30, "sdynpy-core-sdynpy-data-transferfunctionarray"]], "sdynpy.core.sdynpy_data.TransmissibilityArray": [[31, "sdynpy-core-sdynpy-data-transmissibilityarray"]], "sdynpy.core.sdynpy_data.TypeQual": [[32, "sdynpy-core-sdynpy-data-typequal"]], "sdynpy.core.sdynpy_data.data_array": [[33, "sdynpy-core-sdynpy-data-data-array"]], "sdynpy.core.sdynpy_data.frf_from_time_data": [[34, "sdynpy-core-sdynpy-data-frf-from-time-data"]], "sdynpy.core.sdynpy_data.from_imat_struct": [[35, "sdynpy-core-sdynpy-data-from-imat-struct"]], "sdynpy.core.sdynpy_data.from_uff": [[36, "sdynpy-core-sdynpy-data-from-uff"]], "sdynpy.core.sdynpy_data.from_unv": [[37, "sdynpy-core-sdynpy-data-from-unv"]], "sdynpy.core.sdynpy_data.load": [[38, "sdynpy-core-sdynpy-data-load"]], "sdynpy.core.sdynpy_geometry": [[39, "module-sdynpy.core.sdynpy_geometry"]], "sdynpy.core.sdynpy_geometry.CoordinateSystemArray": [[40, "sdynpy-core-sdynpy-geometry-coordinatesystemarray"]], "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter": [[41, "sdynpy-core-sdynpy-geometry-deflectionshapeplotter"]], "sdynpy.core.sdynpy_geometry.ElementArray": [[42, "sdynpy-core-sdynpy-geometry-elementarray"]], "sdynpy.core.sdynpy_geometry.Geometry": [[43, "sdynpy-core-sdynpy-geometry-geometry"]], "sdynpy.core.sdynpy_geometry.GeometryPlotter": [[44, "sdynpy-core-sdynpy-geometry-geometryplotter"]], "sdynpy.core.sdynpy_geometry.NodeArray": [[45, "sdynpy-core-sdynpy-geometry-nodearray"]], "sdynpy.core.sdynpy_geometry.ShapePlotter": [[46, "sdynpy-core-sdynpy-geometry-shapeplotter"]], "sdynpy.core.sdynpy_geometry.TracelineArray": [[47, "sdynpy-core-sdynpy-geometry-tracelinearray"]], "sdynpy.core.sdynpy_geometry.TransientPlotter": [[48, "sdynpy-core-sdynpy-geometry-transientplotter"]], "sdynpy.core.sdynpy_geometry.coordinate_system_array": [[49, "sdynpy-core-sdynpy-geometry-coordinate-system-array"]], "sdynpy.core.sdynpy_geometry.element_array": [[50, "sdynpy-core-sdynpy-geometry-element-array"]], "sdynpy.core.sdynpy_geometry.from_exodus": [[51, "sdynpy-core-sdynpy-geometry-from-exodus"]], "sdynpy.core.sdynpy_geometry.from_imat_struct": [[52, "sdynpy-core-sdynpy-geometry-from-imat-struct"]], "sdynpy.core.sdynpy_geometry.from_uff": [[53, "sdynpy-core-sdynpy-geometry-from-uff"]], "sdynpy.core.sdynpy_geometry.from_unv": [[54, "sdynpy-core-sdynpy-geometry-from-unv"]], "sdynpy.core.sdynpy_geometry.global_coord": [[55, "sdynpy-core-sdynpy-geometry-global-coord"]], "sdynpy.core.sdynpy_geometry.global_deflection": [[56, "sdynpy-core-sdynpy-geometry-global-deflection"]], "sdynpy.core.sdynpy_geometry.id_map": [[57, "sdynpy-core-sdynpy-geometry-id-map"]], "sdynpy.core.sdynpy_geometry.load": [[58, "sdynpy-core-sdynpy-geometry-load"]], "sdynpy.core.sdynpy_geometry.local_coord": [[59, "sdynpy-core-sdynpy-geometry-local-coord"]], "sdynpy.core.sdynpy_geometry.node_array": [[60, "sdynpy-core-sdynpy-geometry-node-array"]], "sdynpy.core.sdynpy_geometry.split_list": [[61, "sdynpy-core-sdynpy-geometry-split-list"]], "sdynpy.core.sdynpy_geometry.traceline_array": [[62, "sdynpy-core-sdynpy-geometry-traceline-array"]], "sdynpy.core.sdynpy_matrix": [[63, "module-sdynpy.core.sdynpy_matrix"]], "sdynpy.core.sdynpy_matrix.Matrix": [[64, "sdynpy-core-sdynpy-matrix-matrix"]], "sdynpy.core.sdynpy_matrix.matrix": [[65, "sdynpy-core-sdynpy-matrix-matrix"]], "sdynpy.core.sdynpy_shape": [[66, "module-sdynpy.core.sdynpy_shape"]], "sdynpy.core.sdynpy_shape.ShapeArray": [[67, "sdynpy-core-sdynpy-shape-shapearray"]], "sdynpy.core.sdynpy_shape.concatenate_dofs": [[68, "sdynpy-core-sdynpy-shape-concatenate-dofs"]], "sdynpy.core.sdynpy_shape.from_exodus": [[69, "sdynpy-core-sdynpy-shape-from-exodus"]], "sdynpy.core.sdynpy_shape.from_imat_struct": [[70, "sdynpy-core-sdynpy-shape-from-imat-struct"]], "sdynpy.core.sdynpy_shape.from_unv": [[71, "sdynpy-core-sdynpy-shape-from-unv"]], "sdynpy.core.sdynpy_shape.mac": [[72, "sdynpy-core-sdynpy-shape-mac"]], "sdynpy.core.sdynpy_shape.overlay_shapes": [[73, "sdynpy-core-sdynpy-shape-overlay-shapes"]], "sdynpy.core.sdynpy_shape.rigid_body_check": [[74, "sdynpy-core-sdynpy-shape-rigid-body-check"]], "sdynpy.core.sdynpy_shape.rigid_body_error": [[75, "sdynpy-core-sdynpy-shape-rigid-body-error"]], "sdynpy.core.sdynpy_shape.rigid_body_fix_node_orientation": [[76, "sdynpy-core-sdynpy-shape-rigid-body-fix-node-orientation"]], "sdynpy.core.sdynpy_shape.shape_alignment": [[77, "sdynpy-core-sdynpy-shape-shape-alignment"]], "sdynpy.core.sdynpy_shape.shape_array": [[78, "sdynpy-core-sdynpy-shape-shape-array"]], "sdynpy.core.sdynpy_shape.shape_comparison_table": [[79, "sdynpy-core-sdynpy-shape-shape-comparison-table"]], "sdynpy.core.sdynpy_system": [[80, "module-sdynpy.core.sdynpy_system"]], "sdynpy.core.sdynpy_system.System": [[81, "sdynpy-core-sdynpy-system-system"]], "sdynpy.core.sdynpy_system.substructure_by_position": [[82, "sdynpy-core-sdynpy-system-substructure-by-position"]], "sdynpy.demo": [[83, "module-sdynpy.demo"]], "sdynpy.demo.beam_airplane": [[84, "module-sdynpy.demo.beam_airplane"]], "sdynpy.demo.beam_airplane.create_models": [[85, "sdynpy-demo-beam-airplane-create-models"]], "sdynpy.demo.beam_plate": [[86, "module-sdynpy.demo.beam_plate"]], "sdynpy.demo.beam_plate.create_models": [[87, "sdynpy-demo-beam-plate-create-models"]], "sdynpy.doc": [[88, "module-sdynpy.doc"]], "sdynpy.doc.sdynpy_latex": [[89, "module-sdynpy.doc.sdynpy_latex"]], "sdynpy.doc.sdynpy_latex.create_latex_summary": [[90, "sdynpy-doc-sdynpy-latex-create-latex-summary"]], "sdynpy.doc.sdynpy_ppt": [[91, "module-sdynpy.doc.sdynpy_ppt"]], "sdynpy.doc.sdynpy_ppt.add_geometry_overview_slide": [[92, "sdynpy-doc-sdynpy-ppt-add-geometry-overview-slide"]], "sdynpy.doc.sdynpy_ppt.add_section_header_slide": [[93, "sdynpy-doc-sdynpy-ppt-add-section-header-slide"]], "sdynpy.doc.sdynpy_ppt.add_shape_animation_slides": [[94, "sdynpy-doc-sdynpy-ppt-add-shape-animation-slides"]], "sdynpy.doc.sdynpy_ppt.add_shape_comparison_animation_slides": [[95, "sdynpy-doc-sdynpy-ppt-add-shape-comparison-animation-slides"]], "sdynpy.doc.sdynpy_ppt.add_shape_comparison_overview_slide": [[96, "sdynpy-doc-sdynpy-ppt-add-shape-comparison-overview-slide"]], "sdynpy.doc.sdynpy_ppt.add_shape_overview_slide": [[97, "sdynpy-doc-sdynpy-ppt-add-shape-overview-slide"]], "sdynpy.doc.sdynpy_ppt.add_title_slide": [[98, "sdynpy-doc-sdynpy-ppt-add-title-slide"]], "sdynpy.doc.sdynpy_ppt.create_summary_pptx": [[99, "sdynpy-doc-sdynpy-ppt-create-summary-pptx"]], "sdynpy.doc.sdynpy_ppt.position_placeholder": [[100, "sdynpy-doc-sdynpy-ppt-position-placeholder"]], "sdynpy.fem": [[101, "module-sdynpy.fem"]], "sdynpy.fem.sdynpy_beam": [[102, "module-sdynpy.fem.sdynpy_beam"]], "sdynpy.fem.sdynpy_beam.beamkm": [[103, "sdynpy-fem-sdynpy-beam-beamkm"]], "sdynpy.fem.sdynpy_beam.beamkm_2d": [[104, "sdynpy-fem-sdynpy-beam-beamkm-2d"]], "sdynpy.fem.sdynpy_beam.rect_beam_props": [[105, "sdynpy-fem-sdynpy-beam-rect-beam-props"]], "sdynpy.fem.sdynpy_dof": [[106, "module-sdynpy.fem.sdynpy_dof"]], "sdynpy.fem.sdynpy_dof.by_condition_number": [[107, "sdynpy-fem-sdynpy-dof-by-condition-number"]], "sdynpy.fem.sdynpy_dof.by_effective_independence": [[108, "sdynpy-fem-sdynpy-dof-by-effective-independence"]], "sdynpy.fem.sdynpy_exodus": [[109, "module-sdynpy.fem.sdynpy_exodus"]], "sdynpy.fem.sdynpy_exodus.Exodus": [[110, "sdynpy-fem-sdynpy-exodus-exodus"]], "sdynpy.fem.sdynpy_exodus.ExodusError": [[111, "sdynpy-fem-sdynpy-exodus-exoduserror"]], "sdynpy.fem.sdynpy_exodus.ExodusInMemory": [[112, "sdynpy-fem-sdynpy-exodus-exodusinmemory"]], "sdynpy.fem.sdynpy_exodus.extract_sharp_edges": [[113, "sdynpy-fem-sdynpy-exodus-extract-sharp-edges"]], "sdynpy.fem.sdynpy_exodus.face_connectivity": [[114, "sdynpy-fem-sdynpy-exodus-face-connectivity"]], "sdynpy.fem.sdynpy_exodus.mesh_triangulation_array": [[115, "sdynpy-fem-sdynpy-exodus-mesh-triangulation-array"]], "sdynpy.fem.sdynpy_exodus.reduce_exodus_to_surfaces": [[116, "sdynpy-fem-sdynpy-exodus-reduce-exodus-to-surfaces"]], "sdynpy.fem.sdynpy_exodus.subfield": [[117, "sdynpy-fem-sdynpy-exodus-subfield"]], "sdynpy.fem.sdynpy_shaker": [[118, "module-sdynpy.fem.sdynpy_shaker"]], "sdynpy.fem.sdynpy_shaker.Shaker4DoF": [[119, "sdynpy-fem-sdynpy-shaker-shaker4dof"]], "sdynpy.fileio": [[120, "module-sdynpy.fileio"]], "sdynpy.fileio.sdynpy_rattlesnake": [[121, "module-sdynpy.fileio.sdynpy_rattlesnake"]], "sdynpy.fileio.sdynpy_rattlesnake.read_modal_data": [[122, "sdynpy-fileio-sdynpy-rattlesnake-read-modal-data"]], "sdynpy.fileio.sdynpy_rattlesnake.read_rattlesnake_output": [[123, "sdynpy-fileio-sdynpy-rattlesnake-read-rattlesnake-output"]], "sdynpy.fileio.sdynpy_rattlesnake.read_system_id_data": [[124, "sdynpy-fileio-sdynpy-rattlesnake-read-system-id-data"]], "sdynpy.fileio.sdynpy_uff": [[125, "module-sdynpy.fileio.sdynpy_uff"]], "sdynpy.fileio.sdynpy_uff.UFFReadError": [[126, "sdynpy-fileio-sdynpy-uff-uffreaderror"]], "sdynpy.fileio.sdynpy_uff.parse_uff_line": [[127, "sdynpy-fileio-sdynpy-uff-parse-uff-line"]], "sdynpy.fileio.sdynpy_uff.parse_uff_lines": [[128, "sdynpy-fileio-sdynpy-uff-parse-uff-lines"]], "sdynpy.fileio.sdynpy_uff.readuff": [[129, "sdynpy-fileio-sdynpy-uff-readuff"]], "sdynpy.fileio.sdynpy_uff.readunv": [[130, "sdynpy-fileio-sdynpy-uff-readunv"]], "sdynpy.fileio.sdynpy_uff.write_uff_line": [[131, "sdynpy-fileio-sdynpy-uff-write-uff-line"]], "sdynpy.fileio.sdynpy_uff_datasets": [[132, "module-sdynpy.fileio.sdynpy_uff_datasets"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151": [[133, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151": [[134, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-151-sdynpy-uff-dataset-151"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.read": [[135, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-151-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164": [[136, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164": [[137, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-164-sdynpy-uff-dataset-164"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.read": [[138, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-164-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858": [[139, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858": [[140, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-1858-sdynpy-uff-dataset-1858"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.is_abscissa_even": [[141, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-1858-is-abscissa-even"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.read": [[142, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-1858-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400": [[143, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400": [[144, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2400-sdynpy-uff-dataset-2400"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.read": [[145, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2400-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411": [[146, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411": [[147, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2411-sdynpy-uff-dataset-2411"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.read": [[148, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2411-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412": [[149, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412": [[150, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2412-sdynpy-uff-dataset-2412"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.read": [[151, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2412-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420": [[152, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420": [[153, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2420-sdynpy-uff-dataset-2420"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.read": [[154, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2420-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55": [[155, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55": [[156, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-55-sdynpy-uff-dataset-55"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.read": [[157, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-55-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58": [[158, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58": [[159, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-58-sdynpy-uff-dataset-58"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.is_abscissa_even": [[160, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-58-is-abscissa-even"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.read": [[161, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-58-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82": [[162, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82": [[163, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-82-sdynpy-uff-dataset-82"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.read": [[164, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-82-read"]], "sdynpy.fileio.sdynpy_vic": [[165, "module-sdynpy.fileio.sdynpy_vic"]], "sdynpy.fileio.sdynpy_vic.camera_matrix_from_vic_parameters": [[166, "sdynpy-fileio-sdynpy-vic-camera-matrix-from-vic-parameters"]], "sdynpy.fileio.sdynpy_vic.extract_vic_cal_parameters": [[167, "sdynpy-fileio-sdynpy-vic-extract-vic-cal-parameters"]], "sdynpy.fileio.sdynpy_vic.get_vic_camera_parameters": [[168, "sdynpy-fileio-sdynpy-vic-get-vic-camera-parameters"]], "sdynpy.fileio.sdynpy_vic.matrix_from_bryant_angles": [[169, "sdynpy-fileio-sdynpy-vic-matrix-from-bryant-angles"]], "sdynpy.fileio.sdynpy_vic.read_vic3D_mat_files": [[170, "sdynpy-fileio-sdynpy-vic-read-vic3d-mat-files"]], "sdynpy.fileio.sdynpy_vic.vic_angles_from_matrix": [[171, "sdynpy-fileio-sdynpy-vic-vic-angles-from-matrix"]], "sdynpy.modal": [[172, "module-sdynpy.modal"]], "sdynpy.modal.sdynpy_ccmif": [[173, "module-sdynpy.modal.sdynpy_ccmif"]], "sdynpy.modal.sdynpy_ccmif.ColoredCMIF": [[174, "sdynpy-modal-sdynpy-ccmif-coloredcmif"]], "sdynpy.modal.sdynpy_ccmif.PropertiesDialog": [[175, "sdynpy-modal-sdynpy-ccmif-propertiesdialog"]], "sdynpy.modal.sdynpy_modeshape": [[176, "module-sdynpy.modal.sdynpy_modeshape"]], "sdynpy.modal.sdynpy_modeshape.ShapeSelection": [[177, "sdynpy-modal-sdynpy-modeshape-shapeselection"]], "sdynpy.modal.sdynpy_modeshape.compute_residues": [[178, "sdynpy-modal-sdynpy-modeshape-compute-residues"]], "sdynpy.modal.sdynpy_modeshape.compute_shapes": [[179, "sdynpy-modal-sdynpy-modeshape-compute-shapes"]], "sdynpy.modal.sdynpy_polypy": [[180, "module-sdynpy.modal.sdynpy_polypy"]], "sdynpy.modal.sdynpy_polypy.PolyPy": [[181, "sdynpy-modal-sdynpy-polypy-polypy"]], "sdynpy.modal.sdynpy_polypy.PolyPy_GUI": [[182, "sdynpy-modal-sdynpy-polypy-polypy-gui"]], "sdynpy.modal.sdynpy_polypy.PolyPy_Stability": [[183, "sdynpy-modal-sdynpy-polypy-polypy-stability"]], "sdynpy.modal.sdynpy_signal_processing_gui": [[184, "module-sdynpy.modal.sdynpy_signal_processing_gui"]], "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI": [[185, "sdynpy-modal-sdynpy-signal-processing-gui-signalprocessinggui"]], "sdynpy.modal.sdynpy_smac": [[186, "module-sdynpy.modal.sdynpy_smac"]], "sdynpy.modal.sdynpy_smac.AddRootDialog": [[187, "sdynpy-modal-sdynpy-smac-addrootdialog"]], "sdynpy.modal.sdynpy_smac.AutoFitTypes": [[188, "sdynpy-modal-sdynpy-smac-autofittypes"]], "sdynpy.modal.sdynpy_smac.ConvergenceException": [[189, "sdynpy-modal-sdynpy-smac-convergenceexception"]], "sdynpy.modal.sdynpy_smac.SMAC": [[190, "sdynpy-modal-sdynpy-smac-smac"]], "sdynpy.modal.sdynpy_smac.SMAC_GUI": [[191, "sdynpy-modal-sdynpy-smac-smac-gui"]], "sdynpy.modal.sdynpy_smac.correlation_coefficient": [[192, "sdynpy-modal-sdynpy-smac-correlation-coefficient"]], "sdynpy.signal_processing": [[193, "module-sdynpy.signal_processing"]], "sdynpy.signal_processing.sdynpy_camera": [[194, "module-sdynpy.signal_processing.sdynpy_camera"]], "sdynpy.signal_processing.sdynpy_camera.calibration_linear_estimate": [[195, "sdynpy-signal-processing-sdynpy-camera-calibration-linear-estimate"]], "sdynpy.signal_processing.sdynpy_camera.camera_derivative_matrix": [[196, "sdynpy-signal-processing-sdynpy-camera-camera-derivative-matrix"]], "sdynpy.signal_processing.sdynpy_camera.camera_matrix_from_image": [[197, "sdynpy-signal-processing-sdynpy-camera-camera-matrix-from-image"]], "sdynpy.signal_processing.sdynpy_camera.compute_pixel_displacement": [[198, "sdynpy-signal-processing-sdynpy-camera-compute-pixel-displacement"]], "sdynpy.signal_processing.sdynpy_camera.compute_pixel_position": [[199, "sdynpy-signal-processing-sdynpy-camera-compute-pixel-position"]], "sdynpy.signal_processing.sdynpy_camera.decomposeP": [[200, "sdynpy-signal-processing-sdynpy-camera-decomposep"]], "sdynpy.signal_processing.sdynpy_camera.distort_points": [[201, "sdynpy-signal-processing-sdynpy-camera-distort-points"]], "sdynpy.signal_processing.sdynpy_camera.homogeneous_coordinates": [[202, "sdynpy-signal-processing-sdynpy-camera-homogeneous-coordinates"]], "sdynpy.signal_processing.sdynpy_camera.optimize_calibration": [[203, "sdynpy-signal-processing-sdynpy-camera-optimize-calibration"]], "sdynpy.signal_processing.sdynpy_camera.point_on_pixel": [[204, "sdynpy-signal-processing-sdynpy-camera-point-on-pixel"]], "sdynpy.signal_processing.sdynpy_camera.reconstruct_scene_from_calibration_parameters": [[205, "sdynpy-signal-processing-sdynpy-camera-reconstruct-scene-from-calibration-parameters"]], "sdynpy.signal_processing.sdynpy_camera.unhomogeneous_coordinates": [[206, "sdynpy-signal-processing-sdynpy-camera-unhomogeneous-coordinates"]], "sdynpy.signal_processing.sdynpy_complex": [[207, "module-sdynpy.signal_processing.sdynpy_complex"]], "sdynpy.signal_processing.sdynpy_complex.collapse_complex_to_real": [[208, "sdynpy-signal-processing-sdynpy-complex-collapse-complex-to-real"]], "sdynpy.signal_processing.sdynpy_correlation": [[209, "module-sdynpy.signal_processing.sdynpy_correlation"]], "sdynpy.signal_processing.sdynpy_correlation.frac": [[210, "sdynpy-signal-processing-sdynpy-correlation-frac"]], "sdynpy.signal_processing.sdynpy_correlation.mac": [[211, "sdynpy-signal-processing-sdynpy-correlation-mac"]], "sdynpy.signal_processing.sdynpy_correlation.matrix_plot": [[212, "sdynpy-signal-processing-sdynpy-correlation-matrix-plot"]], "sdynpy.signal_processing.sdynpy_correlation.msf": [[213, "sdynpy-signal-processing-sdynpy-correlation-msf"]], "sdynpy.signal_processing.sdynpy_correlation.orthog": [[214, "sdynpy-signal-processing-sdynpy-correlation-orthog"]], "sdynpy.signal_processing.sdynpy_correlation.trac": [[215, "sdynpy-signal-processing-sdynpy-correlation-trac"]], "sdynpy.signal_processing.sdynpy_cpsd": [[216, "module-sdynpy.signal_processing.sdynpy_cpsd"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd": [[217, "sdynpy-signal-processing-sdynpy-cpsd-cpsd"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd_autospectra": [[218, "sdynpy-signal-processing-sdynpy-cpsd-cpsd-autospectra"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd_coherence": [[219, "sdynpy-signal-processing-sdynpy-cpsd-cpsd-coherence"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd_from_coh_phs": [[220, "sdynpy-signal-processing-sdynpy-cpsd-cpsd-from-coh-phs"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd_phase": [[221, "sdynpy-signal-processing-sdynpy-cpsd-cpsd-phase"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd_to_time_history": [[222, "sdynpy-signal-processing-sdynpy-cpsd-cpsd-to-time-history"]], "sdynpy.signal_processing.sdynpy_cpsd.dB_pow": [[223, "sdynpy-signal-processing-sdynpy-cpsd-db-pow"]], "sdynpy.signal_processing.sdynpy_cpsd.match_coherence_phase": [[224, "sdynpy-signal-processing-sdynpy-cpsd-match-coherence-phase"]], "sdynpy.signal_processing.sdynpy_cpsd.plot_asds": [[225, "sdynpy-signal-processing-sdynpy-cpsd-plot-asds"]], "sdynpy.signal_processing.sdynpy_cpsd.plot_cpsd_error": [[226, "sdynpy-signal-processing-sdynpy-cpsd-plot-cpsd-error"]], "sdynpy.signal_processing.sdynpy_cpsd.rms": [[227, "sdynpy-signal-processing-sdynpy-cpsd-rms"]], "sdynpy.signal_processing.sdynpy_cpsd.rms_csd": [[228, "sdynpy-signal-processing-sdynpy-cpsd-rms-csd"]], "sdynpy.signal_processing.sdynpy_cpsd.shaped_psd": [[229, "sdynpy-signal-processing-sdynpy-cpsd-shaped-psd"]], "sdynpy.signal_processing.sdynpy_cpsd.trace": [[230, "sdynpy-signal-processing-sdynpy-cpsd-trace"]], "sdynpy.signal_processing.sdynpy_frf": [[231, "module-sdynpy.signal_processing.sdynpy_frf"]], "sdynpy.signal_processing.sdynpy_frf.delay_signal": [[232, "sdynpy-signal-processing-sdynpy-frf-delay-signal"]], "sdynpy.signal_processing.sdynpy_frf.fft2frf": [[233, "sdynpy-signal-processing-sdynpy-frf-fft2frf"]], "sdynpy.signal_processing.sdynpy_frf.modes2frf": [[234, "sdynpy-signal-processing-sdynpy-frf-modes2frf"]], "sdynpy.signal_processing.sdynpy_frf.plot": [[235, "sdynpy-signal-processing-sdynpy-frf-plot"]], "sdynpy.signal_processing.sdynpy_frf.sysmat2frf": [[236, "sdynpy-signal-processing-sdynpy-frf-sysmat2frf"]], "sdynpy.signal_processing.sdynpy_frf.timedata2frf": [[237, "sdynpy-signal-processing-sdynpy-frf-timedata2frf"]], "sdynpy.signal_processing.sdynpy_generator": [[238, "module-sdynpy.signal_processing.sdynpy_generator"]], "sdynpy.signal_processing.sdynpy_generator.burst_random": [[239, "sdynpy-signal-processing-sdynpy-generator-burst-random"]], "sdynpy.signal_processing.sdynpy_generator.chirp": [[240, "sdynpy-signal-processing-sdynpy-generator-chirp"]], "sdynpy.signal_processing.sdynpy_generator.pseudorandom": [[241, "sdynpy-signal-processing-sdynpy-generator-pseudorandom"]], "sdynpy.signal_processing.sdynpy_generator.pulse": [[242, "sdynpy-signal-processing-sdynpy-generator-pulse"]], "sdynpy.signal_processing.sdynpy_generator.ramp_envelope": [[243, "sdynpy-signal-processing-sdynpy-generator-ramp-envelope"]], "sdynpy.signal_processing.sdynpy_generator.random": [[244, "sdynpy-signal-processing-sdynpy-generator-random"]], "sdynpy.signal_processing.sdynpy_generator.sine": [[245, "sdynpy-signal-processing-sdynpy-generator-sine"]], "sdynpy.signal_processing.sdynpy_geometry_fitting": [[246, "module-sdynpy.signal_processing.sdynpy_geometry_fitting"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_fixed_angle": [[247, "sdynpy-signal-processing-sdynpy-geometry-fitting-cone-error-fn-fixed-angle"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_free_angle": [[248, "sdynpy-signal-processing-sdynpy-geometry-fitting-cone-error-fn-free-angle"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_fit": [[249, "sdynpy-signal-processing-sdynpy-geometry-fitting-cone-fit"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.create_cone": [[250, "sdynpy-signal-processing-sdynpy-geometry-fitting-create-cone"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.cylinder_fit": [[251, "sdynpy-signal-processing-sdynpy-geometry-fitting-cylinder-fit"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_line": [[252, "sdynpy-signal-processing-sdynpy-geometry-fitting-distance-point-line"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_plane": [[253, "sdynpy-signal-processing-sdynpy-geometry-fitting-distance-point-plane"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cone_fixed_angle": [[254, "sdynpy-signal-processing-sdynpy-geometry-fitting-fit-cone-fixed-angle"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cylinder": [[255, "sdynpy-signal-processing-sdynpy-geometry-fitting-fit-cylinder"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_line_point_cloud": [[256, "sdynpy-signal-processing-sdynpy-geometry-fitting-fit-line-point-cloud"]], "sdynpy.signal_processing.sdynpy_harmonic": [[257, "module-sdynpy.signal_processing.sdynpy_harmonic"]], "sdynpy.signal_processing.sdynpy_harmonic.harmonic_mag_phase": [[258, "sdynpy-signal-processing-sdynpy-harmonic-harmonic-mag-phase"]], "sdynpy.signal_processing.sdynpy_integration": [[259, "module-sdynpy.signal_processing.sdynpy_integration"]], "sdynpy.signal_processing.sdynpy_integration.MCK_incomplete_to_StateSpace": [[260, "sdynpy-signal-processing-sdynpy-integration-mck-incomplete-to-statespace"]], "sdynpy.signal_processing.sdynpy_integration.MCK_to_StateSpace": [[261, "sdynpy-signal-processing-sdynpy-integration-mck-to-statespace"]], "sdynpy.signal_processing.sdynpy_integration.frequency_domain_differentiation": [[262, "sdynpy-signal-processing-sdynpy-integration-frequency-domain-differentiation"]], "sdynpy.signal_processing.sdynpy_integration.integrate_MCK": [[263, "sdynpy-signal-processing-sdynpy-integration-integrate-mck"]], "sdynpy.signal_processing.sdynpy_integration.integrate_modes": [[264, "sdynpy-signal-processing-sdynpy-integration-integrate-modes"]], "sdynpy.signal_processing.sdynpy_integration.modal_parameters_to_MCK": [[265, "sdynpy-signal-processing-sdynpy-integration-modal-parameters-to-mck"]], "sdynpy.signal_processing.sdynpy_rotation": [[266, "module-sdynpy.signal_processing.sdynpy_rotation"]], "sdynpy.signal_processing.sdynpy_rotation.R": [[267, "sdynpy-signal-processing-sdynpy-rotation-r"]], "sdynpy.signal_processing.sdynpy_rotation.cross_mat": [[268, "sdynpy-signal-processing-sdynpy-rotation-cross-mat"]], "sdynpy.signal_processing.sdynpy_rotation.cross_mat_vectorized": [[269, "sdynpy-signal-processing-sdynpy-rotation-cross-mat-vectorized"]], "sdynpy.signal_processing.sdynpy_rotation.lstsq_rigid_transform": [[270, "sdynpy-signal-processing-sdynpy-rotation-lstsq-rigid-transform"]], "sdynpy.signal_processing.sdynpy_rotation.matrix_to_rodrigues": [[271, "sdynpy-signal-processing-sdynpy-rotation-matrix-to-rodrigues"]], "sdynpy.signal_processing.sdynpy_rotation.quaternion_to_rotation_matrix": [[272, "sdynpy-signal-processing-sdynpy-rotation-quaternion-to-rotation-matrix"]], "sdynpy.signal_processing.sdynpy_rotation.rodrigues_to_matrix": [[273, "sdynpy-signal-processing-sdynpy-rotation-rodrigues-to-matrix"]], "Bibliography": [[274, "bibliography"]], "Airplane Modal Test": [[275, "airplane-modal-test"]], "Contents": [[275, "contents"], [276, "contents"], [277, "contents"], [279, "contents"], [280, "contents"], [281, "contents"], [297, "contents"]], "Imports": [[275, "imports"], [277, "imports"], [278, "Imports"], [279, "imports"], [297, "imports"]], "Default Plotting Options": [[275, "default-plotting-options"]], "Load the Finite Element Model": [[275, "load-the-finite-element-model"]], "Convert Finite Element Model to SDynPy Objects": [[275, "convert-finite-element-model-to-sdynpy-objects"]], "Creating a Geometry from an Exodus file": [[275, "creating-a-geometry-from-an-exodus-file"]], "Exploring the Geometry object": [[275, "exploring-the-geometry-object"]], "Nodes": [[275, "nodes"], [297, "nodes"]], "Coordinate Systems": [[275, "coordinate-systems"], [297, "coordinate-systems"]], "Elements": [[275, "elements"], [297, "elements"]], "Tracelines": [[275, "tracelines"], [297, "tracelines"]], "Visualizing Degrees of Freedom on a Geometry": [[275, "visualizing-degrees-of-freedom-on-a-geometry"]], "Coordinates": [[275, "coordinates"], [297, "coordinates"]], "Plotting Coordinates": [[275, "plotting-coordinates"], [297, "plotting-coordinates"]], "Creating Shapes from an Exodus File": [[275, "creating-shapes-from-an-exodus-file"]], "Shapes": [[275, "shapes"], [297, "shapes"]], "Correcting Negative Frequencies and Array Views versus Copies": [[275, "correcting-negative-frequencies-and-array-views-versus-copies"]], "Transforming Shape Coordinate Systems": [[275, "transforming-shape-coordinate-systems"]], "Optimizing Instrumentation for Test": [[275, "optimizing-instrumentation-for-test"], [277, "optimizing-instrumentation-for-test"]], "Creating a Test Geometry": [[275, "creating-a-test-geometry"], [279, "creating-a-test-geometry"]], "OOPS! An Instrumentation Error!": [[275, "oops-an-instrumentation-error"]], "Running a Virtual Experiment: Rigid Body Checkouts": [[275, "running-a-virtual-experiment-rigid-body-checkouts"]], "Creating a System Object to Integrate": [[275, "creating-a-system-object-to-integrate"]], "Exploring the System Object": [[275, "exploring-the-system-object"]], "Setting up the Integration and Forcing Function": [[275, "setting-up-the-integration-and-forcing-function"]], "Running the Integration to Generate Synthetic Test Data": [[275, "running-the-integration-to-generate-synthetic-test-data"]], "Exploring Time Data Objects": [[275, "exploring-time-data-objects"]], "Identifying Bad Geometry with Rigid Body Checkouts in SDynPy": [[275, "identifying-bad-geometry-with-rigid-body-checkouts-in-sdynpy"]], "Running a Virtual Experiment: Modal Testing": [[275, "running-a-virtual-experiment-modal-testing"]], "Fitting Modes using PolyMax": [[275, "fitting-modes-using-polymax"]], "Running PolyMax": [[275, "running-polymax"]], "Comparing Test and Finite Element Modes": [[275, "comparing-test-and-finite-element-modes"]], "SEREP Expansion": [[275, "serep-expansion"]], "Substructuring using Craig-Bampton Superelements from Sierra/SD": [[276, "substructuring-using-craig-bampton-superelements-from-sierra-sd"]], "Setting up the Problem": [[276, "setting-up-the-problem"], [281, "setting-up-the-problem"]], "Analyzing Superelements in SDynPy": [[276, "analyzing-superelements-in-sdynpy"]], "Combining Component Models": [[276, "combining-component-models"]], "Summary": [[276, "summary"], [277, "summary"], [280, "summary"], [281, "summary"], [285, "Summary"], [286, "Summary"], [287, "Summary"], [288, "Summary"], [290, "Summary"]], "MIMO Random Vibration": [[277, "mimo-random-vibration"]], "Simulating an Environment": [[277, "simulating-an-environment"]], "Selecting Shaker Excitation Locations": [[277, "selecting-shaker-excitation-locations"]], "Performing Vibration Control": [[277, "performing-vibration-control"]], "Simple Vibration Control using the Pseudoinverse": [[277, "simple-vibration-control-using-the-pseudoinverse"]], "Tikhonov Regularization": [[277, "tikhonov-regularization"]], "Weighting the Shakers": [[277, "weighting-the-shakers"]], "Response Weighting": [[277, "response-weighting"]], "Buzz Test Method": [[277, "buzz-test-method"]], "Running a Test": [[277, "running-a-test"]], "Model Reduction": [[278, "Model-Reduction"]], "Set up 3D Plots": [[278, "Set-up-3D-Plots"]], "Collect and Set Up Models": [[278, "Collect-and-Set-Up-Models"]], "Creating Truth Data": [[278, "Creating-Truth-Data"]], "Selecting Degrees of Freedom for Reduction and Substructuring": [[278, "Selecting-Degrees-of-Freedom-for-Reduction-and-Substructuring"]], "Perform the model reductions": [[278, "Perform-the-model-reductions"]], "Guyan Reduction": [[278, "Guyan-Reduction"]], "Dynamic Reduction": [[278, "Dynamic-Reduction"]], "Craig-Bampton Reduction": [[278, "Craig-Bampton-Reduction"]], "Component Mode Synthesis": [[278, "Component-Mode-Synthesis"]], "Comparison of Results": [[278, "Comparison-of-Results"]], "Rattlesnake Demonstration": [[279, "rattlesnake-demonstration"]], "Load in Test Data": [[279, "load-in-test-data"]], "Computing FRFs": [[279, "computing-frfs"]], "Fitting Modes to the FRFs": [[279, "fitting-modes-to-the-frfs"]], "Analyzing Modal Parameters": [[279, "analyzing-modal-parameters"]], "Documentation Generation": [[279, "documentation-generation"]], "Exporting to Exodus": [[279, "exporting-to-exodus"]], "Analysis of Transient Finite Element Results": [[280, "analysis-of-transient-finite-element-results"]], "Problem Set Up": [[280, "problem-set-up"]], "Analyzing Model Responses": [[280, "analyzing-model-responses"]], "Pseudorandom Analysis": [[280, "pseudorandom-analysis"]], "Random Analysis": [[280, "random-analysis"]], "Comparison of Excitation Techniques": [[280, "comparison-of-excitation-techniques"]], "Substructuring using the Transmission Simulator Method": [[281, "substructuring-using-the-transmission-simulator-method"], [281, "id1"]], "Loading the results into SDynPy": [[281, "loading-the-results-into-sdynpy"]], "Reducing to Test Degrees of Freedom": [[281, "reducing-to-test-degrees-of-freedom"]], "SDynpy Examples": [[282, "sdynpy-examples"]], "Contents:": [[282, null], [283, null], [284, null], [289, null]], "Welcome to SDynPy\u2019s documentation!": [[283, "welcome-to-sdynpy-s-documentation"]], "Information": [[283, "information"]], "Indices and tables": [[283, "indices-and-tables"]], "Modal Tutorials": [[284, "modal-tutorials"]], "Modal Tutorial 01: What is modal analysis?": [[285, "Modal-Tutorial-01:-What-is-modal-analysis?"]], "So what is Modal Analysis?": [[285, "So-what-is-Modal-Analysis?"]], "How do we find the modes of the system?": [[285, "How-do-we-find-the-modes-of-the-system?"]], "Modal Tutorial 02: Basics of Vibrations": [[286, "Modal-Tutorial-02:-Basics-of-Vibrations"]], "A Simple Undamped Spring-Mass System": [[286, "A-Simple-Undamped-Spring-Mass-System"]], "Adding Damping": [[286, "Adding-Damping"], [287, "Adding-Damping"]], "Response of Single Degree of Freedom Systems to Harmonic Excitation": [[286, "Response-of-Single-Degree-of-Freedom-Systems-to-Harmonic-Excitation"]], "Undamped Response to Harmonic Excitation": [[286, "Undamped-Response-to-Harmonic-Excitation"]], "Damped Response to Harmonic Excitation": [[286, "Damped-Response-to-Harmonic-Excitation"]], "Comparison between Displacement, Velocity, and Acceleration Frequency Response Functions": [[286, "Comparison-between-Displacement,-Velocity,-and-Acceleration-Frequency-Response-Functions"]], "Working with Single Degree of Freedom Systems in SDynPy": [[286, "Working-with-Single-Degree-of-Freedom-Systems-in-SDynPy"]], "Homework Problems": [[286, "Homework-Problems"], [287, "Homework-Problems"], [288, "Homework-Problems"], [290, "Homework-Problems"], [291, "Homework-Problems"]], "1. Set up a System": [[286, "1.-Set-up-a-System"]], "2. Compute the Frequency Response Function": [[286, "2.-Compute-the-Frequency-Response-Function"]], "3. Investigate Design Changes": [[286, "3.-Investigate-Design-Changes"]], "4. Investigate Damping Changes": [[286, "4.-Investigate-Damping-Changes"]], "Modal Tutorial 03: Vibrations of Systems with Multiple Degrees of Freedom": [[287, "Modal-Tutorial-03:-Vibrations-of-Systems-with-Multiple-Degrees-of-Freedom"]], "A Spring Mass System with 2 Degrees of Freedom": [[287, "A-Spring-Mass-System-with-2-Degrees-of-Freedom"], [288, "A-Spring-Mass-System-with-2-Degrees-of-Freedom"]], "Free Response of Multiple Degree of Freedom Systems": [[287, "Free-Response-of-Multiple-Degree-of-Freedom-Systems"]], "Multiple Degree of Freedom Response to Harmonic Excitation": [[287, "Multiple-Degree-of-Freedom-Response-to-Harmonic-Excitation"]], "Working with Multiple Degree of Freedom Systems in SDynPy": [[287, "Working-with-Multiple-Degree-of-Freedom-Systems-in-SDynPy"]], "1. Writing Equations of Motion": [[287, "1.-Writing-Equations-of-Motion"]], "2. Compute the Frequency Response Function Matrix": [[287, "2.-Compute-the-Frequency-Response-Function-Matrix"]], "3. Identifying Drive Points": [[287, "3.-Identifying-Drive-Points"]], "Modal Tutorial 04: Modal Analysis": [[288, "Modal-Tutorial-04:-Modal-Analysis"]], "Solving for the Eigenvalues": [[288, "Solving-for-the-Eigenvalues"]], "Solving for the Eigenvectors": [[288, "Solving-for-the-Eigenvectors"]], "More about Modes": [[288, "More-about-Modes"]], "A series of Single Degree of Freedom Systems": [[288, "A-series-of-Single-Degree-of-Freedom-Systems"]], "What About Damping?": [[288, "What-About-Damping?"]], "Rayleigh Damping": [[288, "Rayleigh-Damping"]], "Modal Damping": [[288, "Modal-Damping"]], "General Damping Matrices": [[288, "General-Damping-Matrices"]], "Response to Harmonic Excitation": [[288, "Response-to-Harmonic-Excitation"]], "Modal Analysis in SDynPy": [[288, "Modal-Analysis-in-SDynPy"]], "1. Construct the generalized eigenvalue problem": [[288, "1.-Construct-the-generalized-eigenvalue-problem"]], "2. Compute and solve the characteristic polynomial": [[288, "2.-Compute-and-solve-the-characteristic-polynomial"]], "3. Compute eigenvector": [[288, "3.-Compute-eigenvector"]], "4. Perform the same operations in SDynPy and plot the mode shapes": [[288, "4.-Perform-the-same-operations-in-SDynPy-and-plot-the-mode-shapes"]], "5. Compute the FRF matrix from modal quantities": [[288, "5.-Compute-the-FRF-matrix-from-modal-quantities"]], "Modal Tutorial 05: Experimental Modal Analysis": [[289, "modal-tutorial-05-experimental-modal-analysis"]], "Modal Tutorial 05 Part A: Computing Frequency Response from Time Data": [[290, "Modal-Tutorial-05-Part-A:-Computing-Frequency-Response-from-Time-Data"]], "Sinusoidal Excitation": [[290, "Sinusoidal-Excitation"]], "Broadband Excitation": [[290, "Broadband-Excitation"]], "Computing FRFs using FFTs": [[290, "Computing-FRFs-using-FFTs"]], "Computing FRFs with Power Spectra": [[290, "Computing-FRFs-with-Power-Spectra"]], "Computing Power Spectra": [[290, "Computing-Power-Spectra"]], "The H1 Technique": [[290, "The-H1-Technique"]], "The H2 Technique": [[290, "The-H2-Technique"]], "The H3 Technique": [[290, "The-H3-Technique"]], "The HCD Technique": [[290, "The-HCD-Technique"]], "The Hv Technique": [[290, "The-Hv-Technique"]], "Coherence": [[290, "Coherence"]], "Computing Frequency Response Functions using SDynPy": [[290, "Computing-Frequency-Response-Functions-using-SDynPy"]], "SignalProcessingGUI": [[290, "SignalProcessingGUI"]], "1. Simulate a Test to Generate Time Histories": [[290, "1.-Simulate-a-Test-to-Generate-Time-Histories"]], "2. Compute Frequency Response Functions": [[290, "2.-Compute-Frequency-Response-Functions"]], "Modal Tutorial 05 Part B: Types of Excitation for Experimental Modal Analysis": [[291, "Modal-Tutorial-05-Part-B:-Types-of-Excitation-for-Experimental-Modal-Analysis"]], "Requirements for the FFT": [[291, "Requirements-for-the-FFT"]], "Considerations for Multiple-Input Excitation": [[291, "Considerations-for-Multiple-Input-Excitation"]], "Types of Modal Excitation": [[291, "Types-of-Modal-Excitation"]], "Random Vibration": [[291, "Random-Vibration"]], "Pseudorandom Excitation": [[291, "Pseudorandom-Excitation"]], "Chirp Excitation": [[291, "Chirp-Excitation"]], "Burst Random Excitation": [[291, "Burst-Random-Excitation"]], "Impulse Excitation": [[291, "Impulse-Excitation"]], "Modal Tutorial 05 Part C: Selecting Excitation and Response Degrees of Freedom": [[292, "Modal-Tutorial-05-Part-C:-Selecting-Excitation-and-Response-Degrees-of-Freedom"]], "Modal Tutorial 05 Part D: Data Quality Checks": [[293, "Modal-Tutorial-05-Part-D:-Data-Quality-Checks"]], "Modal Tutorial 05 Part E: Fitting Modes to Data": [[294, "Modal-Tutorial-05-Part-E:-Fitting-Modes-to-Data"]], "Modal Tutorial 05 Part F: Comparing Test and Analysis": [[295, "Modal-Tutorial-05-Part-F:-Comparing-Test-and-Analysis"]], "SDynPy Programming Interface": [[296, "sdynpy-programming-interface"]], "SDynPy Showcase": [[297, "sdynpy-showcase"]], "Creating a Simple Beam Model": [[297, "creating-a-simple-beam-model"]], "Geometry in SDynPy": [[297, "geometry-in-sdynpy"]], "Plotting Geometry": [[297, "plotting-geometry"]], "Systems in SDynPy": [[297, "systems-in-sdynpy"]], "Computing Modes of the System": [[297, "computing-modes-of-the-system"]], "Plotting Shapes": [[297, "plotting-shapes"]], "Assigning to SDynpy Array Fields and Array Views versus Copies": [[297, "assigning-to-sdynpy-array-fields-and-array-views-versus-copies"]], "Indexing using a Single Integer Index": [[297, "indexing-using-a-single-integer-index"]], "Indexing using a Slice": [[297, "indexing-using-a-slice"]], "Indexing with Logical Arrays": [[297, "indexing-with-logical-arrays"]], "Indexing with Integer Arrays": [[297, "indexing-with-integer-arrays"]], "Computing a Modal System": [[297, "computing-a-modal-system"]], "Data in SDynPy": [[297, "data-in-sdynpy"]], "Integrating Equations of Motion to Produce Time Data": [[297, "integrating-equations-of-motion-to-produce-time-data"]], "Generating an Excitation Signal": [[297, "generating-an-excitation-signal"]], "Performing the Time Integration": [[297, "performing-the-time-integration"]], "Computing Frequency Response Functions": [[297, "computing-frequency-response-functions"]], "Code-based Frequency Response Function Computations": [[297, "code-based-frequency-response-function-computations"]], "Mode Indicator Functions": [[297, "mode-indicator-functions"]], "Graphical Frequency Response Function Computation": [[297, "graphical-frequency-response-function-computation"]], "Plotting Deflection Shapes": [[297, "plotting-deflection-shapes"]], "Fitting Modes to Frequency Response Functions": [[297, "fitting-modes-to-frequency-response-functions"]], "PolyPy": [[297, "polypy"]], "Synthesize Modes and Correlate (SMAC)": [[297, "synthesize-modes-and-correlate-smac"]], "Comparing Modes": [[297, "comparing-modes"]], "Adding Another Beam": [[297, "adding-another-beam"]], "Applying Constraints to the System": [[297, "applying-constraints-to-the-system"]], "Frequency-Based Substructuring": [[297, "frequency-based-substructuring"]], "Usage": [[298, "usage"]], "Installation": [[298, "installation"]], "SDynPy Overview": [[298, "sdynpy-overview"]], "SDynPy Core Data Objects": [[298, "sdynpy-core-data-objects"]], "Loading Test Data": [[298, "loading-test-data"]], "Finite Element Models": [[298, "finite-element-models"]], "Experimental Modal Analysis": [[298, "experimental-modal-analysis"]], "Documentation": [[298, "documentation"]], "Signal Processing": [[298, "signal-processing"]]}, "indexentries": {"module": [[0, "module-sdynpy"], [1, "module-sdynpy.core"], [2, "module-sdynpy.core.sdynpy_array"], [4, "module-sdynpy.core.sdynpy_colors"], [5, "module-sdynpy.core.sdynpy_coordinate"], [13, "module-sdynpy.core.sdynpy_data"], [39, "module-sdynpy.core.sdynpy_geometry"], [63, "module-sdynpy.core.sdynpy_matrix"], [66, "module-sdynpy.core.sdynpy_shape"], [80, "module-sdynpy.core.sdynpy_system"], [83, "module-sdynpy.demo"], [84, "module-sdynpy.demo.beam_airplane"], [86, "module-sdynpy.demo.beam_plate"], [88, "module-sdynpy.doc"], [89, "module-sdynpy.doc.sdynpy_latex"], [91, "module-sdynpy.doc.sdynpy_ppt"], [101, "module-sdynpy.fem"], [102, "module-sdynpy.fem.sdynpy_beam"], [106, "module-sdynpy.fem.sdynpy_dof"], [109, "module-sdynpy.fem.sdynpy_exodus"], [118, "module-sdynpy.fem.sdynpy_shaker"], [120, "module-sdynpy.fileio"], [121, "module-sdynpy.fileio.sdynpy_rattlesnake"], [125, "module-sdynpy.fileio.sdynpy_uff"], [132, "module-sdynpy.fileio.sdynpy_uff_datasets"], [133, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151"], [136, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164"], [139, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858"], [143, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400"], [146, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411"], [149, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412"], [152, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420"], [155, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55"], [158, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58"], [162, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82"], [165, "module-sdynpy.fileio.sdynpy_vic"], [172, "module-sdynpy.modal"], [173, "module-sdynpy.modal.sdynpy_ccmif"], [176, "module-sdynpy.modal.sdynpy_modeshape"], [180, "module-sdynpy.modal.sdynpy_polypy"], [184, "module-sdynpy.modal.sdynpy_signal_processing_gui"], [186, "module-sdynpy.modal.sdynpy_smac"], [193, "module-sdynpy.signal_processing"], [194, "module-sdynpy.signal_processing.sdynpy_camera"], [207, "module-sdynpy.signal_processing.sdynpy_complex"], [209, "module-sdynpy.signal_processing.sdynpy_correlation"], [216, "module-sdynpy.signal_processing.sdynpy_cpsd"], [231, "module-sdynpy.signal_processing.sdynpy_frf"], [238, "module-sdynpy.signal_processing.sdynpy_generator"], [246, "module-sdynpy.signal_processing.sdynpy_geometry_fitting"], [257, "module-sdynpy.signal_processing.sdynpy_harmonic"], [259, "module-sdynpy.signal_processing.sdynpy_integration"], [266, "module-sdynpy.signal_processing.sdynpy_rotation"]], "sdynpy": [[0, "module-sdynpy"]], "sdynpy.core": [[1, "module-sdynpy.core"]], "sdynpy.core.sdynpy_array": [[2, "module-sdynpy.core.sdynpy_array"]], "sdynpyarray (class in sdynpy.core.sdynpy_array)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray"]], "__init__() (sdynpyarray method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.__init__"]], "assemble_mat_dict() (sdynpyarray method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.assemble_mat_dict"]], "fields (sdynpyarray property)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.fields"]], "load() (sdynpyarray class method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.load"]], "ndenumerate() (sdynpyarray method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.ndenumerate"]], "save() (sdynpyarray method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.save"]], "savemat() (sdynpyarray method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.savemat"]], "sdynpy.core.sdynpy_colors": [[4, "module-sdynpy.core.sdynpy_colors"]], "sdynpy.core.sdynpy_coordinate": [[5, "module-sdynpy.core.sdynpy_coordinate"]], "coordinatearray (class in sdynpy.core.sdynpy_coordinate)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray"]], "__init__() (coordinatearray method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.__init__"]], "abs() (coordinatearray method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.abs"]], "data_dtype (coordinatearray attribute)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.data_dtype"]], "from_matlab_cellstr() (coordinatearray class method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.from_matlab_cellstr"]], "from_nodelist() (coordinatearray class method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.from_nodelist"]], "local_direction() (coordinatearray method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.local_direction"]], "sign() (coordinatearray method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.sign"]], "string_array() (coordinatearray method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.string_array"]], "coordinate_array() (in module sdynpy.core.sdynpy_coordinate)": [[7, "sdynpy.core.sdynpy_coordinate.coordinate_array"]], "create_coordinate_string() (in module sdynpy.core.sdynpy_coordinate)": [[8, "sdynpy.core.sdynpy_coordinate.create_coordinate_string"]], "from_matlab_cellstr() (in module sdynpy.core.sdynpy_coordinate)": [[9, "sdynpy.core.sdynpy_coordinate.from_matlab_cellstr"]], "from_nodelist() (in module sdynpy.core.sdynpy_coordinate)": [[10, "sdynpy.core.sdynpy_coordinate.from_nodelist"]], "outer_product() (in module sdynpy.core.sdynpy_coordinate)": [[11, "sdynpy.core.sdynpy_coordinate.outer_product"]], "parse_coordinate_string() (in module sdynpy.core.sdynpy_coordinate)": [[12, "sdynpy.core.sdynpy_coordinate.parse_coordinate_string"]], "sdynpy.core.sdynpy_data": [[13, "module-sdynpy.core.sdynpy_data"]], "coherence (cpsdplot.datatype attribute)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.DataType.COHERENCE"]], "cpsdplot (class in sdynpy.core.sdynpy_data)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot"]], "cpsdplot.datatype (class in sdynpy.core.sdynpy_data)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.DataType"]], "imaginary (cpsdplot.datatype attribute)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.DataType.IMAGINARY"]], "magnitude (cpsdplot.datatype attribute)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.DataType.MAGNITUDE"]], "phase (cpsdplot.datatype attribute)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.DataType.PHASE"]], "real (cpsdplot.datatype attribute)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.DataType.REAL"]], "__init__() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.__init__"]], "clear_selection() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.clear_selection"]], "coherence_state() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.coherence_state"]], "connectui() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.connectUI"]], "deselect_diagonal() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.deselect_diagonal"]], "deselect_lower_triangular() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.deselect_lower_triangular"]], "deselect_upper_triangular() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.deselect_upper_triangular"]], "extend_selection_matrix() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.extend_selection_matrix"]], "find_function_types() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.find_function_types"]], "imaginary_state() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.imaginary_state"]], "initui() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.initUI"]], "init_matrix_plot() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.init_matrix_plot"]], "invert_selection() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.invert_selection"]], "magnitude_state() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.magnitude_state"]], "phase_state() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.phase_state"]], "plot() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.plot"]], "plot_selected_function() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.plot_selected_function"]], "real_state() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.real_state"]], "select_diagonal() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.select_diagonal"]], "select_lower_triangular() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.select_lower_triangular"]], "select_plotted() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.select_plotted"]], "select_upper_triangular() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.select_upper_triangular"]], "selector_click() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.selector_click"]], "selector_unclick() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.selector_unclick"]], "settext() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.settext"]], "state_changed() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.state_changed"]], "update_selection() (cpsdplot method)": [[14, "sdynpy.core.sdynpy_data.CPSDPlot.update_selection"]], "coherencearray (class in sdynpy.core.sdynpy_data)": [[15, "sdynpy.core.sdynpy_data.CoherenceArray"]], "__init__() (coherencearray method)": [[15, "sdynpy.core.sdynpy_data.CoherenceArray.__init__"]], "function_type (coherencearray property)": [[15, "sdynpy.core.sdynpy_data.CoherenceArray.function_type"]], "complextype (class in sdynpy.core.sdynpy_data)": [[16, "sdynpy.core.sdynpy_data.ComplexType"]], "imaginary (complextype attribute)": [[16, "sdynpy.core.sdynpy_data.ComplexType.IMAGINARY"]], "magnitude (complextype attribute)": [[16, "sdynpy.core.sdynpy_data.ComplexType.MAGNITUDE"]], "magphase (complextype attribute)": [[16, "sdynpy.core.sdynpy_data.ComplexType.MAGPHASE"]], "phase (complextype attribute)": [[16, "sdynpy.core.sdynpy_data.ComplexType.PHASE"]], "real (complextype attribute)": [[16, "sdynpy.core.sdynpy_data.ComplexType.REAL"]], "realimag (complextype attribute)": [[16, "sdynpy.core.sdynpy_data.ComplexType.REALIMAG"]], "__init__() (complextype method)": [[16, "sdynpy.core.sdynpy_data.ComplexType.__init__"]], "correlationarray (class in sdynpy.core.sdynpy_data)": [[17, "sdynpy.core.sdynpy_data.CorrelationArray"]], "__init__() (correlationarray method)": [[17, "sdynpy.core.sdynpy_data.CorrelationArray.__init__"]], "function_type (correlationarray property)": [[17, "sdynpy.core.sdynpy_data.CorrelationArray.function_type"]], "autocorrelation (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.AUTOCORRELATION"]], "autospectrum (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.AUTOSPECTRUM"]], "coherence (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.COHERENCE"]], "crosscorrelation (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.CROSSCORRELATION"]], "crossspectrum (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.CROSSSPECTRUM"]], "cumulative_frequency_distribution (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.CUMULATIVE_FREQUENCY_DISTRIBUTION"]], "eigenvalue (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.EIGENVALUE"]], "eigenvector (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.EIGENVECTOR"]], "energy_spectral_density (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.ENERGY_SPECTRAL_DENSITY"]], "finite_impulse_response_filter (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.FINITE_IMPULSE_RESPONSE_FILTER"]], "force_pattern (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.FORCE_PATTERN"]], "frequency_response_function (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.FREQUENCY_RESPONSE_FUNCTION"]], "functiontypes (class in sdynpy.core.sdynpy_data)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes"]], "general (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.GENERAL"]], "mode_indicator_function (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.MODE_INDICATOR_FUNCTION"]], "multiple_coherence (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.MULTIPLE_COHERENCE"]], "orbit (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.ORBIT"]], "order_function (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.ORDER_FUNCTION"]], "partial_coherence (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.PARTIAL_COHERENCE"]], "partial_power (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.PARTIAL_POWER"]], "peaks_valley (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.PEAKS_VALLEY"]], "phase_compensation (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.PHASE_COMPENSATION"]], "power_spectral_density (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.POWER_SPECTRAL_DENSITY"]], "probability_density_function (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.PROBABILITY_DENSITY_FUNCTION"]], "shock_response_spectrum (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.SHOCK_RESPONSE_SPECTRUM"]], "spectrum (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.SPECTRUM"]], "strain_per_cycle (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.STRAIN_PER_CYCLE"]], "stress_per_cycle (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.STRESS_PER_CYCLE"]], "time_response (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.TIME_RESPONSE"]], "transmisibility (functiontypes attribute)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.TRANSMISIBILITY"]], "__init__() (functiontypes method)": [[18, "sdynpy.core.sdynpy_data.FunctionTypes.__init__"]], "guiplot (class in sdynpy.core.sdynpy_data)": [[19, "sdynpy.core.sdynpy_data.GUIPlot"]], "__init__() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.__init__"]], "connect_callbacks() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.connect_callbacks"]], "deselect_all_complex_types_except() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.deselect_all_complex_types_except"]], "selection_changed() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.selection_changed"]], "set_imaginary() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.set_imaginary"]], "set_magnitude() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.set_magnitude"]], "set_magnitude_phase() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.set_magnitude_phase"]], "set_phase() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.set_phase"]], "set_real() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.set_real"]], "set_real_imag() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.set_real_imag"]], "update() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.update"]], "update_abscissa_log() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.update_abscissa_log"]], "update_checkbox() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.update_checkbox"]], "update_data() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.update_data"]], "update_ordinate_log() (guiplot method)": [[19, "sdynpy.core.sdynpy_data.GUIPlot.update_ordinate_log"]], "mplcanvas (class in sdynpy.core.sdynpy_data)": [[20, "sdynpy.core.sdynpy_data.MPLCanvas"]], "__init__() (mplcanvas method)": [[20, "sdynpy.core.sdynpy_data.MPLCanvas.__init__"]], "mplmulticanvas (class in sdynpy.core.sdynpy_data)": [[21, "sdynpy.core.sdynpy_data.MPLMultiCanvas"]], "__init__() (mplmulticanvas method)": [[21, "sdynpy.core.sdynpy_data.MPLMultiCanvas.__init__"]], "modeindicatorfunctionarray (class in sdynpy.core.sdynpy_data)": [[22, "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray"]], "__init__() (modeindicatorfunctionarray method)": [[22, "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray.__init__"]], "function_type (modeindicatorfunctionarray property)": [[22, "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray.function_type"]], "multiplecoherencearray (class in sdynpy.core.sdynpy_data)": [[23, "sdynpy.core.sdynpy_data.MultipleCoherenceArray"]], "__init__() (multiplecoherencearray method)": [[23, "sdynpy.core.sdynpy_data.MultipleCoherenceArray.__init__"]], "function_type (multiplecoherencearray property)": [[23, "sdynpy.core.sdynpy_data.MultipleCoherenceArray.function_type"]], "nddataarray (class in sdynpy.core.sdynpy_data)": [[24, "sdynpy.core.sdynpy_data.NDDataArray"]], "__init__() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.__init__"]], "argmax() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.argmax"]], "argmin() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.argmin"]], "data_dimension (nddataarray property)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.data_dimension"]], "downsample() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.downsample"]], "extract_elements() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.extract_elements"]], "extract_elements_by_abscissa() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.extract_elements_by_abscissa"]], "from_uff() (nddataarray static method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.from_uff"]], "from_unv() (nddataarray static method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.from_unv"]], "function_type (nddataarray property)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.function_type"]], "load() (nddataarray class method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.load"]], "max() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.max"]], "min() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.min"]], "num_coordinates (nddataarray property)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.num_coordinates"]], "num_elements (nddataarray property)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.num_elements"]], "plot() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.plot"]], "reference_coordinate (nddataarray property)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.reference_coordinate"]], "reshape_to_matrix() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.reshape_to_matrix"]], "response_coordinate (nddataarray property)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.response_coordinate"]], "save() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.save"]], "to_imat_struct() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.to_imat_struct"]], "to_imat_struct_array() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.to_imat_struct_array"]], "transform_coordinate_system() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.transform_coordinate_system"]], "validate_common_abscissa() (nddataarray method)": [[24, "sdynpy.core.sdynpy_data.NDDataArray.validate_common_abscissa"]], "powerspectraldensityarray (class in sdynpy.core.sdynpy_data)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray"]], "__init__() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.__init__"]], "angle() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.angle"]], "coherence() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.coherence"]], "error_summary() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.error_summary"]], "eye() (powerspectraldensityarray class method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.eye"]], "function_type (powerspectraldensityarray property)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.function_type"]], "generate_time_history() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.generate_time_history"]], "get_asd() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.get_asd"]], "mimo_forward() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.mimo_forward"]], "mimo_inverse() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.mimo_inverse"]], "plot_asds() (powerspectraldensityarray static method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.plot_asds"]], "plot_magnitude_coherence_phase() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.plot_magnitude_coherence_phase"]], "rms() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.rms"]], "set_coherence_phase() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.set_coherence_phase"]], "to_rattlesnake_specification() (powerspectraldensityarray method)": [[25, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.to_rattlesnake_specification"]], "powerspectrumarray (class in sdynpy.core.sdynpy_data)": [[26, "sdynpy.core.sdynpy_data.PowerSpectrumArray"]], "__init__() (powerspectrumarray method)": [[26, "sdynpy.core.sdynpy_data.PowerSpectrumArray.__init__"]], "function_type (powerspectrumarray property)": [[26, "sdynpy.core.sdynpy_data.PowerSpectrumArray.function_type"]], "acceleration (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.ACCELERATION"]], "displacement (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.DISPLACEMENT"]], "excitation_force (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.EXCITATION_FORCE"]], "frequency (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.FREQUENCY"]], "general (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.GENERAL"]], "heat_flux (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.HEAT_FLUX"]], "mass (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.MASS"]], "order (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.ORDER"]], "pressure (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.PRESSURE"]], "reaction_force (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.REACTION_FORCE"]], "rpm (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.RPM"]], "sound_intensity (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.SOUND_INTENSITY"]], "sound_power (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.SOUND_POWER"]], "sound_pressure (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.SOUND_PRESSURE"]], "strain (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.STRAIN"]], "stress (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.STRESS"]], "specificdatatype (class in sdynpy.core.sdynpy_data)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType"]], "temperature (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.TEMPERATURE"]], "time (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.TIME"]], "unknown (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.UNKNOWN"]], "velocity (specificdatatype attribute)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.VELOCITY"]], "__init__() (specificdatatype method)": [[27, "sdynpy.core.sdynpy_data.SpecificDataType.__init__"]], "spectrumarray (class in sdynpy.core.sdynpy_data)": [[28, "sdynpy.core.sdynpy_data.SpectrumArray"]], "__init__() (spectrumarray method)": [[28, "sdynpy.core.sdynpy_data.SpectrumArray.__init__"]], "function_type (spectrumarray property)": [[28, "sdynpy.core.sdynpy_data.SpectrumArray.function_type"]], "ifft() (spectrumarray method)": [[28, "sdynpy.core.sdynpy_data.SpectrumArray.ifft"]], "plot() (spectrumarray method)": [[28, "sdynpy.core.sdynpy_data.SpectrumArray.plot"]], "timehistoryarray (class in sdynpy.core.sdynpy_data)": [[29, "sdynpy.core.sdynpy_data.TimeHistoryArray"]], "__init__() (timehistoryarray method)": [[29, "sdynpy.core.sdynpy_data.TimeHistoryArray.__init__"]], "cpsd() (timehistoryarray method)": [[29, "sdynpy.core.sdynpy_data.TimeHistoryArray.cpsd"]], "fft() (timehistoryarray method)": [[29, "sdynpy.core.sdynpy_data.TimeHistoryArray.fft"]], "from_exodus() (timehistoryarray class method)": [[29, "sdynpy.core.sdynpy_data.TimeHistoryArray.from_exodus"]], "function_type (timehistoryarray property)": [[29, "sdynpy.core.sdynpy_data.TimeHistoryArray.function_type"]], "rms() (timehistoryarray method)": [[29, "sdynpy.core.sdynpy_data.TimeHistoryArray.rms"]], "transferfunctionarray (class in sdynpy.core.sdynpy_data)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray"]], "__init__() (transferfunctionarray method)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray.__init__"]], "compute_cmif() (transferfunctionarray method)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray.compute_cmif"]], "compute_mif() (transferfunctionarray method)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray.compute_mif"]], "compute_mmif() (transferfunctionarray method)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray.compute_mmif"]], "compute_nmif() (transferfunctionarray method)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray.compute_nmif"]], "delay_response() (transferfunctionarray method)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray.delay_response"]], "from_time_data() (transferfunctionarray static method)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray.from_time_data"]], "function_type (transferfunctionarray property)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray.function_type"]], "plot() (transferfunctionarray method)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray.plot"]], "substructure_by_constraint_matrix() (transferfunctionarray method)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray.substructure_by_constraint_matrix"]], "substructure_by_coordinate() (transferfunctionarray method)": [[30, "sdynpy.core.sdynpy_data.TransferFunctionArray.substructure_by_coordinate"]], "transmissibilityarray (class in sdynpy.core.sdynpy_data)": [[31, "sdynpy.core.sdynpy_data.TransmissibilityArray"]], "__init__() (transmissibilityarray method)": [[31, "sdynpy.core.sdynpy_data.TransmissibilityArray.__init__"]], "function_type (transmissibilityarray property)": [[31, "sdynpy.core.sdynpy_data.TransmissibilityArray.function_type"]], "rotation (typequal attribute)": [[32, "sdynpy.core.sdynpy_data.TypeQual.ROTATION"]], "translation (typequal attribute)": [[32, "sdynpy.core.sdynpy_data.TypeQual.TRANSLATION"]], "typequal (class in sdynpy.core.sdynpy_data)": [[32, "sdynpy.core.sdynpy_data.TypeQual"]], "__init__() (typequal method)": [[32, "sdynpy.core.sdynpy_data.TypeQual.__init__"]], "data_array() (in module sdynpy.core.sdynpy_data)": [[33, "sdynpy.core.sdynpy_data.data_array"]], "frf_from_time_data() (in module sdynpy.core.sdynpy_data)": [[34, "sdynpy.core.sdynpy_data.frf_from_time_data"]], "from_imat_struct() (in module sdynpy.core.sdynpy_data)": [[35, "sdynpy.core.sdynpy_data.from_imat_struct"]], "from_uff() (in module sdynpy.core.sdynpy_data)": [[36, "sdynpy.core.sdynpy_data.from_uff"]], "from_unv() (in module sdynpy.core.sdynpy_data)": [[37, "sdynpy.core.sdynpy_data.from_unv"]], "load() (in module sdynpy.core.sdynpy_data)": [[38, "sdynpy.core.sdynpy_data.load"]], "sdynpy.core.sdynpy_geometry": [[39, "module-sdynpy.core.sdynpy_geometry"]], "coordinatesystemarray (class in sdynpy.core.sdynpy_geometry)": [[40, "sdynpy.core.sdynpy_geometry.CoordinateSystemArray"]], "__init__() (coordinatesystemarray method)": [[40, "sdynpy.core.sdynpy_geometry.CoordinateSystemArray.__init__"]], "data_dtype (coordinatesystemarray attribute)": [[40, "sdynpy.core.sdynpy_geometry.CoordinateSystemArray.data_dtype"]], "from_unv() (coordinatesystemarray static method)": [[40, "sdynpy.core.sdynpy_geometry.CoordinateSystemArray.from_unv"]], "deflectionshapeplotter (class in sdynpy.core.sdynpy_geometry)": [[41, "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter"]], "__init__() (deflectionshapeplotter method)": [[41, "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter.__init__"]], "modify_abscissa() (deflectionshapeplotter method)": [[41, "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter.modify_abscissa"]], "save_multiline_animation() (deflectionshapeplotter method)": [[41, "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter.save_multiline_animation"]], "elementarray (class in sdynpy.core.sdynpy_geometry)": [[42, "sdynpy.core.sdynpy_geometry.ElementArray"]], "__init__() (elementarray method)": [[42, "sdynpy.core.sdynpy_geometry.ElementArray.__init__"]], "data_dtype (elementarray attribute)": [[42, "sdynpy.core.sdynpy_geometry.ElementArray.data_dtype"]], "from_unv() (elementarray static method)": [[42, "sdynpy.core.sdynpy_geometry.ElementArray.from_unv"]], "reduce() (elementarray method)": [[42, "sdynpy.core.sdynpy_geometry.ElementArray.reduce"]], "geometry (class in sdynpy.core.sdynpy_geometry)": [[43, "sdynpy.core.sdynpy_geometry.Geometry"]], "__init__() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.__init__"]], "add_traceline() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.add_traceline"]], "camera_visualization() (geometry class method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.camera_visualization"]], "copy() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.copy"]], "from_exodus() (geometry class method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.from_exodus"]], "from_imat_struct() (geometry class method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.from_imat_struct"]], "from_uff() (geometry class method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.from_uff"]], "from_unv() (geometry class method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.from_unv"]], "global_deflection() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.global_deflection"]], "global_node_coordinate() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.global_node_coordinate"]], "load() (geometry class method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.load"]], "map_ids() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.map_ids"]], "modify_ids() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.modify_ids"]], "overlay_geometries() (geometry static method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.overlay_geometries"]], "plot() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.plot"]], "plot_coordinate() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.plot_coordinate"]], "plot_deflection_shape() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.plot_deflection_shape"]], "plot_shape() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.plot_shape"]], "plot_transient() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.plot_transient"]], "reduce() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.reduce"]], "rigid_body_shapes() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.rigid_body_shapes"]], "save() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.save"]], "write_to_unv() (geometry method)": [[43, "sdynpy.core.sdynpy_geometry.Geometry.write_to_unv"]], "geometryplotter (class in sdynpy.core.sdynpy_geometry)": [[44, "sdynpy.core.sdynpy_geometry.GeometryPlotter"]], "__init__() (geometryplotter method)": [[44, "sdynpy.core.sdynpy_geometry.GeometryPlotter.__init__"]], "save_rotation_animation() (geometryplotter method)": [[44, "sdynpy.core.sdynpy_geometry.GeometryPlotter.save_rotation_animation"]], "nodearray (class in sdynpy.core.sdynpy_geometry)": [[45, "sdynpy.core.sdynpy_geometry.NodeArray"]], "__init__() (nodearray method)": [[45, "sdynpy.core.sdynpy_geometry.NodeArray.__init__"]], "by_grid() (nodearray method)": [[45, "sdynpy.core.sdynpy_geometry.NodeArray.by_grid"]], "by_position() (nodearray method)": [[45, "sdynpy.core.sdynpy_geometry.NodeArray.by_position"]], "data_dtype (nodearray attribute)": [[45, "sdynpy.core.sdynpy_geometry.NodeArray.data_dtype"]], "from_unv() (nodearray static method)": [[45, "sdynpy.core.sdynpy_geometry.NodeArray.from_unv"]], "global_coordinate() (nodearray method)": [[45, "sdynpy.core.sdynpy_geometry.NodeArray.global_coordinate"]], "project_to_minimum_plane() (nodearray static method)": [[45, "sdynpy.core.sdynpy_geometry.NodeArray.project_to_minimum_plane"]], "reduce() (nodearray method)": [[45, "sdynpy.core.sdynpy_geometry.NodeArray.reduce"]], "triangulate() (nodearray method)": [[45, "sdynpy.core.sdynpy_geometry.NodeArray.triangulate"]], "shapeplotter (class in sdynpy.core.sdynpy_geometry)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter"]], "__init__() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.__init__"]], "add_menu_bar() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.add_menu_bar"]], "add_toolbars() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.add_toolbars"]], "compute_displacements() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.compute_displacements"]], "next_shape() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.next_shape"]], "play_animation() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.play_animation"]], "prev_shape() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.prev_shape"]], "save_animation() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.save_animation"]], "save_animation_all_shapes() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.save_animation_all_shapes"]], "save_animation_from_action() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.save_animation_from_action"]], "select_complex() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_complex"]], "select_loop() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_loop"]], "select_scaling_0p25() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_0p25"]], "select_scaling_0p5() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_0p5"]], "select_scaling_0p8() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_0p8"]], "select_scaling_1() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_1"]], "select_scaling_1p25() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_1p25"]], "select_scaling_2p0() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_2p0"]], "select_scaling_4p0() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_4p0"]], "select_shape() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_shape"]], "select_speed_0p8() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_speed_0p8"]], "select_speed_1() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_speed_1"]], "select_speed_1p25() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_speed_1p25"]], "show_comment() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.show_comment"]], "stop_animation() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.stop_animation"]], "toggle_undeformed() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.toggle_undeformed"]], "update_shape() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.update_shape"]], "update_shape_mode() (shapeplotter method)": [[46, "sdynpy.core.sdynpy_geometry.ShapePlotter.update_shape_mode"]], "tracelinearray (class in sdynpy.core.sdynpy_geometry)": [[47, "sdynpy.core.sdynpy_geometry.TracelineArray"]], "__init__() (tracelinearray method)": [[47, "sdynpy.core.sdynpy_geometry.TracelineArray.__init__"]], "data_dtype (tracelinearray attribute)": [[47, "sdynpy.core.sdynpy_geometry.TracelineArray.data_dtype"]], "from_unv() (tracelinearray static method)": [[47, "sdynpy.core.sdynpy_geometry.TracelineArray.from_unv"]], "reduce() (tracelinearray method)": [[47, "sdynpy.core.sdynpy_geometry.TracelineArray.reduce"]], "transientplotter (class in sdynpy.core.sdynpy_geometry)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter"]], "__init__() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.__init__"]], "add_menu_bar() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.add_menu_bar"]], "add_toolbars() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.add_toolbars"]], "go_to_first_step() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.go_to_first_step"]], "go_to_last_step() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.go_to_last_step"]], "go_to_next_step() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.go_to_next_step"]], "go_to_previous_step() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.go_to_previous_step"]], "modify_abscissa() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.modify_abscissa"]], "play_animation() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.play_animation"]], "play_animation_reverse() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.play_animation_reverse"]], "save_animation() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.save_animation"]], "select_scaling_0p25() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_0p25"]], "select_scaling_0p5() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_0p5"]], "select_scaling_0p8() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_0p8"]], "select_scaling_1() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_1"]], "select_scaling_1p25() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_1p25"]], "select_scaling_2p0() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_2p0"]], "select_scaling_4p0() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_4p0"]], "select_speed_0p8() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_speed_0p8"]], "select_speed_1() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_speed_1"]], "select_speed_1p25() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_speed_1p25"]], "stop_animation() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.stop_animation"]], "update_abscissa() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.update_abscissa"]], "update_abscissa_reverse() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.update_abscissa_reverse"]], "update_displacement() (transientplotter method)": [[48, "sdynpy.core.sdynpy_geometry.TransientPlotter.update_displacement"]], "coordinate_system_array() (in module sdynpy.core.sdynpy_geometry)": [[49, "sdynpy.core.sdynpy_geometry.coordinate_system_array"]], "element_array() (in module sdynpy.core.sdynpy_geometry)": [[50, "sdynpy.core.sdynpy_geometry.element_array"]], "from_exodus() (in module sdynpy.core.sdynpy_geometry)": [[51, "sdynpy.core.sdynpy_geometry.from_exodus"]], "from_imat_struct() (in module sdynpy.core.sdynpy_geometry)": [[52, "sdynpy.core.sdynpy_geometry.from_imat_struct"]], "from_uff() (in module sdynpy.core.sdynpy_geometry)": [[53, "sdynpy.core.sdynpy_geometry.from_uff"]], "from_unv() (in module sdynpy.core.sdynpy_geometry)": [[54, "sdynpy.core.sdynpy_geometry.from_unv"]], "global_coord() (in module sdynpy.core.sdynpy_geometry)": [[55, "sdynpy.core.sdynpy_geometry.global_coord"]], "global_deflection() (in module sdynpy.core.sdynpy_geometry)": [[56, "sdynpy.core.sdynpy_geometry.global_deflection"]], "__init__() (id_map method)": [[57, "sdynpy.core.sdynpy_geometry.id_map.__init__"]], "id_map (class in sdynpy.core.sdynpy_geometry)": [[57, "sdynpy.core.sdynpy_geometry.id_map"]], "load() (in module sdynpy.core.sdynpy_geometry)": [[58, "sdynpy.core.sdynpy_geometry.load"]], "local_coord() (in module sdynpy.core.sdynpy_geometry)": [[59, "sdynpy.core.sdynpy_geometry.local_coord"]], "node_array() (in module sdynpy.core.sdynpy_geometry)": [[60, "sdynpy.core.sdynpy_geometry.node_array"]], "split_list() (in module sdynpy.core.sdynpy_geometry)": [[61, "sdynpy.core.sdynpy_geometry.split_list"]], "traceline_array() (in module sdynpy.core.sdynpy_geometry)": [[62, "sdynpy.core.sdynpy_geometry.traceline_array"]], "sdynpy.core.sdynpy_matrix": [[63, "module-sdynpy.core.sdynpy_matrix"]], "matrix (class in sdynpy.core.sdynpy_matrix)": [[64, "sdynpy.core.sdynpy_matrix.Matrix"]], "__init__() (matrix method)": [[64, "sdynpy.core.sdynpy_matrix.Matrix.__init__"]], "argsort_coordinate() (matrix method)": [[64, "sdynpy.core.sdynpy_matrix.Matrix.argsort_coordinate"]], "coordinate (matrix property)": [[64, "sdynpy.core.sdynpy_matrix.Matrix.coordinate"]], "data_dtype() (matrix static method)": [[64, "sdynpy.core.sdynpy_matrix.Matrix.data_dtype"]], "eye() (matrix class method)": [[64, "sdynpy.core.sdynpy_matrix.Matrix.eye"]], "num_coordinate_columns (matrix property)": [[64, "sdynpy.core.sdynpy_matrix.Matrix.num_coordinate_columns"]], "num_coordinate_rows (matrix property)": [[64, "sdynpy.core.sdynpy_matrix.Matrix.num_coordinate_rows"]], "plot() (matrix method)": [[64, "sdynpy.core.sdynpy_matrix.Matrix.plot"]], "sort_coordinate() (matrix method)": [[64, "sdynpy.core.sdynpy_matrix.Matrix.sort_coordinate"]], "matrix() (in module sdynpy.core.sdynpy_matrix)": [[65, "sdynpy.core.sdynpy_matrix.matrix"]], "sdynpy.core.sdynpy_shape": [[66, "module-sdynpy.core.sdynpy_shape"]], "shapearray (class in sdynpy.core.sdynpy_shape)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray"]], "__init__() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.__init__"]], "complex_data_dtype() (shapearray static method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.complex_data_dtype"]], "compute_frf() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.compute_frf"]], "concatenate_dofs() (shapearray static method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.concatenate_dofs"]], "expand() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.expand"]], "from_exodus() (shapearray class method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.from_exodus"]], "from_imat_struct() (shapearray class method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.from_imat_struct"]], "from_uff() (shapearray static method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.from_uff"]], "from_unv() (shapearray static method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.from_unv"]], "is_complex() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.is_complex"]], "mode_table() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.mode_table"]], "modeshape (shapearray property)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.modeshape"]], "ndof (shapearray property)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.ndof"]], "overlay_shapes() (shapearray static method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.overlay_shapes"]], "plot_frequency() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.plot_frequency"]], "real_data_dtype() (shapearray static method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.real_data_dtype"]], "reduce() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.reduce"]], "repack() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.repack"]], "shape_alignment() (shapearray static method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.shape_alignment"]], "system() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.system"]], "time_integrate() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.time_integrate"]], "to_real() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.to_real"]], "transform_coordinate_system() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.transform_coordinate_system"]], "write_to_unv() (shapearray method)": [[67, "sdynpy.core.sdynpy_shape.ShapeArray.write_to_unv"]], "concatenate_dofs() (in module sdynpy.core.sdynpy_shape)": [[68, "sdynpy.core.sdynpy_shape.concatenate_dofs"]], "from_exodus() (in module sdynpy.core.sdynpy_shape)": [[69, "sdynpy.core.sdynpy_shape.from_exodus"]], "from_imat_struct() (in module sdynpy.core.sdynpy_shape)": [[70, "sdynpy.core.sdynpy_shape.from_imat_struct"]], "from_unv() (in module sdynpy.core.sdynpy_shape)": [[71, "sdynpy.core.sdynpy_shape.from_unv"]], "mac() (in module sdynpy.core.sdynpy_shape)": [[72, "sdynpy.core.sdynpy_shape.mac"]], "overlay_shapes() (in module sdynpy.core.sdynpy_shape)": [[73, "sdynpy.core.sdynpy_shape.overlay_shapes"]], "rigid_body_check() (in module sdynpy.core.sdynpy_shape)": [[74, "sdynpy.core.sdynpy_shape.rigid_body_check"]], "rigid_body_error() (in module sdynpy.core.sdynpy_shape)": [[75, "sdynpy.core.sdynpy_shape.rigid_body_error"]], "rigid_body_fix_node_orientation() (in module sdynpy.core.sdynpy_shape)": [[76, "sdynpy.core.sdynpy_shape.rigid_body_fix_node_orientation"]], "shape_alignment() (in module sdynpy.core.sdynpy_shape)": [[77, "sdynpy.core.sdynpy_shape.shape_alignment"]], "shape_array() (in module sdynpy.core.sdynpy_shape)": [[78, "sdynpy.core.sdynpy_shape.shape_array"]], "shape_comparison_table() (in module sdynpy.core.sdynpy_shape)": [[79, "sdynpy.core.sdynpy_shape.shape_comparison_table"]], "sdynpy.core.sdynpy_system": [[80, "module-sdynpy.core.sdynpy_system"]], "c (system property)": [[81, "sdynpy.core.sdynpy_system.System.C"]], "k (system property)": [[81, "sdynpy.core.sdynpy_system.System.K"]], "m (system property)": [[81, "sdynpy.core.sdynpy_system.System.M"]], "system (class in sdynpy.core.sdynpy_system)": [[81, "sdynpy.core.sdynpy_system.System"]], "__init__() (system method)": [[81, "sdynpy.core.sdynpy_system.System.__init__"]], "assign_modal_damping() (system method)": [[81, "sdynpy.core.sdynpy_system.System.assign_modal_damping"]], "beam() (system class method)": [[81, "sdynpy.core.sdynpy_system.System.beam"]], "concatenate() (system class method)": [[81, "sdynpy.core.sdynpy_system.System.concatenate"]], "constrain() (system method)": [[81, "sdynpy.core.sdynpy_system.System.constrain"]], "coordinate (system property)": [[81, "sdynpy.core.sdynpy_system.System.coordinate"]], "copy() (system method)": [[81, "sdynpy.core.sdynpy_system.System.copy"]], "damping (system property)": [[81, "sdynpy.core.sdynpy_system.System.damping"]], "eigensolution() (system method)": [[81, "sdynpy.core.sdynpy_system.System.eigensolution"]], "frequency_response() (system method)": [[81, "sdynpy.core.sdynpy_system.System.frequency_response"]], "from_exodus_superelement() (system class method)": [[81, "sdynpy.core.sdynpy_system.System.from_exodus_superelement"]], "get_indices_by_coordinate() (system method)": [[81, "sdynpy.core.sdynpy_system.System.get_indices_by_coordinate"]], "load() (system class method)": [[81, "sdynpy.core.sdynpy_system.System.load"]], "mass (system property)": [[81, "sdynpy.core.sdynpy_system.System.mass"]], "ndof (system property)": [[81, "sdynpy.core.sdynpy_system.System.ndof"]], "ndof_transformed (system property)": [[81, "sdynpy.core.sdynpy_system.System.ndof_transformed"]], "reduce() (system method)": [[81, "sdynpy.core.sdynpy_system.System.reduce"]], "reduce_craig_bampton() (system method)": [[81, "sdynpy.core.sdynpy_system.System.reduce_craig_bampton"]], "reduce_dynamic() (system method)": [[81, "sdynpy.core.sdynpy_system.System.reduce_dynamic"]], "reduce_guyan() (system method)": [[81, "sdynpy.core.sdynpy_system.System.reduce_guyan"]], "save() (system method)": [[81, "sdynpy.core.sdynpy_system.System.save"]], "set_proportional_damping() (system method)": [[81, "sdynpy.core.sdynpy_system.System.set_proportional_damping"]], "simulate_test() (system method)": [[81, "sdynpy.core.sdynpy_system.System.simulate_test"]], "spy() (system method)": [[81, "sdynpy.core.sdynpy_system.System.spy"]], "stiffness (system property)": [[81, "sdynpy.core.sdynpy_system.System.stiffness"]], "substructure_by_coordinate() (system method)": [[81, "sdynpy.core.sdynpy_system.System.substructure_by_coordinate"]], "substructure_by_position() (system class method)": [[81, "sdynpy.core.sdynpy_system.System.substructure_by_position"]], "substructure_by_shape() (system method)": [[81, "sdynpy.core.sdynpy_system.System.substructure_by_shape"]], "time_integrate() (system method)": [[81, "sdynpy.core.sdynpy_system.System.time_integrate"]], "to_state_space() (system method)": [[81, "sdynpy.core.sdynpy_system.System.to_state_space"]], "transformation (system property)": [[81, "sdynpy.core.sdynpy_system.System.transformation"]], "transformation_matrix_at_coordinates() (system method)": [[81, "sdynpy.core.sdynpy_system.System.transformation_matrix_at_coordinates"]], "substructure_by_position() (in module sdynpy.core.sdynpy_system)": [[82, "sdynpy.core.sdynpy_system.substructure_by_position"]], "sdynpy.demo": [[83, "module-sdynpy.demo"]], "sdynpy.demo.beam_airplane": [[84, "module-sdynpy.demo.beam_airplane"]], "create_models() (in module sdynpy.demo.beam_airplane)": [[85, "sdynpy.demo.beam_airplane.create_models"]], "sdynpy.demo.beam_plate": [[86, "module-sdynpy.demo.beam_plate"]], "create_models() (in module sdynpy.demo.beam_plate)": [[87, "sdynpy.demo.beam_plate.create_models"]], "sdynpy.doc": [[88, "module-sdynpy.doc"]], "sdynpy.doc.sdynpy_latex": [[89, "module-sdynpy.doc.sdynpy_latex"]], "create_latex_summary() (in module sdynpy.doc.sdynpy_latex)": [[90, "sdynpy.doc.sdynpy_latex.create_latex_summary"]], "sdynpy.doc.sdynpy_ppt": [[91, "module-sdynpy.doc.sdynpy_ppt"]], "add_geometry_overview_slide() (in module sdynpy.doc.sdynpy_ppt)": [[92, "sdynpy.doc.sdynpy_ppt.add_geometry_overview_slide"]], "add_section_header_slide() (in module sdynpy.doc.sdynpy_ppt)": [[93, "sdynpy.doc.sdynpy_ppt.add_section_header_slide"]], "add_shape_animation_slides() (in module sdynpy.doc.sdynpy_ppt)": [[94, "sdynpy.doc.sdynpy_ppt.add_shape_animation_slides"]], "add_shape_comparison_animation_slides() (in module sdynpy.doc.sdynpy_ppt)": [[95, "sdynpy.doc.sdynpy_ppt.add_shape_comparison_animation_slides"]], "add_shape_comparison_overview_slide() (in module sdynpy.doc.sdynpy_ppt)": [[96, "sdynpy.doc.sdynpy_ppt.add_shape_comparison_overview_slide"]], "add_shape_overview_slide() (in module sdynpy.doc.sdynpy_ppt)": [[97, "sdynpy.doc.sdynpy_ppt.add_shape_overview_slide"]], "add_title_slide() (in module sdynpy.doc.sdynpy_ppt)": [[98, "sdynpy.doc.sdynpy_ppt.add_title_slide"]], "create_summary_pptx() (in module sdynpy.doc.sdynpy_ppt)": [[99, "sdynpy.doc.sdynpy_ppt.create_summary_pptx"]], "position_placeholder() (in module sdynpy.doc.sdynpy_ppt)": [[100, "sdynpy.doc.sdynpy_ppt.position_placeholder"]], "sdynpy.fem": [[101, "module-sdynpy.fem"]], "sdynpy.fem.sdynpy_beam": [[102, "module-sdynpy.fem.sdynpy_beam"]], "beamkm() (in module sdynpy.fem.sdynpy_beam)": [[103, "sdynpy.fem.sdynpy_beam.beamkm"]], "beamkm_2d() (in module sdynpy.fem.sdynpy_beam)": [[104, "sdynpy.fem.sdynpy_beam.beamkm_2d"]], "rect_beam_props() (in module sdynpy.fem.sdynpy_beam)": [[105, "sdynpy.fem.sdynpy_beam.rect_beam_props"]], "sdynpy.fem.sdynpy_dof": [[106, "module-sdynpy.fem.sdynpy_dof"]], "by_condition_number() (in module sdynpy.fem.sdynpy_dof)": [[107, "sdynpy.fem.sdynpy_dof.by_condition_number"]], "by_effective_independence() (in module sdynpy.fem.sdynpy_dof)": [[108, "sdynpy.fem.sdynpy_dof.by_effective_independence"]], "sdynpy.fem.sdynpy_exodus": [[109, "module-sdynpy.fem.sdynpy_exodus"]], "exodus (class in sdynpy.fem.sdynpy_exodus)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus"]], "__init__() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.__init__"]], "close() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.close"]], "extract_sharp_edges() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.extract_sharp_edges"]], "get_block_surface() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_block_surface"]], "get_coord() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_coord"]], "get_coord_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_coord_names"]], "get_coords() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_coords"]], "get_displacements() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_displacements"]], "get_elem_attr() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_attr"]], "get_elem_blk_ids() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_blk_ids"]], "get_elem_blk_info() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_blk_info"]], "get_elem_connectivity() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_connectivity"]], "get_elem_num_map() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_num_map"]], "get_elem_type() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_type"]], "get_elem_variable_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_variable_names"]], "get_elem_variable_table() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_variable_table"]], "get_elem_variable_value() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_variable_value"]], "get_elem_variable_values() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_variable_values"]], "get_element_property_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_element_property_names"]], "get_element_property_value() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_element_property_value"]], "get_global_variable_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_global_variable_names"]], "get_global_variable_values() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_global_variable_values"]], "get_info_records() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_info_records"]], "get_node_num_map() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_num_map"]], "get_node_set_dist_factors() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_set_dist_factors"]], "get_node_set_ids() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_set_ids"]], "get_node_set_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_set_names"]], "get_node_set_nodes() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_set_nodes"]], "get_node_set_num_nodes() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_set_num_nodes"]], "get_node_variable_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_variable_names"]], "get_node_variable_value() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_variable_value"]], "get_node_variable_values() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_variable_values"]], "get_qa_records() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_qa_records"]], "get_side_set_dist_factors() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_dist_factors"]], "get_side_set_faces() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_faces"]], "get_side_set_ids() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_ids"]], "get_side_set_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_names"]], "get_side_set_node_list() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_node_list"]], "get_side_set_num_faces() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_num_faces"]], "get_times() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.get_times"]], "load_into_memory() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.load_into_memory"]], "num_attr() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_attr"]], "num_blks (exodus property)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_blks"]], "num_dimensions (exodus property)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_dimensions"]], "num_elem_variables (exodus property)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_elem_variables"]], "num_elems (exodus property)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_elems"]], "num_elems_in_blk() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_elems_in_blk"]], "num_global_variables (exodus property)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_global_variables"]], "num_node_sets (exodus property)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_node_sets"]], "num_node_variables (exodus property)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_node_variables"]], "num_nodes (exodus property)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_nodes"]], "num_nodes_per_elem() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_nodes_per_elem"]], "num_side_sets (exodus property)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_side_sets"]], "num_times (exodus property)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.num_times"]], "put_coord_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_coord_names"]], "put_coords() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_coords"]], "put_elem_blk_ids() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_elem_blk_ids"]], "put_elem_blk_info() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_elem_blk_info"]], "put_elem_num_map() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_elem_num_map"]], "put_elem_variable_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_elem_variable_names"]], "put_element_property_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_element_property_names"]], "put_element_property_value() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_element_property_value"]], "put_global_variable_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_global_variable_names"]], "put_info_records() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_info_records"]], "put_node_num_map() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_node_num_map"]], "put_node_set_ids() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_node_set_ids"]], "put_node_set_info() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_node_set_info"]], "put_node_set_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_node_set_names"]], "put_node_variable_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_node_variable_names"]], "put_qa_records() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_qa_records"]], "put_side_set_ids() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_side_set_ids"]], "put_side_set_info() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_side_set_info"]], "put_side_set_names() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.put_side_set_names"]], "reduce_to_surfaces() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.reduce_to_surfaces"]], "set_elem_attr() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.set_elem_attr"]], "set_elem_connectivity() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.set_elem_connectivity"]], "set_elem_variable_value() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.set_elem_variable_value"]], "set_elem_variable_values() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.set_elem_variable_values"]], "set_global_variable_values() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.set_global_variable_values"]], "set_node_variable_value() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.set_node_variable_value"]], "set_node_variable_values() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.set_node_variable_values"]], "set_time() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.set_time"]], "set_times() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.set_times"]], "title (exodus property)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.title"]], "triangulate_surface_mesh() (exodus method)": [[110, "sdynpy.fem.sdynpy_exodus.Exodus.triangulate_surface_mesh"]], "exoduserror": [[111, "sdynpy.fem.sdynpy_exodus.ExodusError"]], "exodusinmemory (class in sdynpy.fem.sdynpy_exodus)": [[112, "sdynpy.fem.sdynpy_exodus.ExodusInMemory"]], "__init__() (exodusinmemory method)": [[112, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.__init__"]], "from_sdynpy() (exodusinmemory static method)": [[112, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.from_sdynpy"]], "get_block_surface() (exodusinmemory method)": [[112, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.get_block_surface"]], "load_from_exodus() (exodusinmemory method)": [[112, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.load_from_exodus"]], "repack() (exodusinmemory method)": [[112, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.repack"]], "triangulate_surface_mesh() (exodusinmemory method)": [[112, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.triangulate_surface_mesh"]], "write_to_file() (exodusinmemory method)": [[112, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.write_to_file"]], "extract_sharp_edges() (in module sdynpy.fem.sdynpy_exodus)": [[113, "sdynpy.fem.sdynpy_exodus.extract_sharp_edges"]], "face_connectivity() (in module sdynpy.fem.sdynpy_exodus)": [[114, "sdynpy.fem.sdynpy_exodus.face_connectivity"]], "mesh_triangulation_array() (in module sdynpy.fem.sdynpy_exodus)": [[115, "sdynpy.fem.sdynpy_exodus.mesh_triangulation_array"]], "reduce_exodus_to_surfaces() (in module sdynpy.fem.sdynpy_exodus)": [[116, "sdynpy.fem.sdynpy_exodus.reduce_exodus_to_surfaces"]], "__init__() (subfield method)": [[117, "sdynpy.fem.sdynpy_exodus.subfield.__init__"]], "subfield (class in sdynpy.fem.sdynpy_exodus)": [[117, "sdynpy.fem.sdynpy_exodus.subfield"]], "sdynpy.fem.sdynpy_shaker": [[118, "module-sdynpy.fem.sdynpy_shaker"]], "mck() (shaker4dof method)": [[119, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.MCK"]], "shaker4dof (class in sdynpy.fem.sdynpy_shaker)": [[119, "sdynpy.fem.sdynpy_shaker.Shaker4DoF"]], "__init__() (shaker4dof method)": [[119, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.__init__"]], "modal_shop_100lbf() (shaker4dof class method)": [[119, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.modal_shop_100lbf"]], "plot_electrical_impedance() (shaker4dof method)": [[119, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.plot_electrical_impedance"]], "state_space() (shaker4dof method)": [[119, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.state_space"]], "transfer_function() (shaker4dof method)": [[119, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.transfer_function"]], "sdynpy.fileio": [[120, "module-sdynpy.fileio"]], "sdynpy.fileio.sdynpy_rattlesnake": [[121, "module-sdynpy.fileio.sdynpy_rattlesnake"]], "read_modal_data() (in module sdynpy.fileio.sdynpy_rattlesnake)": [[122, "sdynpy.fileio.sdynpy_rattlesnake.read_modal_data"]], "read_rattlesnake_output() (in module sdynpy.fileio.sdynpy_rattlesnake)": [[123, "sdynpy.fileio.sdynpy_rattlesnake.read_rattlesnake_output"]], "read_system_id_data() (in module sdynpy.fileio.sdynpy_rattlesnake)": [[124, "sdynpy.fileio.sdynpy_rattlesnake.read_system_id_data"]], "sdynpy.fileio.sdynpy_uff": [[125, "module-sdynpy.fileio.sdynpy_uff"]], "uffreaderror": [[126, "sdynpy.fileio.sdynpy_uff.UFFReadError"]], "parse_uff_line() (in module sdynpy.fileio.sdynpy_uff)": [[127, "sdynpy.fileio.sdynpy_uff.parse_uff_line"]], "parse_uff_lines() (in module sdynpy.fileio.sdynpy_uff)": [[128, "sdynpy.fileio.sdynpy_uff.parse_uff_lines"]], "readuff() (in module sdynpy.fileio.sdynpy_uff)": [[129, "sdynpy.fileio.sdynpy_uff.readuff"]], "readunv() (in module sdynpy.fileio.sdynpy_uff)": [[130, "sdynpy.fileio.sdynpy_uff.readunv"]], "write_uff_line() (in module sdynpy.fileio.sdynpy_uff)": [[131, "sdynpy.fileio.sdynpy_uff.write_uff_line"]], "sdynpy.fileio.sdynpy_uff_datasets": [[132, "module-sdynpy.fileio.sdynpy_uff_datasets"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151": [[133, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151"]], "sdynpy_uff_dataset_151 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151)": [[134, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151"]], "__init__() (sdynpy_uff_dataset_151 method)": [[134, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151.__init__"]], "dataset_number (sdynpy_uff_dataset_151 property)": [[134, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_151 class method)": [[134, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_151 method)": [[134, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151)": [[135, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164": [[136, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164"]], "sdynpy_uff_dataset_164 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164)": [[137, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164"]], "__init__() (sdynpy_uff_dataset_164 method)": [[137, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164.__init__"]], "dataset_number (sdynpy_uff_dataset_164 property)": [[137, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_164 class method)": [[137, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_164 method)": [[137, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164)": [[138, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858": [[139, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858"]], "sdynpy_uff_dataset_1858 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858)": [[140, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858"]], "__init__() (sdynpy_uff_dataset_1858 method)": [[140, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858.__init__"]], "dataset_number (sdynpy_uff_dataset_1858 property)": [[140, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_1858 class method)": [[140, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_1858 method)": [[140, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858.write_string"]], "is_abscissa_even() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858)": [[141, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.is_abscissa_even"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858)": [[142, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400": [[143, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400"]], "sdynpy_uff_dataset_2400 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400)": [[144, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400"]], "__init__() (sdynpy_uff_dataset_2400 method)": [[144, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400.__init__"]], "dataset_number (sdynpy_uff_dataset_2400 property)": [[144, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_2400 class method)": [[144, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_2400 method)": [[144, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400)": [[145, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411": [[146, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411"]], "sdynpy_uff_dataset_2411 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411)": [[147, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411"]], "__init__() (sdynpy_uff_dataset_2411 method)": [[147, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411.__init__"]], "dataset_number (sdynpy_uff_dataset_2411 property)": [[147, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_2411 class method)": [[147, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_2411 method)": [[147, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411)": [[148, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412": [[149, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412"]], "sdynpy_uff_dataset_2412 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412)": [[150, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412"]], "__init__() (sdynpy_uff_dataset_2412 method)": [[150, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412.__init__"]], "dataset_number (sdynpy_uff_dataset_2412 property)": [[150, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_2412 class method)": [[150, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_2412 method)": [[150, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412)": [[151, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420": [[152, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420"]], "sdynpy_uff_dataset_2420 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420)": [[153, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420"]], "__init__() (sdynpy_uff_dataset_2420 method)": [[153, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420.__init__"]], "dataset_number (sdynpy_uff_dataset_2420 property)": [[153, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_2420 class method)": [[153, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_2420 method)": [[153, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420)": [[154, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55": [[155, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55"]], "sdynpy_uff_dataset_55 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55"]], "__init__() (sdynpy_uff_dataset_55 method)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.__init__"]], "buckling_eigenvalue (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.buckling_eigenvalue"]], "dataset_number (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.dataset_number"]], "frequency (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.frequency"]], "frequency_step_number (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.frequency_step_number"]], "from_uff_data_array() (sdynpy_uff_dataset_55 class method)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.from_uff_data_array"]], "id_number (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.id_number"]], "imaginary_eigenvalue (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.imaginary_eigenvalue"]], "imaginary_modal_a (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.imaginary_modal_a"]], "imaginary_modal_b (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.imaginary_modal_b"]], "load_case_number (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.load_case_number"]], "modal_hysteretic_damping (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.modal_hysteretic_damping"]], "modal_mass (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.modal_mass"]], "modal_viscous_damping (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.modal_viscous_damping"]], "mode_number (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.mode_number"]], "real_eigenvalue (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.real_eigenvalue"]], "real_modal_a (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.real_modal_a"]], "real_modal_b (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.real_modal_b"]], "time (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.time"]], "time_step_number (sdynpy_uff_dataset_55 property)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.time_step_number"]], "write_string() (sdynpy_uff_dataset_55 method)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55)": [[157, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58": [[158, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58"]], "sdynpy_uff_dataset_58 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58)": [[159, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58"]], "__init__() (sdynpy_uff_dataset_58 method)": [[159, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58.__init__"]], "dataset_number (sdynpy_uff_dataset_58 property)": [[159, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_58 class method)": [[159, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_58 method)": [[159, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58.write_string"]], "is_abscissa_even() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58)": [[160, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.is_abscissa_even"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58)": [[161, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82": [[162, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82"]], "sdynpy_uff_dataset_82 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82)": [[163, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82"]], "__init__() (sdynpy_uff_dataset_82 method)": [[163, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82.__init__"]], "dataset_number (sdynpy_uff_dataset_82 property)": [[163, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_82 class method)": [[163, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_82 method)": [[163, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82)": [[164, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.read"]], "sdynpy.fileio.sdynpy_vic": [[165, "module-sdynpy.fileio.sdynpy_vic"]], "camera_matrix_from_vic_parameters() (in module sdynpy.fileio.sdynpy_vic)": [[166, "sdynpy.fileio.sdynpy_vic.camera_matrix_from_vic_parameters"]], "extract_vic_cal_parameters() (in module sdynpy.fileio.sdynpy_vic)": [[167, "sdynpy.fileio.sdynpy_vic.extract_vic_cal_parameters"]], "get_vic_camera_parameters() (in module sdynpy.fileio.sdynpy_vic)": [[168, "sdynpy.fileio.sdynpy_vic.get_vic_camera_parameters"]], "matrix_from_bryant_angles() (in module sdynpy.fileio.sdynpy_vic)": [[169, "sdynpy.fileio.sdynpy_vic.matrix_from_bryant_angles"]], "read_vic3d_mat_files() (in module sdynpy.fileio.sdynpy_vic)": [[170, "sdynpy.fileio.sdynpy_vic.read_vic3D_mat_files"]], "vic_angles_from_matrix() (in module sdynpy.fileio.sdynpy_vic)": [[171, "sdynpy.fileio.sdynpy_vic.vic_angles_from_matrix"]], "sdynpy.modal": [[172, "module-sdynpy.modal"]], "sdynpy.modal.sdynpy_ccmif": [[173, "module-sdynpy.modal.sdynpy_ccmif"]], "coloredcmif (class in sdynpy.modal.sdynpy_ccmif)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF"]], "__init__() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.__init__"]], "clear_plot() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.clear_plot"]], "clicked_point() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.clicked_point"]], "cluster_modes() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.cluster_modes"]], "collect_shapes() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.collect_shapes"]], "compute_and_plot_ccmif() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.compute_and_plot_ccmif"]], "compute_ccmif() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.compute_ccmif"]], "connect_callbacks() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.connect_callbacks"]], "disable_file() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.disable_file"]], "enable_file() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.enable_file"]], "enabled_selected_modes (coloredcmif property)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.enabled_selected_modes"]], "enabled_shape_array (coloredcmif property)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.enabled_shape_array"]], "export_figure() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.export_figure"]], "export_mode_table() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.export_mode_table"]], "load_file() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.load_file"]], "load_geometry() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.load_geometry"]], "load_progress() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.load_progress"]], "plot_ccmif() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.plot_ccmif"]], "plot_cmifs() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.plot_cmifs"]], "plot_frfs() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.plot_frfs"]], "plot_shapes() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.plot_shapes"]], "remove_file() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.remove_file"]], "replace_file() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.replace_file"]], "resynthesize() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.resynthesize"]], "save_progress() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.save_progress"]], "save_shapes() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.save_shapes"]], "set_mode_properties() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.set_mode_properties"]], "set_properties() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.set_properties"]], "toggle_auto_resynth() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.toggle_auto_resynth"]], "update_line_width() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.update_line_width"]], "update_selection() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.update_selection"]], "update_shape_list() (coloredcmif method)": [[174, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.update_shape_list"]], "propertiesdialog (class in sdynpy.modal.sdynpy_ccmif)": [[175, "sdynpy.modal.sdynpy_ccmif.PropertiesDialog"]], "__init__() (propertiesdialog method)": [[175, "sdynpy.modal.sdynpy_ccmif.PropertiesDialog.__init__"]], "show() (propertiesdialog static method)": [[175, "sdynpy.modal.sdynpy_ccmif.PropertiesDialog.show"]], "sdynpy.modal.sdynpy_modeshape": [[176, "module-sdynpy.modal.sdynpy_modeshape"]], "all (shapeselection attribute)": [[177, "sdynpy.modal.sdynpy_modeshape.ShapeSelection.ALL"]], "drive_point_coefficient (shapeselection attribute)": [[177, "sdynpy.modal.sdynpy_modeshape.ShapeSelection.DRIVE_POINT_COEFFICIENT"]], "participation_factor (shapeselection attribute)": [[177, "sdynpy.modal.sdynpy_modeshape.ShapeSelection.PARTICIPATION_FACTOR"]], "shapeselection (class in sdynpy.modal.sdynpy_modeshape)": [[177, "sdynpy.modal.sdynpy_modeshape.ShapeSelection"]], "__init__() (shapeselection method)": [[177, "sdynpy.modal.sdynpy_modeshape.ShapeSelection.__init__"]], "compute_residues() (in module sdynpy.modal.sdynpy_modeshape)": [[178, "sdynpy.modal.sdynpy_modeshape.compute_residues"]], "compute_shapes() (in module sdynpy.modal.sdynpy_modeshape)": [[179, "sdynpy.modal.sdynpy_modeshape.compute_shapes"]], "sdynpy.modal.sdynpy_polypy": [[180, "module-sdynpy.modal.sdynpy_polypy"]], "polypy (class in sdynpy.modal.sdynpy_polypy)": [[181, "sdynpy.modal.sdynpy_polypy.PolyPy"]], "__init__() (polypy method)": [[181, "sdynpy.modal.sdynpy_polypy.PolyPy.__init__"]], "analyze_pole_convergence() (polypy method)": [[181, "sdynpy.modal.sdynpy_polypy.PolyPy.analyze_pole_convergence"]], "angular_frequencies (polypy property)": [[181, "sdynpy.modal.sdynpy_polypy.PolyPy.angular_frequencies"]], "compute_poles() (polypy method)": [[181, "sdynpy.modal.sdynpy_polypy.PolyPy.compute_poles"]], "compute_residues() (polypy method)": [[181, "sdynpy.modal.sdynpy_polypy.PolyPy.compute_residues"]], "compute_shapes() (polypy method)": [[181, "sdynpy.modal.sdynpy_polypy.PolyPy.compute_shapes"]], "frequencies (polypy property)": [[181, "sdynpy.modal.sdynpy_polypy.PolyPy.frequencies"]], "frequency_spacing (polypy property)": [[181, "sdynpy.modal.sdynpy_polypy.PolyPy.frequency_spacing"]], "plot_stability() (polypy method)": [[181, "sdynpy.modal.sdynpy_polypy.PolyPy.plot_stability"]], "pole_list_from_indices() (polypy method)": [[181, "sdynpy.modal.sdynpy_polypy.PolyPy.pole_list_from_indices"]], "polypy_gui (class in sdynpy.modal.sdynpy_polypy)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI"]], "__init__() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.__init__"]], "compute_shapes() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.compute_shapes"]], "compute_stabilization() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.compute_stabilization"]], "connect_callbacks() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.connect_callbacks"]], "create_cmif_window() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.create_cmif_window"]], "create_frf_window() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.create_frf_window"]], "create_mmif_window() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.create_mmif_window"]], "create_nmif_window() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.create_nmif_window"]], "create_qmif_window() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.create_qmif_window"]], "export_fit_data() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.export_fit_data"]], "frequencies (polypy_gui property)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.frequencies"]], "frequency_slice (polypy_gui property)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.frequency_slice"]], "load_geometry() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.load_geometry"]], "max_frequency (polypy_gui property)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.max_frequency"]], "min_frequency (polypy_gui property)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.min_frequency"]], "plot_shapes() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.plot_shapes"]], "pole_selection_changed() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.pole_selection_changed"]], "save_shapes() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.save_shapes"]], "set_geometry() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.set_geometry"]], "show_line_selectors() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.show_line_selectors"]], "update_data_plot() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.update_data_plot"]], "update_frequency_from_region() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.update_frequency_from_region"]], "update_max_frequency() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.update_max_frequency"]], "update_min_frequency() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.update_min_frequency"]], "update_resynthesis() (polypy_gui method)": [[182, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.update_resynthesis"]], "polypy_stability (class in sdynpy.modal.sdynpy_polypy)": [[183, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability"]], "__init__() (polypy_stability method)": [[183, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.__init__"]], "connect_callbacks() (polypy_stability method)": [[183, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.connect_callbacks"]], "discard() (polypy_stability method)": [[183, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.discard"]], "mouseclicked() (polypy_stability method)": [[183, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.mouseClicked"]], "mousemoved() (polypy_stability method)": [[183, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.mouseMoved"]], "plot_poles() (polypy_stability method)": [[183, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.plot_poles"]], "update_stability_plot_views() (polypy_stability method)": [[183, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.update_stability_plot_views"]], "update_stabilization_plot() (polypy_stability method)": [[183, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.update_stabilization_plot"]], "sdynpy.modal.sdynpy_signal_processing_gui": [[184, "module-sdynpy.modal.sdynpy_signal_processing_gui"]], "signalprocessinggui (class in sdynpy.modal.sdynpy_signal_processing_gui)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI"]], "__init__() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.__init__"]], "acceptancechanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.acceptanceChanged"]], "analyzepolypy() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.analyzePolyPy"]], "analyzesmac() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.analyzeSMAC"]], "block_averaging_signals() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.block_averaging_signals"]], "block_data_range_signals() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.block_data_range_signals"]], "block_sampling_signals() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.block_sampling_signals"]], "compute() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.compute"]], "compute_triggers() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.compute_triggers"]], "connect_callbacks() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.connect_callbacks"]], "create_rois() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.create_rois"]], "endtimechanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.endTimeChanged"]], "framesizechanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.frameSizeChanged"]], "frametimechanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.frameTimeChanged"]], "frameschanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.framesChanged"]], "frequencylineschanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.frequencyLinesChanged"]], "frequencyspacingchanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.frequencySpacingChanged"]], "get_abscissa_index_range() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.get_abscissa_index_range"]], "hysteresischanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.hysteresisChanged"]], "initialize_ui() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.initialize_ui"]], "levelchanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.levelChanged"]], "loaddata() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.loadData"]], "loadgeometry() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.loadGeometry"]], "overlapchanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.overlapChanged"]], "overlapsampleschanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.overlapSamplesChanged"]], "plotdeflection() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.plotDeflection"]], "plottransient() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.plotTransient"]], "pretriggerchanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.pretriggerChanged"]], "referenceviewchanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.referenceViewChanged"]], "referenceschanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.referencesChanged"]], "reset_ui() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.reset_ui"]], "responseviewchanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.responseViewChanged"]], "responseschanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.responsesChanged"]], "saveautospectra() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.saveAutospectra"]], "savecoherence() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.saveCoherence"]], "savecrossspectra() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.saveCrossspectra"]], "savefrf() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.saveFRF"]], "savewindowedtimehistory() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.saveWindowedTimeHistory"]], "sendtoreference() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.sendToReference"]], "sendtoresponse() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.sendToResponse"]], "showautospectra() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.showAutospectra"]], "showcoherence() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.showCoherence"]], "showcrossspectra() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.showCrossspectra"]], "showfrf() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.showFRF"]], "showwindowedtimehistory() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.showWindowedTimeHistory"]], "starttimechanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.startTimeChanged"]], "toggleroi() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.toggleROI"]], "typechanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.typeChanged"]], "updatehysteresisfromreference() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateHysteresisFromReference"]], "updatehysteresisfromresponse() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateHysteresisFromResponse"]], "updatetimefromreference() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateTimeFromReference"]], "updatetimefromresponse() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateTimeFromResponse"]], "updatetriggerfromreference() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateTriggerFromReference"]], "updatetriggerfromresponse() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateTriggerFromResponse"]], "windowchanged() (signalprocessinggui method)": [[185, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.windowChanged"]], "sdynpy.modal.sdynpy_smac": [[186, "module-sdynpy.modal.sdynpy_smac"]], "addrootdialog (class in sdynpy.modal.sdynpy_smac)": [[187, "sdynpy.modal.sdynpy_smac.AddRootDialog"]], "__init__() (addrootdialog method)": [[187, "sdynpy.modal.sdynpy_smac.AddRootDialog.__init__"]], "add_root() (addrootdialog static method)": [[187, "sdynpy.modal.sdynpy_smac.AddRootDialog.add_root"]], "connect_callbacks() (addrootdialog method)": [[187, "sdynpy.modal.sdynpy_smac.AddRootDialog.connect_callbacks"]], "recompute_correlation() (addrootdialog method)": [[187, "sdynpy.modal.sdynpy_smac.AddRootDialog.recompute_correlation"]], "switch_log_plot() (addrootdialog method)": [[187, "sdynpy.modal.sdynpy_smac.AddRootDialog.switch_log_plot"]], "update_plot_range() (addrootdialog method)": [[187, "sdynpy.modal.sdynpy_smac.AddRootDialog.update_plot_range"]], "update_range_selectors() (addrootdialog method)": [[187, "sdynpy.modal.sdynpy_smac.AddRootDialog.update_range_selectors"]], "alternate (autofittypes attribute)": [[188, "sdynpy.modal.sdynpy_smac.AutoFitTypes.ALTERNATE"]], "autofittypes (class in sdynpy.modal.sdynpy_smac)": [[188, "sdynpy.modal.sdynpy_smac.AutoFitTypes"]], "paraboloid (autofittypes attribute)": [[188, "sdynpy.modal.sdynpy_smac.AutoFitTypes.PARABOLOID"]], "__init__() (autofittypes method)": [[188, "sdynpy.modal.sdynpy_smac.AutoFitTypes.__init__"]], "convergenceexception": [[189, "sdynpy.modal.sdynpy_smac.ConvergenceException"]], "smac (class in sdynpy.modal.sdynpy_smac)": [[190, "sdynpy.modal.sdynpy_smac.SMAC"]], "__init__() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.__init__"]], "angular_frequencies (smac property)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.angular_frequencies"]], "autofit_root_alternate() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.autofit_root_alternate"]], "autofit_root_paraboloid() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.autofit_root_paraboloid"]], "autofit_roots() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.autofit_roots"]], "compute_correlation_matrix() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.compute_correlation_matrix"]], "compute_initial_rootlist() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.compute_initial_rootlist"]], "compute_pseudoinverse() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.compute_pseudoinverse"]], "compute_residues() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.compute_residues"]], "compute_shapes() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.compute_shapes"]], "find_peaks() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.find_peaks"]], "fit_damping() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.fit_damping"]], "fit_frequency() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.fit_frequency"]], "fit_paraboloid() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.fit_paraboloid"]], "frequencies (smac property)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.frequencies"]], "frequency_spacing (smac property)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.frequency_spacing"]], "frf_sdof_complex() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.frf_sdof_complex"]], "frf_sdof_real() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.frf_sdof_real"]], "get_num_roots() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.get_num_roots"]], "reference_coordinates (smac property)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.reference_coordinates"]], "save() (smac method)": [[190, "sdynpy.modal.sdynpy_smac.SMAC.save"]], "smac_gui (class in sdynpy.modal.sdynpy_smac)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI"]], "__init__() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.__init__"]], "add_initial_root() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.add_initial_root"]], "add_root() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.add_root"]], "autofit_roots() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.autofit_roots"]], "compute_correlation_matrix() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.compute_correlation_matrix"]], "compute_pseudoinverse() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.compute_pseudoinverse"]], "compute_shapes() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.compute_shapes"]], "confirm_initial_roots_for_autofit() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.confirm_initial_roots_for_autofit"]], "connect_callbacks() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.connect_callbacks"]], "delete_initial_roots() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.delete_initial_roots"]], "delete_roots() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.delete_roots"]], "export_mode_table() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.export_mode_table"]], "load_geometry() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.load_geometry"]], "load_shapes() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.load_shapes"]], "paint_markers() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.paint_markers"]], "plot_mac() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.plot_mac"]], "plot_shapes() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.plot_shapes"]], "refind_peaks() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.refind_peaks"]], "save_shapes() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.save_shapes"]], "update_coefficient_and_refind() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_coefficient_and_refind"]], "update_crosshairs() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_crosshairs"]], "update_frequency_line_label() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_frequency_line_label"]], "update_initial_rootlist_tab() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_initial_rootlist_tab"]], "update_rootlist_table() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_rootlist_table"]], "update_selector_and_refind() (smac_gui method)": [[191, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_selector_and_refind"]], "correlation_coefficient() (in module sdynpy.modal.sdynpy_smac)": [[192, "sdynpy.modal.sdynpy_smac.correlation_coefficient"]], "sdynpy.signal_processing": [[193, "module-sdynpy.signal_processing"]], "sdynpy.signal_processing.sdynpy_camera": [[194, "module-sdynpy.signal_processing.sdynpy_camera"]], "calibration_linear_estimate() (in module sdynpy.signal_processing.sdynpy_camera)": [[195, "sdynpy.signal_processing.sdynpy_camera.calibration_linear_estimate"]], "camera_derivative_matrix() (in module sdynpy.signal_processing.sdynpy_camera)": [[196, "sdynpy.signal_processing.sdynpy_camera.camera_derivative_matrix"]], "camera_matrix_from_image() (in module sdynpy.signal_processing.sdynpy_camera)": [[197, "sdynpy.signal_processing.sdynpy_camera.camera_matrix_from_image"]], "compute_pixel_displacement() (in module sdynpy.signal_processing.sdynpy_camera)": [[198, "sdynpy.signal_processing.sdynpy_camera.compute_pixel_displacement"]], "compute_pixel_position() (in module sdynpy.signal_processing.sdynpy_camera)": [[199, "sdynpy.signal_processing.sdynpy_camera.compute_pixel_position"]], "decomposep() (in module sdynpy.signal_processing.sdynpy_camera)": [[200, "sdynpy.signal_processing.sdynpy_camera.decomposeP"]], "distort_points() (in module sdynpy.signal_processing.sdynpy_camera)": [[201, "sdynpy.signal_processing.sdynpy_camera.distort_points"]], "homogeneous_coordinates() (in module sdynpy.signal_processing.sdynpy_camera)": [[202, "sdynpy.signal_processing.sdynpy_camera.homogeneous_coordinates"]], "optimize_calibration() (in module sdynpy.signal_processing.sdynpy_camera)": [[203, "sdynpy.signal_processing.sdynpy_camera.optimize_calibration"]], "point_on_pixel() (in module sdynpy.signal_processing.sdynpy_camera)": [[204, "sdynpy.signal_processing.sdynpy_camera.point_on_pixel"]], "reconstruct_scene_from_calibration_parameters() (in module sdynpy.signal_processing.sdynpy_camera)": [[205, "sdynpy.signal_processing.sdynpy_camera.reconstruct_scene_from_calibration_parameters"]], "unhomogeneous_coordinates() (in module sdynpy.signal_processing.sdynpy_camera)": [[206, "sdynpy.signal_processing.sdynpy_camera.unhomogeneous_coordinates"]], "sdynpy.signal_processing.sdynpy_complex": [[207, "module-sdynpy.signal_processing.sdynpy_complex"]], "collapse_complex_to_real() (in module sdynpy.signal_processing.sdynpy_complex)": [[208, "sdynpy.signal_processing.sdynpy_complex.collapse_complex_to_real"]], "sdynpy.signal_processing.sdynpy_correlation": [[209, "module-sdynpy.signal_processing.sdynpy_correlation"]], "frac() (in module sdynpy.signal_processing.sdynpy_correlation)": [[210, "sdynpy.signal_processing.sdynpy_correlation.frac"]], "mac() (in module sdynpy.signal_processing.sdynpy_correlation)": [[211, "sdynpy.signal_processing.sdynpy_correlation.mac"]], "matrix_plot() (in module sdynpy.signal_processing.sdynpy_correlation)": [[212, "sdynpy.signal_processing.sdynpy_correlation.matrix_plot"]], "msf() (in module sdynpy.signal_processing.sdynpy_correlation)": [[213, "sdynpy.signal_processing.sdynpy_correlation.msf"]], "orthog() (in module sdynpy.signal_processing.sdynpy_correlation)": [[214, "sdynpy.signal_processing.sdynpy_correlation.orthog"]], "trac() (in module sdynpy.signal_processing.sdynpy_correlation)": [[215, "sdynpy.signal_processing.sdynpy_correlation.trac"]], "sdynpy.signal_processing.sdynpy_cpsd": [[216, "module-sdynpy.signal_processing.sdynpy_cpsd"]], "cpsd() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[217, "sdynpy.signal_processing.sdynpy_cpsd.cpsd"]], "cpsd_autospectra() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[218, "sdynpy.signal_processing.sdynpy_cpsd.cpsd_autospectra"]], "cpsd_coherence() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[219, "sdynpy.signal_processing.sdynpy_cpsd.cpsd_coherence"]], "cpsd_from_coh_phs() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[220, "sdynpy.signal_processing.sdynpy_cpsd.cpsd_from_coh_phs"]], "cpsd_phase() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[221, "sdynpy.signal_processing.sdynpy_cpsd.cpsd_phase"]], "cpsd_to_time_history() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[222, "sdynpy.signal_processing.sdynpy_cpsd.cpsd_to_time_history"]], "db_pow() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[223, "sdynpy.signal_processing.sdynpy_cpsd.dB_pow"]], "match_coherence_phase() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[224, "sdynpy.signal_processing.sdynpy_cpsd.match_coherence_phase"]], "plot_asds() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[225, "sdynpy.signal_processing.sdynpy_cpsd.plot_asds"]], "plot_cpsd_error() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[226, "sdynpy.signal_processing.sdynpy_cpsd.plot_cpsd_error"]], "rms() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[227, "sdynpy.signal_processing.sdynpy_cpsd.rms"]], "rms_csd() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[228, "sdynpy.signal_processing.sdynpy_cpsd.rms_csd"]], "shaped_psd() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[229, "sdynpy.signal_processing.sdynpy_cpsd.shaped_psd"]], "trace() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[230, "sdynpy.signal_processing.sdynpy_cpsd.trace"]], "sdynpy.signal_processing.sdynpy_frf": [[231, "module-sdynpy.signal_processing.sdynpy_frf"]], "delay_signal() (in module sdynpy.signal_processing.sdynpy_frf)": [[232, "sdynpy.signal_processing.sdynpy_frf.delay_signal"]], "fft2frf() (in module sdynpy.signal_processing.sdynpy_frf)": [[233, "sdynpy.signal_processing.sdynpy_frf.fft2frf"]], "modes2frf() (in module sdynpy.signal_processing.sdynpy_frf)": [[234, "sdynpy.signal_processing.sdynpy_frf.modes2frf"]], "plot() (in module sdynpy.signal_processing.sdynpy_frf)": [[235, "sdynpy.signal_processing.sdynpy_frf.plot"]], "sysmat2frf() (in module sdynpy.signal_processing.sdynpy_frf)": [[236, "sdynpy.signal_processing.sdynpy_frf.sysmat2frf"]], "timedata2frf() (in module sdynpy.signal_processing.sdynpy_frf)": [[237, "sdynpy.signal_processing.sdynpy_frf.timedata2frf"]], "sdynpy.signal_processing.sdynpy_generator": [[238, "module-sdynpy.signal_processing.sdynpy_generator"]], "burst_random() (in module sdynpy.signal_processing.sdynpy_generator)": [[239, "sdynpy.signal_processing.sdynpy_generator.burst_random"]], "chirp() (in module sdynpy.signal_processing.sdynpy_generator)": [[240, "sdynpy.signal_processing.sdynpy_generator.chirp"]], "pseudorandom() (in module sdynpy.signal_processing.sdynpy_generator)": [[241, "sdynpy.signal_processing.sdynpy_generator.pseudorandom"]], "pulse() (in module sdynpy.signal_processing.sdynpy_generator)": [[242, "sdynpy.signal_processing.sdynpy_generator.pulse"]], "ramp_envelope() (in module sdynpy.signal_processing.sdynpy_generator)": [[243, "sdynpy.signal_processing.sdynpy_generator.ramp_envelope"]], "random() (in module sdynpy.signal_processing.sdynpy_generator)": [[244, "sdynpy.signal_processing.sdynpy_generator.random"]], "sine() (in module sdynpy.signal_processing.sdynpy_generator)": [[245, "sdynpy.signal_processing.sdynpy_generator.sine"]], "sdynpy.signal_processing.sdynpy_geometry_fitting": [[246, "module-sdynpy.signal_processing.sdynpy_geometry_fitting"]], "cone_error_fn_fixed_angle() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[247, "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_fixed_angle"]], "cone_error_fn_free_angle() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[248, "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_free_angle"]], "cone_fit() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[249, "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_fit"]], "create_cone() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[250, "sdynpy.signal_processing.sdynpy_geometry_fitting.create_cone"]], "cylinder_fit() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[251, "sdynpy.signal_processing.sdynpy_geometry_fitting.cylinder_fit"]], "distance_point_line() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[252, "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_line"]], "distance_point_plane() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[253, "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_plane"]], "fit_cone_fixed_angle() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[254, "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cone_fixed_angle"]], "fit_cylinder() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[255, "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cylinder"]], "fit_line_point_cloud() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[256, "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_line_point_cloud"]], "sdynpy.signal_processing.sdynpy_harmonic": [[257, "module-sdynpy.signal_processing.sdynpy_harmonic"]], "harmonic_mag_phase() (in module sdynpy.signal_processing.sdynpy_harmonic)": [[258, "sdynpy.signal_processing.sdynpy_harmonic.harmonic_mag_phase"]], "sdynpy.signal_processing.sdynpy_integration": [[259, "module-sdynpy.signal_processing.sdynpy_integration"]], "mck_incomplete_to_statespace() (in module sdynpy.signal_processing.sdynpy_integration)": [[260, "sdynpy.signal_processing.sdynpy_integration.MCK_incomplete_to_StateSpace"]], "mck_to_statespace() (in module sdynpy.signal_processing.sdynpy_integration)": [[261, "sdynpy.signal_processing.sdynpy_integration.MCK_to_StateSpace"]], "frequency_domain_differentiation() (in module sdynpy.signal_processing.sdynpy_integration)": [[262, "sdynpy.signal_processing.sdynpy_integration.frequency_domain_differentiation"]], "integrate_mck() (in module sdynpy.signal_processing.sdynpy_integration)": [[263, "sdynpy.signal_processing.sdynpy_integration.integrate_MCK"]], "integrate_modes() (in module sdynpy.signal_processing.sdynpy_integration)": [[264, "sdynpy.signal_processing.sdynpy_integration.integrate_modes"]], "modal_parameters_to_mck() (in module sdynpy.signal_processing.sdynpy_integration)": [[265, "sdynpy.signal_processing.sdynpy_integration.modal_parameters_to_MCK"]], "sdynpy.signal_processing.sdynpy_rotation": [[266, "module-sdynpy.signal_processing.sdynpy_rotation"]], "r() (in module sdynpy.signal_processing.sdynpy_rotation)": [[267, "sdynpy.signal_processing.sdynpy_rotation.R"]], "cross_mat() (in module sdynpy.signal_processing.sdynpy_rotation)": [[268, "sdynpy.signal_processing.sdynpy_rotation.cross_mat"]], "cross_mat_vectorized() (in module sdynpy.signal_processing.sdynpy_rotation)": [[269, "sdynpy.signal_processing.sdynpy_rotation.cross_mat_vectorized"]], "lstsq_rigid_transform() (in module sdynpy.signal_processing.sdynpy_rotation)": [[270, "sdynpy.signal_processing.sdynpy_rotation.lstsq_rigid_transform"]], "matrix_to_rodrigues() (in module sdynpy.signal_processing.sdynpy_rotation)": [[271, "sdynpy.signal_processing.sdynpy_rotation.matrix_to_rodrigues"]], "quaternion_to_rotation_matrix() (in module sdynpy.signal_processing.sdynpy_rotation)": [[272, "sdynpy.signal_processing.sdynpy_rotation.quaternion_to_rotation_matrix"]], "rodrigues_to_matrix() (in module sdynpy.signal_processing.sdynpy_rotation)": [[273, "sdynpy.signal_processing.sdynpy_rotation.rodrigues_to_matrix"]]}})