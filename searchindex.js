Search.setIndex({"docnames": ["_autosummary/sdynpy", "_autosummary/sdynpy.core", "_autosummary/sdynpy.core.sdynpy_array", "_autosummary/sdynpy.core.sdynpy_array.SdynpyArray", "_autosummary/sdynpy.core.sdynpy_colors", "_autosummary/sdynpy.core.sdynpy_coordinate", "_autosummary/sdynpy.core.sdynpy_coordinate.CoordinateArray", "_autosummary/sdynpy.core.sdynpy_coordinate.coordinate_array", "_autosummary/sdynpy.core.sdynpy_coordinate.create_coordinate_string", "_autosummary/sdynpy.core.sdynpy_coordinate.from_matlab_cellstr", "_autosummary/sdynpy.core.sdynpy_coordinate.from_nodelist", "_autosummary/sdynpy.core.sdynpy_coordinate.outer_product", "_autosummary/sdynpy.core.sdynpy_coordinate.parse_coordinate_string", "_autosummary/sdynpy.core.sdynpy_data", "_autosummary/sdynpy.core.sdynpy_data.AbscissaIndexExtractor", "_autosummary/sdynpy.core.sdynpy_data.AbscissaValueExtractor", "_autosummary/sdynpy.core.sdynpy_data.CPSDPlot", "_autosummary/sdynpy.core.sdynpy_data.CoherenceArray", "_autosummary/sdynpy.core.sdynpy_data.ComplexType", "_autosummary/sdynpy.core.sdynpy_data.CorrelationArray", "_autosummary/sdynpy.core.sdynpy_data.DecayedSineTable", "_autosummary/sdynpy.core.sdynpy_data.FunctionTypes", "_autosummary/sdynpy.core.sdynpy_data.GUIPlot", "_autosummary/sdynpy.core.sdynpy_data.ImpulseResponseFunctionArray", "_autosummary/sdynpy.core.sdynpy_data.MPLCanvas", "_autosummary/sdynpy.core.sdynpy_data.MPLMultiCanvas", "_autosummary/sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray", "_autosummary/sdynpy.core.sdynpy_data.MultipleCoherenceArray", "_autosummary/sdynpy.core.sdynpy_data.NDDataArray", "_autosummary/sdynpy.core.sdynpy_data.PowerSpectralDensityArray", "_autosummary/sdynpy.core.sdynpy_data.PowerSpectrumArray", "_autosummary/sdynpy.core.sdynpy_data.ShockResponseSpectrumArray", "_autosummary/sdynpy.core.sdynpy_data.SpecificDataType", "_autosummary/sdynpy.core.sdynpy_data.SpectrumArray", "_autosummary/sdynpy.core.sdynpy_data.TimeHistoryArray", "_autosummary/sdynpy.core.sdynpy_data.TransferFunctionArray", "_autosummary/sdynpy.core.sdynpy_data.TransmissibilityArray", "_autosummary/sdynpy.core.sdynpy_data.TypeQual", "_autosummary/sdynpy.core.sdynpy_data.data_array", "_autosummary/sdynpy.core.sdynpy_data.decayed_sine_table", "_autosummary/sdynpy.core.sdynpy_data.frf_from_time_data", "_autosummary/sdynpy.core.sdynpy_data.from_imat_struct", "_autosummary/sdynpy.core.sdynpy_data.from_uff", "_autosummary/sdynpy.core.sdynpy_data.from_unv", "_autosummary/sdynpy.core.sdynpy_data.join", "_autosummary/sdynpy.core.sdynpy_data.load", "_autosummary/sdynpy.core.sdynpy_geometry", "_autosummary/sdynpy.core.sdynpy_geometry.CoordinateSystemArray", "_autosummary/sdynpy.core.sdynpy_geometry.DeflectionShapePlotter", "_autosummary/sdynpy.core.sdynpy_geometry.ElementArray", "_autosummary/sdynpy.core.sdynpy_geometry.Geometry", "_autosummary/sdynpy.core.sdynpy_geometry.GeometryPlotter", "_autosummary/sdynpy.core.sdynpy_geometry.NodeArray", "_autosummary/sdynpy.core.sdynpy_geometry.ShapePlotter", "_autosummary/sdynpy.core.sdynpy_geometry.TracelineArray", "_autosummary/sdynpy.core.sdynpy_geometry.TransientPlotter", "_autosummary/sdynpy.core.sdynpy_geometry.coordinate_system_array", "_autosummary/sdynpy.core.sdynpy_geometry.element_array", "_autosummary/sdynpy.core.sdynpy_geometry.from_exodus", "_autosummary/sdynpy.core.sdynpy_geometry.from_imat_struct", "_autosummary/sdynpy.core.sdynpy_geometry.from_uff", "_autosummary/sdynpy.core.sdynpy_geometry.from_unv", "_autosummary/sdynpy.core.sdynpy_geometry.global_coord", "_autosummary/sdynpy.core.sdynpy_geometry.global_deflection", "_autosummary/sdynpy.core.sdynpy_geometry.id_map", "_autosummary/sdynpy.core.sdynpy_geometry.load", "_autosummary/sdynpy.core.sdynpy_geometry.local_coord", "_autosummary/sdynpy.core.sdynpy_geometry.node_array", "_autosummary/sdynpy.core.sdynpy_geometry.split_list", "_autosummary/sdynpy.core.sdynpy_geometry.traceline_array", "_autosummary/sdynpy.core.sdynpy_matrix", "_autosummary/sdynpy.core.sdynpy_matrix.Matrix", "_autosummary/sdynpy.core.sdynpy_matrix.matrix", "_autosummary/sdynpy.core.sdynpy_shape", "_autosummary/sdynpy.core.sdynpy_shape.ShapeArray", "_autosummary/sdynpy.core.sdynpy_shape.concatenate_dofs", "_autosummary/sdynpy.core.sdynpy_shape.from_exodus", "_autosummary/sdynpy.core.sdynpy_shape.from_imat_struct", "_autosummary/sdynpy.core.sdynpy_shape.from_unv", "_autosummary/sdynpy.core.sdynpy_shape.mac", "_autosummary/sdynpy.core.sdynpy_shape.overlay_shapes", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_check", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_error", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_fix_node_orientation", "_autosummary/sdynpy.core.sdynpy_shape.shape_alignment", "_autosummary/sdynpy.core.sdynpy_shape.shape_array", "_autosummary/sdynpy.core.sdynpy_shape.shape_comparison_table", "_autosummary/sdynpy.core.sdynpy_system", "_autosummary/sdynpy.core.sdynpy_system.System", "_autosummary/sdynpy.core.sdynpy_system.substructure_by_position", "_autosummary/sdynpy.demo", "_autosummary/sdynpy.demo.beam_airplane", "_autosummary/sdynpy.demo.beam_airplane.create_models", "_autosummary/sdynpy.demo.beam_plate", "_autosummary/sdynpy.demo.beam_plate.create_models", "_autosummary/sdynpy.doc", "_autosummary/sdynpy.doc.sdynpy_latex", "_autosummary/sdynpy.doc.sdynpy_latex.create_latex_summary", "_autosummary/sdynpy.doc.sdynpy_ppt", "_autosummary/sdynpy.doc.sdynpy_ppt.add_geometry_overview_slide", "_autosummary/sdynpy.doc.sdynpy_ppt.add_section_header_slide", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_animation_slides", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_comparison_animation_slides", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_comparison_overview_slide", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_overview_slide", "_autosummary/sdynpy.doc.sdynpy_ppt.add_title_slide", "_autosummary/sdynpy.doc.sdynpy_ppt.create_summary_pptx", "_autosummary/sdynpy.doc.sdynpy_ppt.position_placeholder", "_autosummary/sdynpy.fem", "_autosummary/sdynpy.fem.sdynpy_beam", "_autosummary/sdynpy.fem.sdynpy_beam.beamkm", "_autosummary/sdynpy.fem.sdynpy_beam.beamkm_2d", "_autosummary/sdynpy.fem.sdynpy_beam.rect_beam_props", "_autosummary/sdynpy.fem.sdynpy_dof", "_autosummary/sdynpy.fem.sdynpy_dof.by_condition_number", "_autosummary/sdynpy.fem.sdynpy_dof.by_effective_independence", "_autosummary/sdynpy.fem.sdynpy_exodus", "_autosummary/sdynpy.fem.sdynpy_exodus.Exodus", "_autosummary/sdynpy.fem.sdynpy_exodus.ExodusError", "_autosummary/sdynpy.fem.sdynpy_exodus.ExodusInMemory", "_autosummary/sdynpy.fem.sdynpy_exodus.extract_sharp_edges", "_autosummary/sdynpy.fem.sdynpy_exodus.face_connectivity", "_autosummary/sdynpy.fem.sdynpy_exodus.mesh_triangulation_array", "_autosummary/sdynpy.fem.sdynpy_exodus.reduce_exodus_to_surfaces", "_autosummary/sdynpy.fem.sdynpy_exodus.subfield", "_autosummary/sdynpy.fem.sdynpy_shaker", "_autosummary/sdynpy.fem.sdynpy_shaker.Shaker4DoF", "_autosummary/sdynpy.fileio", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.create_synthetic_test", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_modal_data", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_random_spectral_data", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_rattlesnake_output", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_system_id_data", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_transient_control_data", "_autosummary/sdynpy.fileio.sdynpy_tshaker", "_autosummary/sdynpy.fileio.sdynpy_tshaker.read_mat_random", "_autosummary/sdynpy.fileio.sdynpy_tshaker.read_mat_shock", "_autosummary/sdynpy.fileio.sdynpy_tshaker.read_mat_time_history", "_autosummary/sdynpy.fileio.sdynpy_tshaker.read_tdms", "_autosummary/sdynpy.fileio.sdynpy_uff", "_autosummary/sdynpy.fileio.sdynpy_uff.UFFReadError", "_autosummary/sdynpy.fileio.sdynpy_uff.parse_uff_line", "_autosummary/sdynpy.fileio.sdynpy_uff.parse_uff_lines", "_autosummary/sdynpy.fileio.sdynpy_uff.readuff", "_autosummary/sdynpy.fileio.sdynpy_uff.readunv", "_autosummary/sdynpy.fileio.sdynpy_uff.write_uff_line", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.is_abscissa_even", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.is_abscissa_even", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.read", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.read", "_autosummary/sdynpy.fileio.sdynpy_vic", "_autosummary/sdynpy.fileio.sdynpy_vic.camera_matrix_from_vic_parameters", "_autosummary/sdynpy.fileio.sdynpy_vic.extract_vic_cal_parameters", "_autosummary/sdynpy.fileio.sdynpy_vic.get_vic_camera_parameters", "_autosummary/sdynpy.fileio.sdynpy_vic.matrix_from_bryant_angles", "_autosummary/sdynpy.fileio.sdynpy_vic.read_vic3D_mat_files", "_autosummary/sdynpy.fileio.sdynpy_vic.vic_angles_from_matrix", "_autosummary/sdynpy.modal", "_autosummary/sdynpy.modal.sdynpy_ccmif", "_autosummary/sdynpy.modal.sdynpy_ccmif.ColoredCMIF", "_autosummary/sdynpy.modal.sdynpy_ccmif.PropertiesDialog", "_autosummary/sdynpy.modal.sdynpy_modeshape", "_autosummary/sdynpy.modal.sdynpy_modeshape.ShapeSelection", "_autosummary/sdynpy.modal.sdynpy_modeshape.compute_residues", "_autosummary/sdynpy.modal.sdynpy_modeshape.compute_shapes", "_autosummary/sdynpy.modal.sdynpy_modeshape.compute_shapes_multireference", "_autosummary/sdynpy.modal.sdynpy_polypy", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy_GUI", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy_Stability", "_autosummary/sdynpy.modal.sdynpy_signal_processing_gui", "_autosummary/sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI", "_autosummary/sdynpy.modal.sdynpy_smac", "_autosummary/sdynpy.modal.sdynpy_smac.AddRootDialog", "_autosummary/sdynpy.modal.sdynpy_smac.AutoFitTypes", "_autosummary/sdynpy.modal.sdynpy_smac.ConvergenceException", "_autosummary/sdynpy.modal.sdynpy_smac.SMAC", "_autosummary/sdynpy.modal.sdynpy_smac.SMAC_GUI", "_autosummary/sdynpy.modal.sdynpy_smac.correlation_coefficient", "_autosummary/sdynpy.signal_processing", "_autosummary/sdynpy.signal_processing.sdynpy_camera", "_autosummary/sdynpy.signal_processing.sdynpy_camera.calibration_linear_estimate", "_autosummary/sdynpy.signal_processing.sdynpy_camera.camera_derivative_matrix", "_autosummary/sdynpy.signal_processing.sdynpy_camera.camera_matrix_from_image", "_autosummary/sdynpy.signal_processing.sdynpy_camera.compute_pixel_displacement", "_autosummary/sdynpy.signal_processing.sdynpy_camera.compute_pixel_position", "_autosummary/sdynpy.signal_processing.sdynpy_camera.decomposeP", "_autosummary/sdynpy.signal_processing.sdynpy_camera.distort_points", "_autosummary/sdynpy.signal_processing.sdynpy_camera.homogeneous_coordinates", "_autosummary/sdynpy.signal_processing.sdynpy_camera.optimize_calibration", "_autosummary/sdynpy.signal_processing.sdynpy_camera.point_on_pixel", "_autosummary/sdynpy.signal_processing.sdynpy_camera.reconstruct_scene_from_calibration_parameters", "_autosummary/sdynpy.signal_processing.sdynpy_camera.unhomogeneous_coordinates", "_autosummary/sdynpy.signal_processing.sdynpy_complex", "_autosummary/sdynpy.signal_processing.sdynpy_complex.collapse_complex_to_real", "_autosummary/sdynpy.signal_processing.sdynpy_correlation", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.frac", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.mac", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.matrix_plot", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.msf", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.orthog", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.trac", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_autospectra", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_coherence", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_from_coh_phs", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_phase", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_to_time_history", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.dB_pow", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.db2scale", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.match_coherence_phase", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.plot_asds", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.plot_cpsd_error", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.rms", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.rms_csd", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.shaped_psd", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.trace", "_autosummary/sdynpy.signal_processing.sdynpy_frf", "_autosummary/sdynpy.signal_processing.sdynpy_frf.delay_signal", "_autosummary/sdynpy.signal_processing.sdynpy_frf.fft2frf", "_autosummary/sdynpy.signal_processing.sdynpy_frf.modes2frf", "_autosummary/sdynpy.signal_processing.sdynpy_frf.plot", "_autosummary/sdynpy.signal_processing.sdynpy_frf.sysmat2frf", "_autosummary/sdynpy.signal_processing.sdynpy_frf.timedata2frf", "_autosummary/sdynpy.signal_processing.sdynpy_frf_inverse", "_autosummary/sdynpy.signal_processing.sdynpy_frf_inverse.compute_tikhonov_modified_singular_values", "_autosummary/sdynpy.signal_processing.sdynpy_frf_inverse.frf_inverse", "_autosummary/sdynpy.signal_processing.sdynpy_frf_inverse.pinv_by_tikhonov", "_autosummary/sdynpy.signal_processing.sdynpy_frf_inverse.pinv_by_truncation", "_autosummary/sdynpy.signal_processing.sdynpy_generator", "_autosummary/sdynpy.signal_processing.sdynpy_generator.burst_random", "_autosummary/sdynpy.signal_processing.sdynpy_generator.chirp", "_autosummary/sdynpy.signal_processing.sdynpy_generator.pseudorandom", "_autosummary/sdynpy.signal_processing.sdynpy_generator.pulse", "_autosummary/sdynpy.signal_processing.sdynpy_generator.ramp_envelope", "_autosummary/sdynpy.signal_processing.sdynpy_generator.random", "_autosummary/sdynpy.signal_processing.sdynpy_generator.sine", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_fixed_angle", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_free_angle", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_fit", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.create_cone", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cylinder_fit", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_line", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_plane", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cone_fixed_angle", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cylinder", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_line_point_cloud", "_autosummary/sdynpy.signal_processing.sdynpy_harmonic", "_autosummary/sdynpy.signal_processing.sdynpy_harmonic.harmonic_mag_phase", "_autosummary/sdynpy.signal_processing.sdynpy_integration", "_autosummary/sdynpy.signal_processing.sdynpy_integration.MCK_incomplete_to_StateSpace", "_autosummary/sdynpy.signal_processing.sdynpy_integration.MCK_to_StateSpace", "_autosummary/sdynpy.signal_processing.sdynpy_integration.frequency_domain_differentiation", "_autosummary/sdynpy.signal_processing.sdynpy_integration.integrate_MCK", "_autosummary/sdynpy.signal_processing.sdynpy_integration.integrate_modes", "_autosummary/sdynpy.signal_processing.sdynpy_integration.modal_parameters_to_MCK", "_autosummary/sdynpy.signal_processing.sdynpy_rotation", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.R", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.cross_mat", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.cross_mat_vectorized", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.lstsq_rigid_transform", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.matrix_to_rodrigues", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.quaternion_to_rotation_matrix", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.rodrigues_to_matrix", "_autosummary/sdynpy.signal_processing.sdynpy_srs", "_autosummary/sdynpy.signal_processing.sdynpy_srs.loginterp", "_autosummary/sdynpy.signal_processing.sdynpy_srs.octspace", "_autosummary/sdynpy.signal_processing.sdynpy_srs.optimization_callback", "_autosummary/sdynpy.signal_processing.sdynpy_srs.optimization_error_function", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sdof_filter", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sdof_free_decay_peak_response", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sdof_ramp_invariant_filter_weights", "_autosummary/sdynpy.signal_processing.sdynpy_srs.srs", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_compensating_pulse_parameters", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_displacement_velocity", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_minimize", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_reconstruction", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_reconstruction_with_compensation", "bibliography", "example_problems/airplane_modal_test", "example_problems/craig_bampton_substructuring", "example_problems/mimo_random_vibration_control", "example_problems/model_reduction/model_reduction", "example_problems/rattlesnake_demonstration", "example_problems/transient_fem_analysis", "example_problems/transmission_simulator", "examples", "index", "modal_tutorials", "modal_tutorials/Modal_01_What_is_Modal_Analysis/Modal_01_What_is_Modal_Analysis", "modal_tutorials/Modal_02_Basics_of_Vibrations/Modal_02_Basics_of_Vibrations", "modal_tutorials/Modal_03_Multi_DoF_Vibrations/Modal_03_Multi_DoF_Vibrations", "modal_tutorials/Modal_04_Modal_Analysis/Modal_04_Modal_Analysis", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05_Experimental_Modal_Analysis", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05a_Computing_FRF_from_Time_Data", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05b_Types_of_Excitation", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05c_Selecting_Response_and_Measurement_DoFs", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05d_Data_Quality_Checks", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05e_Fitting_Modes_to_FRF", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05f_Comparing_Test_and_Analysis", "modules", "sdynpy_showcase", "usage"], "filenames": ["_autosummary/sdynpy.rst", "_autosummary/sdynpy.core.rst", "_autosummary/sdynpy.core.sdynpy_array.rst", "_autosummary/sdynpy.core.sdynpy_array.SdynpyArray.rst", "_autosummary/sdynpy.core.sdynpy_colors.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.CoordinateArray.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.coordinate_array.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.create_coordinate_string.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.from_matlab_cellstr.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.from_nodelist.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.outer_product.rst", "_autosummary/sdynpy.core.sdynpy_coordinate.parse_coordinate_string.rst", "_autosummary/sdynpy.core.sdynpy_data.rst", "_autosummary/sdynpy.core.sdynpy_data.AbscissaIndexExtractor.rst", "_autosummary/sdynpy.core.sdynpy_data.AbscissaValueExtractor.rst", "_autosummary/sdynpy.core.sdynpy_data.CPSDPlot.rst", "_autosummary/sdynpy.core.sdynpy_data.CoherenceArray.rst", "_autosummary/sdynpy.core.sdynpy_data.ComplexType.rst", "_autosummary/sdynpy.core.sdynpy_data.CorrelationArray.rst", "_autosummary/sdynpy.core.sdynpy_data.DecayedSineTable.rst", "_autosummary/sdynpy.core.sdynpy_data.FunctionTypes.rst", "_autosummary/sdynpy.core.sdynpy_data.GUIPlot.rst", "_autosummary/sdynpy.core.sdynpy_data.ImpulseResponseFunctionArray.rst", "_autosummary/sdynpy.core.sdynpy_data.MPLCanvas.rst", "_autosummary/sdynpy.core.sdynpy_data.MPLMultiCanvas.rst", "_autosummary/sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray.rst", "_autosummary/sdynpy.core.sdynpy_data.MultipleCoherenceArray.rst", "_autosummary/sdynpy.core.sdynpy_data.NDDataArray.rst", "_autosummary/sdynpy.core.sdynpy_data.PowerSpectralDensityArray.rst", "_autosummary/sdynpy.core.sdynpy_data.PowerSpectrumArray.rst", "_autosummary/sdynpy.core.sdynpy_data.ShockResponseSpectrumArray.rst", "_autosummary/sdynpy.core.sdynpy_data.SpecificDataType.rst", "_autosummary/sdynpy.core.sdynpy_data.SpectrumArray.rst", "_autosummary/sdynpy.core.sdynpy_data.TimeHistoryArray.rst", "_autosummary/sdynpy.core.sdynpy_data.TransferFunctionArray.rst", "_autosummary/sdynpy.core.sdynpy_data.TransmissibilityArray.rst", "_autosummary/sdynpy.core.sdynpy_data.TypeQual.rst", "_autosummary/sdynpy.core.sdynpy_data.data_array.rst", "_autosummary/sdynpy.core.sdynpy_data.decayed_sine_table.rst", "_autosummary/sdynpy.core.sdynpy_data.frf_from_time_data.rst", "_autosummary/sdynpy.core.sdynpy_data.from_imat_struct.rst", "_autosummary/sdynpy.core.sdynpy_data.from_uff.rst", "_autosummary/sdynpy.core.sdynpy_data.from_unv.rst", "_autosummary/sdynpy.core.sdynpy_data.join.rst", "_autosummary/sdynpy.core.sdynpy_data.load.rst", "_autosummary/sdynpy.core.sdynpy_geometry.rst", "_autosummary/sdynpy.core.sdynpy_geometry.CoordinateSystemArray.rst", "_autosummary/sdynpy.core.sdynpy_geometry.DeflectionShapePlotter.rst", "_autosummary/sdynpy.core.sdynpy_geometry.ElementArray.rst", "_autosummary/sdynpy.core.sdynpy_geometry.Geometry.rst", "_autosummary/sdynpy.core.sdynpy_geometry.GeometryPlotter.rst", "_autosummary/sdynpy.core.sdynpy_geometry.NodeArray.rst", "_autosummary/sdynpy.core.sdynpy_geometry.ShapePlotter.rst", "_autosummary/sdynpy.core.sdynpy_geometry.TracelineArray.rst", "_autosummary/sdynpy.core.sdynpy_geometry.TransientPlotter.rst", "_autosummary/sdynpy.core.sdynpy_geometry.coordinate_system_array.rst", "_autosummary/sdynpy.core.sdynpy_geometry.element_array.rst", "_autosummary/sdynpy.core.sdynpy_geometry.from_exodus.rst", "_autosummary/sdynpy.core.sdynpy_geometry.from_imat_struct.rst", "_autosummary/sdynpy.core.sdynpy_geometry.from_uff.rst", "_autosummary/sdynpy.core.sdynpy_geometry.from_unv.rst", "_autosummary/sdynpy.core.sdynpy_geometry.global_coord.rst", "_autosummary/sdynpy.core.sdynpy_geometry.global_deflection.rst", "_autosummary/sdynpy.core.sdynpy_geometry.id_map.rst", "_autosummary/sdynpy.core.sdynpy_geometry.load.rst", "_autosummary/sdynpy.core.sdynpy_geometry.local_coord.rst", "_autosummary/sdynpy.core.sdynpy_geometry.node_array.rst", "_autosummary/sdynpy.core.sdynpy_geometry.split_list.rst", "_autosummary/sdynpy.core.sdynpy_geometry.traceline_array.rst", "_autosummary/sdynpy.core.sdynpy_matrix.rst", "_autosummary/sdynpy.core.sdynpy_matrix.Matrix.rst", "_autosummary/sdynpy.core.sdynpy_matrix.matrix.rst", "_autosummary/sdynpy.core.sdynpy_shape.rst", "_autosummary/sdynpy.core.sdynpy_shape.ShapeArray.rst", "_autosummary/sdynpy.core.sdynpy_shape.concatenate_dofs.rst", "_autosummary/sdynpy.core.sdynpy_shape.from_exodus.rst", "_autosummary/sdynpy.core.sdynpy_shape.from_imat_struct.rst", "_autosummary/sdynpy.core.sdynpy_shape.from_unv.rst", "_autosummary/sdynpy.core.sdynpy_shape.mac.rst", "_autosummary/sdynpy.core.sdynpy_shape.overlay_shapes.rst", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_check.rst", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_error.rst", "_autosummary/sdynpy.core.sdynpy_shape.rigid_body_fix_node_orientation.rst", "_autosummary/sdynpy.core.sdynpy_shape.shape_alignment.rst", "_autosummary/sdynpy.core.sdynpy_shape.shape_array.rst", "_autosummary/sdynpy.core.sdynpy_shape.shape_comparison_table.rst", "_autosummary/sdynpy.core.sdynpy_system.rst", "_autosummary/sdynpy.core.sdynpy_system.System.rst", "_autosummary/sdynpy.core.sdynpy_system.substructure_by_position.rst", "_autosummary/sdynpy.demo.rst", "_autosummary/sdynpy.demo.beam_airplane.rst", "_autosummary/sdynpy.demo.beam_airplane.create_models.rst", "_autosummary/sdynpy.demo.beam_plate.rst", "_autosummary/sdynpy.demo.beam_plate.create_models.rst", "_autosummary/sdynpy.doc.rst", "_autosummary/sdynpy.doc.sdynpy_latex.rst", "_autosummary/sdynpy.doc.sdynpy_latex.create_latex_summary.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_geometry_overview_slide.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_section_header_slide.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_animation_slides.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_comparison_animation_slides.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_comparison_overview_slide.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_shape_overview_slide.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.add_title_slide.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.create_summary_pptx.rst", "_autosummary/sdynpy.doc.sdynpy_ppt.position_placeholder.rst", "_autosummary/sdynpy.fem.rst", "_autosummary/sdynpy.fem.sdynpy_beam.rst", "_autosummary/sdynpy.fem.sdynpy_beam.beamkm.rst", "_autosummary/sdynpy.fem.sdynpy_beam.beamkm_2d.rst", "_autosummary/sdynpy.fem.sdynpy_beam.rect_beam_props.rst", "_autosummary/sdynpy.fem.sdynpy_dof.rst", "_autosummary/sdynpy.fem.sdynpy_dof.by_condition_number.rst", "_autosummary/sdynpy.fem.sdynpy_dof.by_effective_independence.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.Exodus.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.ExodusError.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.ExodusInMemory.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.extract_sharp_edges.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.face_connectivity.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.mesh_triangulation_array.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.reduce_exodus_to_surfaces.rst", "_autosummary/sdynpy.fem.sdynpy_exodus.subfield.rst", "_autosummary/sdynpy.fem.sdynpy_shaker.rst", "_autosummary/sdynpy.fem.sdynpy_shaker.Shaker4DoF.rst", "_autosummary/sdynpy.fileio.rst", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.rst", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.create_synthetic_test.rst", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_modal_data.rst", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_random_spectral_data.rst", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_rattlesnake_output.rst", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_system_id_data.rst", "_autosummary/sdynpy.fileio.sdynpy_rattlesnake.read_transient_control_data.rst", "_autosummary/sdynpy.fileio.sdynpy_tshaker.rst", "_autosummary/sdynpy.fileio.sdynpy_tshaker.read_mat_random.rst", "_autosummary/sdynpy.fileio.sdynpy_tshaker.read_mat_shock.rst", "_autosummary/sdynpy.fileio.sdynpy_tshaker.read_mat_time_history.rst", "_autosummary/sdynpy.fileio.sdynpy_tshaker.read_tdms.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.UFFReadError.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.parse_uff_line.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.parse_uff_lines.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.readuff.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.readunv.rst", "_autosummary/sdynpy.fileio.sdynpy_uff.write_uff_line.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.is_abscissa_even.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.is_abscissa_even.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.read.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82.rst", "_autosummary/sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.read.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.camera_matrix_from_vic_parameters.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.extract_vic_cal_parameters.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.get_vic_camera_parameters.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.matrix_from_bryant_angles.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.read_vic3D_mat_files.rst", "_autosummary/sdynpy.fileio.sdynpy_vic.vic_angles_from_matrix.rst", "_autosummary/sdynpy.modal.rst", "_autosummary/sdynpy.modal.sdynpy_ccmif.rst", "_autosummary/sdynpy.modal.sdynpy_ccmif.ColoredCMIF.rst", "_autosummary/sdynpy.modal.sdynpy_ccmif.PropertiesDialog.rst", "_autosummary/sdynpy.modal.sdynpy_modeshape.rst", "_autosummary/sdynpy.modal.sdynpy_modeshape.ShapeSelection.rst", "_autosummary/sdynpy.modal.sdynpy_modeshape.compute_residues.rst", "_autosummary/sdynpy.modal.sdynpy_modeshape.compute_shapes.rst", "_autosummary/sdynpy.modal.sdynpy_modeshape.compute_shapes_multireference.rst", "_autosummary/sdynpy.modal.sdynpy_polypy.rst", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy.rst", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy_GUI.rst", "_autosummary/sdynpy.modal.sdynpy_polypy.PolyPy_Stability.rst", "_autosummary/sdynpy.modal.sdynpy_signal_processing_gui.rst", "_autosummary/sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.rst", "_autosummary/sdynpy.modal.sdynpy_smac.rst", "_autosummary/sdynpy.modal.sdynpy_smac.AddRootDialog.rst", "_autosummary/sdynpy.modal.sdynpy_smac.AutoFitTypes.rst", "_autosummary/sdynpy.modal.sdynpy_smac.ConvergenceException.rst", "_autosummary/sdynpy.modal.sdynpy_smac.SMAC.rst", "_autosummary/sdynpy.modal.sdynpy_smac.SMAC_GUI.rst", "_autosummary/sdynpy.modal.sdynpy_smac.correlation_coefficient.rst", "_autosummary/sdynpy.signal_processing.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.calibration_linear_estimate.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.camera_derivative_matrix.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.camera_matrix_from_image.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.compute_pixel_displacement.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.compute_pixel_position.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.decomposeP.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.distort_points.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.homogeneous_coordinates.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.optimize_calibration.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.point_on_pixel.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.reconstruct_scene_from_calibration_parameters.rst", "_autosummary/sdynpy.signal_processing.sdynpy_camera.unhomogeneous_coordinates.rst", "_autosummary/sdynpy.signal_processing.sdynpy_complex.rst", "_autosummary/sdynpy.signal_processing.sdynpy_complex.collapse_complex_to_real.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.frac.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.mac.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.matrix_plot.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.msf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.orthog.rst", "_autosummary/sdynpy.signal_processing.sdynpy_correlation.trac.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_autospectra.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_coherence.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_from_coh_phs.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_phase.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.cpsd_to_time_history.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.dB_pow.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.db2scale.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.match_coherence_phase.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.plot_asds.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.plot_cpsd_error.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.rms.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.rms_csd.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.shaped_psd.rst", "_autosummary/sdynpy.signal_processing.sdynpy_cpsd.trace.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.delay_signal.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.fft2frf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.modes2frf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.plot.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.sysmat2frf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf.timedata2frf.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf_inverse.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf_inverse.compute_tikhonov_modified_singular_values.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf_inverse.frf_inverse.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf_inverse.pinv_by_tikhonov.rst", "_autosummary/sdynpy.signal_processing.sdynpy_frf_inverse.pinv_by_truncation.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.burst_random.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.chirp.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.pseudorandom.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.pulse.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.ramp_envelope.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.random.rst", "_autosummary/sdynpy.signal_processing.sdynpy_generator.sine.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_fixed_angle.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_free_angle.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cone_fit.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.create_cone.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.cylinder_fit.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_line.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_plane.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cone_fixed_angle.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cylinder.rst", "_autosummary/sdynpy.signal_processing.sdynpy_geometry_fitting.fit_line_point_cloud.rst", "_autosummary/sdynpy.signal_processing.sdynpy_harmonic.rst", "_autosummary/sdynpy.signal_processing.sdynpy_harmonic.harmonic_mag_phase.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.MCK_incomplete_to_StateSpace.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.MCK_to_StateSpace.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.frequency_domain_differentiation.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.integrate_MCK.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.integrate_modes.rst", "_autosummary/sdynpy.signal_processing.sdynpy_integration.modal_parameters_to_MCK.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.R.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.cross_mat.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.cross_mat_vectorized.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.lstsq_rigid_transform.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.matrix_to_rodrigues.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.quaternion_to_rotation_matrix.rst", "_autosummary/sdynpy.signal_processing.sdynpy_rotation.rodrigues_to_matrix.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.loginterp.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.octspace.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.optimization_callback.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.optimization_error_function.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sdof_filter.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sdof_free_decay_peak_response.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sdof_ramp_invariant_filter_weights.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.srs.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_compensating_pulse_parameters.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_displacement_velocity.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_minimize.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_reconstruction.rst", "_autosummary/sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_reconstruction_with_compensation.rst", "bibliography.rst", "example_problems/airplane_modal_test.rst", "example_problems/craig_bampton_substructuring.rst", "example_problems/mimo_random_vibration_control.rst", "example_problems/model_reduction/model_reduction.ipynb", "example_problems/rattlesnake_demonstration.rst", "example_problems/transient_fem_analysis.rst", "example_problems/transmission_simulator.rst", "examples.rst", "index.rst", "modal_tutorials.rst", "modal_tutorials/Modal_01_What_is_Modal_Analysis/Modal_01_What_is_Modal_Analysis.ipynb", "modal_tutorials/Modal_02_Basics_of_Vibrations/Modal_02_Basics_of_Vibrations.ipynb", "modal_tutorials/Modal_03_Multi_DoF_Vibrations/Modal_03_Multi_DoF_Vibrations.ipynb", "modal_tutorials/Modal_04_Modal_Analysis/Modal_04_Modal_Analysis.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05_Experimental_Modal_Analysis.rst", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05a_Computing_FRF_from_Time_Data.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05b_Types_of_Excitation.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05c_Selecting_Response_and_Measurement_DoFs.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05d_Data_Quality_Checks.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05e_Fitting_Modes_to_FRF.ipynb", "modal_tutorials/Modal_05_Experimental_Modal_Analysis/Modal_05f_Comparing_Test_and_Analysis.ipynb", "modules.rst", "sdynpy_showcase.rst", "usage.rst"], "titles": ["sdynpy", "sdynpy.core", "sdynpy.core.sdynpy_array", "sdynpy.core.sdynpy_array.SdynpyArray", "sdynpy.core.sdynpy_colors", "sdynpy.core.sdynpy_coordinate", "sdynpy.core.sdynpy_coordinate.CoordinateArray", "sdynpy.core.sdynpy_coordinate.coordinate_array", "sdynpy.core.sdynpy_coordinate.create_coordinate_string", "sdynpy.core.sdynpy_coordinate.from_matlab_cellstr", "sdynpy.core.sdynpy_coordinate.from_nodelist", "sdynpy.core.sdynpy_coordinate.outer_product", "sdynpy.core.sdynpy_coordinate.parse_coordinate_string", "sdynpy.core.sdynpy_data", "sdynpy.core.sdynpy_data.AbscissaIndexExtractor", "sdynpy.core.sdynpy_data.AbscissaValueExtractor", "sdynpy.core.sdynpy_data.CPSDPlot", "sdynpy.core.sdynpy_data.CoherenceArray", "sdynpy.core.sdynpy_data.ComplexType", "sdynpy.core.sdynpy_data.CorrelationArray", "sdynpy.core.sdynpy_data.DecayedSineTable", "sdynpy.core.sdynpy_data.FunctionTypes", "sdynpy.core.sdynpy_data.GUIPlot", "sdynpy.core.sdynpy_data.ImpulseResponseFunctionArray", "sdynpy.core.sdynpy_data.MPLCanvas", "sdynpy.core.sdynpy_data.MPLMultiCanvas", "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray", "sdynpy.core.sdynpy_data.MultipleCoherenceArray", "sdynpy.core.sdynpy_data.NDDataArray", "sdynpy.core.sdynpy_data.PowerSpectralDensityArray", "sdynpy.core.sdynpy_data.PowerSpectrumArray", "sdynpy.core.sdynpy_data.ShockResponseSpectrumArray", "sdynpy.core.sdynpy_data.SpecificDataType", "sdynpy.core.sdynpy_data.SpectrumArray", "sdynpy.core.sdynpy_data.TimeHistoryArray", "sdynpy.core.sdynpy_data.TransferFunctionArray", "sdynpy.core.sdynpy_data.TransmissibilityArray", "sdynpy.core.sdynpy_data.TypeQual", "sdynpy.core.sdynpy_data.data_array", "sdynpy.core.sdynpy_data.decayed_sine_table", "sdynpy.core.sdynpy_data.frf_from_time_data", "sdynpy.core.sdynpy_data.from_imat_struct", "sdynpy.core.sdynpy_data.from_uff", "sdynpy.core.sdynpy_data.from_unv", "sdynpy.core.sdynpy_data.join", "sdynpy.core.sdynpy_data.load", "sdynpy.core.sdynpy_geometry", "sdynpy.core.sdynpy_geometry.CoordinateSystemArray", "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter", "sdynpy.core.sdynpy_geometry.ElementArray", "sdynpy.core.sdynpy_geometry.Geometry", "sdynpy.core.sdynpy_geometry.GeometryPlotter", "sdynpy.core.sdynpy_geometry.NodeArray", "sdynpy.core.sdynpy_geometry.ShapePlotter", "sdynpy.core.sdynpy_geometry.TracelineArray", "sdynpy.core.sdynpy_geometry.TransientPlotter", "sdynpy.core.sdynpy_geometry.coordinate_system_array", "sdynpy.core.sdynpy_geometry.element_array", "sdynpy.core.sdynpy_geometry.from_exodus", "sdynpy.core.sdynpy_geometry.from_imat_struct", "sdynpy.core.sdynpy_geometry.from_uff", "sdynpy.core.sdynpy_geometry.from_unv", "sdynpy.core.sdynpy_geometry.global_coord", "sdynpy.core.sdynpy_geometry.global_deflection", "sdynpy.core.sdynpy_geometry.id_map", "sdynpy.core.sdynpy_geometry.load", "sdynpy.core.sdynpy_geometry.local_coord", "sdynpy.core.sdynpy_geometry.node_array", "sdynpy.core.sdynpy_geometry.split_list", "sdynpy.core.sdynpy_geometry.traceline_array", "sdynpy.core.sdynpy_matrix", "sdynpy.core.sdynpy_matrix.Matrix", "sdynpy.core.sdynpy_matrix.matrix", "sdynpy.core.sdynpy_shape", "sdynpy.core.sdynpy_shape.ShapeArray", "sdynpy.core.sdynpy_shape.concatenate_dofs", "sdynpy.core.sdynpy_shape.from_exodus", "sdynpy.core.sdynpy_shape.from_imat_struct", "sdynpy.core.sdynpy_shape.from_unv", "sdynpy.core.sdynpy_shape.mac", "sdynpy.core.sdynpy_shape.overlay_shapes", "sdynpy.core.sdynpy_shape.rigid_body_check", "sdynpy.core.sdynpy_shape.rigid_body_error", "sdynpy.core.sdynpy_shape.rigid_body_fix_node_orientation", "sdynpy.core.sdynpy_shape.shape_alignment", "sdynpy.core.sdynpy_shape.shape_array", "sdynpy.core.sdynpy_shape.shape_comparison_table", "sdynpy.core.sdynpy_system", "sdynpy.core.sdynpy_system.System", "sdynpy.core.sdynpy_system.substructure_by_position", "sdynpy.demo", "sdynpy.demo.beam_airplane", "sdynpy.demo.beam_airplane.create_models", "sdynpy.demo.beam_plate", "sdynpy.demo.beam_plate.create_models", "sdynpy.doc", "sdynpy.doc.sdynpy_latex", "sdynpy.doc.sdynpy_latex.create_latex_summary", "sdynpy.doc.sdynpy_ppt", "sdynpy.doc.sdynpy_ppt.add_geometry_overview_slide", "sdynpy.doc.sdynpy_ppt.add_section_header_slide", "sdynpy.doc.sdynpy_ppt.add_shape_animation_slides", "sdynpy.doc.sdynpy_ppt.add_shape_comparison_animation_slides", "sdynpy.doc.sdynpy_ppt.add_shape_comparison_overview_slide", "sdynpy.doc.sdynpy_ppt.add_shape_overview_slide", "sdynpy.doc.sdynpy_ppt.add_title_slide", "sdynpy.doc.sdynpy_ppt.create_summary_pptx", "sdynpy.doc.sdynpy_ppt.position_placeholder", "sdynpy.fem", "sdynpy.fem.sdynpy_beam", "sdynpy.fem.sdynpy_beam.beamkm", "sdynpy.fem.sdynpy_beam.beamkm_2d", "sdynpy.fem.sdynpy_beam.rect_beam_props", "sdynpy.fem.sdynpy_dof", "sdynpy.fem.sdynpy_dof.by_condition_number", "sdynpy.fem.sdynpy_dof.by_effective_independence", "sdynpy.fem.sdynpy_exodus", "sdynpy.fem.sdynpy_exodus.Exodus", "sdynpy.fem.sdynpy_exodus.ExodusError", "sdynpy.fem.sdynpy_exodus.ExodusInMemory", "sdynpy.fem.sdynpy_exodus.extract_sharp_edges", "sdynpy.fem.sdynpy_exodus.face_connectivity", "sdynpy.fem.sdynpy_exodus.mesh_triangulation_array", "sdynpy.fem.sdynpy_exodus.reduce_exodus_to_surfaces", "sdynpy.fem.sdynpy_exodus.subfield", "sdynpy.fem.sdynpy_shaker", "sdynpy.fem.sdynpy_shaker.Shaker4DoF", "sdynpy.fileio", "sdynpy.fileio.sdynpy_rattlesnake", "sdynpy.fileio.sdynpy_rattlesnake.create_synthetic_test", "sdynpy.fileio.sdynpy_rattlesnake.read_modal_data", "sdynpy.fileio.sdynpy_rattlesnake.read_random_spectral_data", "sdynpy.fileio.sdynpy_rattlesnake.read_rattlesnake_output", "sdynpy.fileio.sdynpy_rattlesnake.read_system_id_data", "sdynpy.fileio.sdynpy_rattlesnake.read_transient_control_data", "sdynpy.fileio.sdynpy_tshaker", "sdynpy.fileio.sdynpy_tshaker.read_mat_random", "sdynpy.fileio.sdynpy_tshaker.read_mat_shock", "sdynpy.fileio.sdynpy_tshaker.read_mat_time_history", "sdynpy.fileio.sdynpy_tshaker.read_tdms", "sdynpy.fileio.sdynpy_uff", "sdynpy.fileio.sdynpy_uff.UFFReadError", "sdynpy.fileio.sdynpy_uff.parse_uff_line", "sdynpy.fileio.sdynpy_uff.parse_uff_lines", "sdynpy.fileio.sdynpy_uff.readuff", "sdynpy.fileio.sdynpy_uff.readunv", "sdynpy.fileio.sdynpy_uff.write_uff_line", "sdynpy.fileio.sdynpy_uff_datasets", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.is_abscissa_even", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.is_abscissa_even", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.read", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82", "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.read", "sdynpy.fileio.sdynpy_vic", "sdynpy.fileio.sdynpy_vic.camera_matrix_from_vic_parameters", "sdynpy.fileio.sdynpy_vic.extract_vic_cal_parameters", "sdynpy.fileio.sdynpy_vic.get_vic_camera_parameters", "sdynpy.fileio.sdynpy_vic.matrix_from_bryant_angles", "sdynpy.fileio.sdynpy_vic.read_vic3D_mat_files", "sdynpy.fileio.sdynpy_vic.vic_angles_from_matrix", "sdynpy.modal", "sdynpy.modal.sdynpy_ccmif", "sdynpy.modal.sdynpy_ccmif.ColoredCMIF", "sdynpy.modal.sdynpy_ccmif.PropertiesDialog", "sdynpy.modal.sdynpy_modeshape", "sdynpy.modal.sdynpy_modeshape.ShapeSelection", "sdynpy.modal.sdynpy_modeshape.compute_residues", "sdynpy.modal.sdynpy_modeshape.compute_shapes", "sdynpy.modal.sdynpy_modeshape.compute_shapes_multireference", "sdynpy.modal.sdynpy_polypy", "sdynpy.modal.sdynpy_polypy.PolyPy", "sdynpy.modal.sdynpy_polypy.PolyPy_GUI", "sdynpy.modal.sdynpy_polypy.PolyPy_Stability", "sdynpy.modal.sdynpy_signal_processing_gui", "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI", "sdynpy.modal.sdynpy_smac", "sdynpy.modal.sdynpy_smac.AddRootDialog", "sdynpy.modal.sdynpy_smac.AutoFitTypes", "sdynpy.modal.sdynpy_smac.ConvergenceException", "sdynpy.modal.sdynpy_smac.SMAC", "sdynpy.modal.sdynpy_smac.SMAC_GUI", "sdynpy.modal.sdynpy_smac.correlation_coefficient", "sdynpy.signal_processing", "sdynpy.signal_processing.sdynpy_camera", "sdynpy.signal_processing.sdynpy_camera.calibration_linear_estimate", "sdynpy.signal_processing.sdynpy_camera.camera_derivative_matrix", "sdynpy.signal_processing.sdynpy_camera.camera_matrix_from_image", "sdynpy.signal_processing.sdynpy_camera.compute_pixel_displacement", "sdynpy.signal_processing.sdynpy_camera.compute_pixel_position", "sdynpy.signal_processing.sdynpy_camera.decomposeP", "sdynpy.signal_processing.sdynpy_camera.distort_points", "sdynpy.signal_processing.sdynpy_camera.homogeneous_coordinates", "sdynpy.signal_processing.sdynpy_camera.optimize_calibration", "sdynpy.signal_processing.sdynpy_camera.point_on_pixel", "sdynpy.signal_processing.sdynpy_camera.reconstruct_scene_from_calibration_parameters", "sdynpy.signal_processing.sdynpy_camera.unhomogeneous_coordinates", "sdynpy.signal_processing.sdynpy_complex", "sdynpy.signal_processing.sdynpy_complex.collapse_complex_to_real", "sdynpy.signal_processing.sdynpy_correlation", "sdynpy.signal_processing.sdynpy_correlation.frac", "sdynpy.signal_processing.sdynpy_correlation.mac", "sdynpy.signal_processing.sdynpy_correlation.matrix_plot", "sdynpy.signal_processing.sdynpy_correlation.msf", "sdynpy.signal_processing.sdynpy_correlation.orthog", "sdynpy.signal_processing.sdynpy_correlation.trac", "sdynpy.signal_processing.sdynpy_cpsd", "sdynpy.signal_processing.sdynpy_cpsd.cpsd", "sdynpy.signal_processing.sdynpy_cpsd.cpsd_autospectra", "sdynpy.signal_processing.sdynpy_cpsd.cpsd_coherence", "sdynpy.signal_processing.sdynpy_cpsd.cpsd_from_coh_phs", "sdynpy.signal_processing.sdynpy_cpsd.cpsd_phase", "sdynpy.signal_processing.sdynpy_cpsd.cpsd_to_time_history", "sdynpy.signal_processing.sdynpy_cpsd.dB_pow", "sdynpy.signal_processing.sdynpy_cpsd.db2scale", "sdynpy.signal_processing.sdynpy_cpsd.match_coherence_phase", "sdynpy.signal_processing.sdynpy_cpsd.plot_asds", "sdynpy.signal_processing.sdynpy_cpsd.plot_cpsd_error", "sdynpy.signal_processing.sdynpy_cpsd.rms", "sdynpy.signal_processing.sdynpy_cpsd.rms_csd", "sdynpy.signal_processing.sdynpy_cpsd.shaped_psd", "sdynpy.signal_processing.sdynpy_cpsd.trace", "sdynpy.signal_processing.sdynpy_frf", "sdynpy.signal_processing.sdynpy_frf.delay_signal", "sdynpy.signal_processing.sdynpy_frf.fft2frf", "sdynpy.signal_processing.sdynpy_frf.modes2frf", "sdynpy.signal_processing.sdynpy_frf.plot", "sdynpy.signal_processing.sdynpy_frf.sysmat2frf", "sdynpy.signal_processing.sdynpy_frf.timedata2frf", "sdynpy.signal_processing.sdynpy_frf_inverse", "sdynpy.signal_processing.sdynpy_frf_inverse.compute_tikhonov_modified_singular_values", "sdynpy.signal_processing.sdynpy_frf_inverse.frf_inverse", "sdynpy.signal_processing.sdynpy_frf_inverse.pinv_by_tikhonov", "sdynpy.signal_processing.sdynpy_frf_inverse.pinv_by_truncation", "sdynpy.signal_processing.sdynpy_generator", "sdynpy.signal_processing.sdynpy_generator.burst_random", "sdynpy.signal_processing.sdynpy_generator.chirp", "sdynpy.signal_processing.sdynpy_generator.pseudorandom", "sdynpy.signal_processing.sdynpy_generator.pulse", "sdynpy.signal_processing.sdynpy_generator.ramp_envelope", "sdynpy.signal_processing.sdynpy_generator.random", "sdynpy.signal_processing.sdynpy_generator.sine", "sdynpy.signal_processing.sdynpy_geometry_fitting", "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_fixed_angle", "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_free_angle", "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_fit", "sdynpy.signal_processing.sdynpy_geometry_fitting.create_cone", "sdynpy.signal_processing.sdynpy_geometry_fitting.cylinder_fit", "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_line", "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_plane", "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cone_fixed_angle", "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cylinder", "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_line_point_cloud", "sdynpy.signal_processing.sdynpy_harmonic", "sdynpy.signal_processing.sdynpy_harmonic.harmonic_mag_phase", "sdynpy.signal_processing.sdynpy_integration", "sdynpy.signal_processing.sdynpy_integration.MCK_incomplete_to_StateSpace", "sdynpy.signal_processing.sdynpy_integration.MCK_to_StateSpace", "sdynpy.signal_processing.sdynpy_integration.frequency_domain_differentiation", "sdynpy.signal_processing.sdynpy_integration.integrate_MCK", "sdynpy.signal_processing.sdynpy_integration.integrate_modes", "sdynpy.signal_processing.sdynpy_integration.modal_parameters_to_MCK", "sdynpy.signal_processing.sdynpy_rotation", "sdynpy.signal_processing.sdynpy_rotation.R", "sdynpy.signal_processing.sdynpy_rotation.cross_mat", "sdynpy.signal_processing.sdynpy_rotation.cross_mat_vectorized", "sdynpy.signal_processing.sdynpy_rotation.lstsq_rigid_transform", "sdynpy.signal_processing.sdynpy_rotation.matrix_to_rodrigues", "sdynpy.signal_processing.sdynpy_rotation.quaternion_to_rotation_matrix", "sdynpy.signal_processing.sdynpy_rotation.rodrigues_to_matrix", "sdynpy.signal_processing.sdynpy_srs", "sdynpy.signal_processing.sdynpy_srs.loginterp", "sdynpy.signal_processing.sdynpy_srs.octspace", "sdynpy.signal_processing.sdynpy_srs.optimization_callback", "sdynpy.signal_processing.sdynpy_srs.optimization_error_function", "sdynpy.signal_processing.sdynpy_srs.sdof_filter", "sdynpy.signal_processing.sdynpy_srs.sdof_free_decay_peak_response", "sdynpy.signal_processing.sdynpy_srs.sdof_ramp_invariant_filter_weights", "sdynpy.signal_processing.sdynpy_srs.srs", "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines", "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_compensating_pulse_parameters", "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_displacement_velocity", "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_minimize", "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_reconstruction", "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_reconstruction_with_compensation", "Bibliography", "Airplane Modal Test", "Substructuring using Craig-Bampton Superelements from Sierra/SD", "MIMO Random Vibration", "Model Reduction", "Rattlesnake Demonstration", "Analysis of Transient Finite Element Results", "Substructuring using the Transmission Simulator Method", "SDynpy Examples", "Welcome to SDynPy\u2019s documentation!", "Modal Tutorials", "Modal Tutorial 01: What is modal analysis?", "Modal Tutorial 02: Basics of Vibrations", "Modal Tutorial 03: Vibrations of Systems with Multiple Degrees of Freedom", "Modal Tutorial 04: Modal Analysis", "Modal Tutorial 05: Experimental Modal Analysis", "Modal Tutorial 05 Part A: Computing Frequency Response from Time Data", "Modal Tutorial 05 Part B: Types of Excitation for Experimental Modal Analysis", "Modal Tutorial 05 Part C: Selecting Excitation and Response Degrees of Freedom", "Modal Tutorial 05 Part D: Data Quality Checks", "Modal Tutorial 05 Part E: Fitting Modes to Data", "Modal Tutorial 05 Part F: Comparing Test and Analysis", "SDynPy Programming Interface", "SDynPy Showcase", "Usage"], "terms": {"A": [0, 1, 2, 3, 4, 5, 6, 10, 13, 28, 29, 31, 34, 35, 39, 40, 46, 50, 52, 58, 70, 73, 74, 76, 79, 80, 81, 83, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 125, 126, 127, 128, 135, 140, 142, 146, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 181, 182, 183, 184, 186, 187, 188, 191, 193, 196, 200, 201, 202, 209, 210, 211, 213, 214, 215, 220, 223, 225, 232, 233, 238, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 263, 268, 279, 281, 288, 289, 302, 304, 305, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 326, 328, 329, 334, 335], "structur": [0, 2, 3, 6, 7, 20, 28, 29, 34, 41, 50, 56, 57, 59, 67, 69, 71, 74, 77, 85, 87, 88, 93, 109, 123, 251, 257, 258, 260, 312, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 327, 328, 329, 334, 335], "dynam": [0, 28, 88, 260, 312, 314, 317, 318, 320, 322, 323, 324, 325, 326, 327, 329, 334], "librari": [0, 34], "python": [0, 117, 196, 202, 312, 313, 315, 317, 318, 320, 323, 334, 335], "copyright": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "2022": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "nation": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 312], "technologi": [0, 1, 2, 4, 5, 13, 23, 35, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "engin": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 312, 322, 323, 328], "solut": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 185, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 313, 314, 317, 323, 325, 328, 329, 334, 335], "sandia": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 123, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 312, 316], "llc": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "ntess": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "under": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 317, 334], "term": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 314, 322, 323, 324, 325, 327], "contract": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "de": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "na0003525": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "u": [0, 1, 2, 4, 5, 13, 29, 35, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 126, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 213, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 312, 314, 315, 316, 317, 318, 322, 324, 325, 327, 328, 334], "": [0, 1, 2, 3, 4, 5, 13, 23, 28, 29, 31, 33, 34, 35, 46, 50, 51, 67, 70, 73, 85, 87, 88, 90, 91, 93, 95, 96, 98, 108, 109, 110, 111, 112, 113, 116, 117, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 181, 183, 187, 188, 191, 196, 200, 202, 209, 210, 213, 217, 223, 225, 232, 248, 249, 251, 253, 255, 260, 268, 279, 281, 288, 304, 305, 307, 311, 312, 313, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "govern": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 323], "retain": [0, 1, 2, 4, 5, 13, 29, 34, 35, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 257, 259, 260, 268, 279, 281, 288, 313, 315, 324], "certain": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 312, 314, 317, 324, 327, 334], "right": [0, 1, 2, 4, 5, 13, 28, 29, 35, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 107, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 182, 185, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 312, 314, 316, 317, 318, 322, 323, 325, 327, 329, 334], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 23, 28, 29, 31, 33, 34, 35, 38, 41, 46, 50, 51, 55, 58, 59, 70, 73, 74, 76, 77, 80, 82, 83, 85, 87, 88, 90, 91, 93, 95, 96, 98, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 123, 125, 127, 128, 135, 140, 142, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 181, 183, 185, 187, 188, 191, 196, 200, 202, 209, 210, 213, 214, 215, 223, 225, 232, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263, 268, 279, 281, 288, 292, 304, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 326, 327, 328, 329, 334, 335], "softwar": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 213, 223, 225, 232, 248, 255, 260, 263, 268, 279, 281, 288, 313, 316, 317, 318, 334, 335], "program": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 315, 320], "i": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 22, 23, 28, 29, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 55, 56, 57, 58, 63, 67, 69, 70, 71, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 98, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 123, 125, 126, 127, 128, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 181, 183, 185, 187, 188, 191, 193, 195, 196, 200, 202, 209, 210, 213, 220, 223, 225, 232, 233, 238, 245, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263, 268, 279, 281, 288, 289, 290, 292, 302, 304, 305, 307, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 329, 334, 335], "free": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 315, 321, 323, 325, 327, 328], "you": [0, 1, 2, 4, 5, 13, 31, 34, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 119, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 304, 305, 312, 317, 318, 322, 323, 324, 325, 328, 334, 335], "can": [0, 1, 2, 3, 4, 5, 7, 13, 22, 23, 28, 29, 31, 33, 34, 35, 41, 46, 50, 56, 57, 58, 59, 67, 69, 70, 71, 73, 74, 77, 81, 82, 83, 85, 87, 88, 90, 91, 92, 93, 95, 96, 98, 108, 109, 110, 112, 113, 116, 117, 119, 125, 126, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 181, 183, 187, 188, 191, 193, 195, 196, 200, 201, 202, 209, 210, 213, 223, 225, 232, 248, 255, 257, 258, 259, 260, 263, 268, 279, 281, 288, 289, 302, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "redistribut": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "modifi": [0, 1, 2, 4, 5, 13, 28, 35, 46, 50, 55, 70, 73, 83, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 256, 257, 260, 268, 279, 281, 288, 312, 314, 323, 325, 328, 329, 334], "gnu": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "gener": [0, 1, 2, 4, 5, 13, 21, 22, 28, 29, 31, 32, 34, 46, 50, 58, 70, 73, 74, 86, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 117, 119, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 185, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 238, 248, 255, 257, 260, 268, 279, 281, 288, 302, 305, 313, 314, 315, 317, 318, 319, 322, 323, 324, 326, 328, 335], "public": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "licens": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "publish": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "foundat": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "either": [0, 1, 2, 4, 5, 13, 23, 29, 31, 34, 35, 46, 70, 73, 74, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 257, 258, 260, 268, 279, 281, 288, 305, 313, 316, 317, 324, 325, 327, 334], "version": [0, 1, 2, 4, 5, 13, 28, 34, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 117, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 256, 260, 268, 279, 281, 288, 312, 317, 324, 325, 334], "3": [0, 1, 2, 4, 5, 6, 8, 10, 12, 13, 18, 21, 29, 31, 32, 34, 46, 47, 50, 52, 56, 62, 63, 66, 70, 73, 87, 88, 90, 91, 93, 95, 96, 97, 98, 102, 108, 109, 112, 113, 116, 117, 119, 123, 125, 126, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 168, 170, 173, 177, 180, 181, 183, 185, 187, 188, 191, 196, 200, 202, 206, 209, 210, 211, 213, 223, 225, 232, 248, 255, 257, 260, 268, 279, 281, 288, 289, 290, 292, 296, 301, 302, 303, 304, 305, 308, 312, 313, 314, 315, 316, 317, 318, 322, 327, 328, 329, 334], "your": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 322, 323, 324, 334, 335], "option": [0, 1, 2, 4, 5, 6, 7, 10, 13, 16, 23, 28, 29, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 63, 70, 71, 73, 74, 76, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 117, 125, 126, 127, 128, 129, 135, 140, 142, 144, 145, 146, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 185, 187, 188, 189, 191, 193, 194, 195, 196, 197, 200, 201, 202, 209, 210, 220, 223, 225, 232, 233, 248, 251, 255, 257, 258, 259, 260, 263, 268, 279, 281, 288, 289, 301, 304, 305, 307, 315, 316, 317, 318, 319, 324, 325, 334], "ani": [0, 1, 2, 4, 5, 13, 28, 34, 35, 46, 50, 51, 70, 71, 73, 74, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 123, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 185, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 312, 313, 315, 317, 322, 323, 325, 327, 328, 329, 334, 335], "later": [0, 1, 2, 4, 5, 13, 34, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 302, 313, 315, 316, 325], "distribut": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 117, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 322], "hope": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "us": [0, 1, 2, 4, 5, 6, 7, 13, 17, 19, 23, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 73, 74, 77, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 108, 109, 112, 113, 116, 117, 119, 125, 126, 127, 128, 135, 140, 141, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 185, 187, 188, 191, 193, 195, 196, 200, 201, 202, 209, 210, 211, 213, 223, 225, 232, 233, 238, 248, 251, 253, 254, 255, 256, 257, 258, 260, 263, 268, 279, 281, 288, 292, 301, 303, 304, 305, 315, 316, 317, 319, 320, 322, 323, 324, 325, 326, 328, 329, 335], "without": [0, 1, 2, 4, 5, 13, 29, 34, 46, 50, 55, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 257, 260, 268, 279, 281, 288, 312, 316, 317, 324, 325, 328, 334], "warranti": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "even": [0, 1, 2, 4, 5, 13, 34, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 312, 313, 316, 317, 323, 325, 327, 328, 334], "impli": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 323, 328], "merchant": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "fit": [0, 1, 2, 4, 5, 13, 31, 34, 46, 52, 70, 73, 87, 90, 91, 93, 95, 96, 97, 98, 108, 109, 113, 116, 119, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 193, 195, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 305, 317, 319, 320, 321, 326, 327, 328, 329, 335], "FOR": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "particular": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 312, 322, 334], "purpos": [0, 1, 2, 4, 5, 13, 29, 35, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 256, 260, 268, 279, 281, 288, 315, 335], "see": [0, 1, 2, 4, 5, 13, 34, 46, 57, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 123, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 212, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 303, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "more": [0, 1, 2, 4, 5, 13, 28, 34, 41, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 117, 119, 123, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 185, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 327, 328, 329, 334], "detail": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 258, 260, 268, 279, 281, 288], "should": [0, 1, 2, 4, 5, 6, 7, 10, 13, 22, 23, 29, 31, 34, 35, 46, 50, 53, 56, 57, 67, 69, 70, 73, 74, 76, 80, 81, 85, 87, 88, 90, 91, 93, 95, 96, 98, 108, 109, 110, 113, 114, 115, 116, 117, 123, 125, 127, 128, 135, 140, 144, 145, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 195, 196, 200, 202, 209, 210, 223, 225, 232, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263, 268, 279, 281, 288, 303, 304, 305, 307, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "have": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 28, 29, 31, 33, 34, 35, 39, 40, 45, 46, 49, 50, 55, 56, 57, 65, 67, 69, 70, 73, 74, 80, 86, 87, 90, 91, 93, 95, 96, 98, 108, 109, 110, 113, 116, 117, 119, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 185, 187, 188, 191, 195, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 301, 304, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 326, 327, 328, 329, 334, 335], "receiv": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "copi": [0, 1, 2, 4, 5, 13, 35, 46, 50, 70, 71, 73, 87, 88, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 318, 327], "along": [0, 1, 2, 4, 5, 13, 28, 31, 46, 50, 58, 70, 73, 74, 87, 90, 91, 93, 95, 96, 97, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288, 305, 312, 315, 318, 323, 324, 325, 327, 329, 334], "If": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 22, 28, 29, 31, 33, 34, 35, 40, 41, 44, 45, 46, 47, 49, 50, 52, 54, 55, 58, 63, 70, 71, 73, 74, 78, 79, 81, 85, 87, 88, 90, 91, 93, 95, 96, 98, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 193, 195, 196, 200, 202, 209, 210, 211, 223, 225, 232, 233, 248, 251, 254, 255, 257, 258, 259, 260, 263, 268, 279, 281, 288, 289, 301, 302, 304, 305, 307, 312, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "http": [0, 1, 2, 4, 5, 13, 23, 29, 34, 35, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 123, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 257, 258, 260, 268, 279, 281, 288, 292, 311], "www": [0, 1, 2, 4, 5, 13, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 260, 268, 279, 281, 288], "org": [0, 1, 2, 4, 5, 13, 29, 34, 46, 70, 73, 87, 90, 91, 93, 95, 96, 98, 108, 109, 113, 116, 125, 127, 128, 135, 140, 147, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 187, 188, 191, 196, 200, 202, 209, 210, 223, 225, 232, 248, 255, 257, 258, 260, 268, 279, 281, 288, 311], "modul": [0, 1, 2, 13, 46, 90, 95, 98, 108, 117, 127, 135, 140, 147, 187, 209, 268, 312, 314, 315, 316, 317, 318, 320, 324, 327, 328, 329, 334, 335], "object": [1, 2, 3, 5, 6, 9, 14, 15, 28, 31, 38, 39, 41, 45, 46, 48, 49, 50, 53, 54, 55, 57, 60, 61, 64, 69, 71, 72, 73, 74, 75, 80, 88, 89, 92, 96, 98, 117, 119, 123, 125, 126, 149, 152, 155, 159, 162, 165, 168, 171, 174, 178, 185, 197, 206, 211, 268, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 334], "includ": [1, 34, 74, 88, 98, 123, 125, 154, 305, 312, 314, 315, 316, 317, 320, 323, 324, 325, 327, 328, 334, 335], "data": [1, 2, 3, 5, 7, 13, 16, 17, 18, 19, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 54, 55, 58, 59, 60, 61, 65, 71, 74, 76, 77, 78, 88, 97, 116, 117, 119, 126, 127, 128, 132, 135, 142, 143, 144, 145, 146, 149, 150, 152, 153, 155, 157, 159, 160, 162, 163, 165, 166, 168, 169, 170, 171, 172, 174, 176, 178, 179, 180, 185, 188, 189, 193, 195, 201, 210, 254, 263, 268, 279, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329], "geometri": [1, 5, 28, 34, 46, 48, 51, 53, 55, 56, 57, 58, 59, 60, 61, 65, 67, 69, 74, 76, 80, 81, 82, 83, 88, 89, 92, 97, 99, 101, 106, 119, 123, 161, 164, 167, 177, 185, 198, 201, 268, 288, 313, 314, 315, 317, 318, 319, 320, 322, 325, 327, 328, 329, 335], "base": [2, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 71, 74, 82, 88, 117, 119, 124, 126, 135, 149, 152, 155, 159, 162, 165, 168, 171, 174, 178, 189, 190, 192, 193, 195, 197, 198, 199, 201, 203, 204, 206, 207, 304, 305, 312, 313, 315, 316, 317, 320, 322, 323, 328, 329], "class": [2, 3, 5, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 64, 65, 70, 71, 73, 74, 77, 87, 88, 108, 116, 117, 119, 124, 125, 126, 127, 148, 149, 151, 152, 154, 155, 158, 159, 161, 162, 164, 165, 167, 168, 170, 171, 173, 174, 177, 178, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 312, 314, 316, 318, 325, 327, 328, 334, 335], "all": [2, 3, 7, 11, 22, 28, 29, 31, 33, 34, 35, 38, 46, 49, 50, 53, 55, 58, 74, 75, 76, 88, 92, 117, 119, 123, 192, 193, 194, 195, 257, 258, 268, 304, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "arrai": [2, 3, 5, 6, 7, 9, 10, 17, 19, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 66, 67, 69, 71, 74, 82, 84, 85, 88, 110, 114, 115, 117, 119, 126, 132, 162, 168, 181, 183, 184, 185, 186, 193, 211, 213, 214, 215, 217, 218, 220, 222, 233, 238, 245, 250, 251, 253, 254, 263, 301, 302, 305, 307, 309, 310, 313, 314, 315, 316, 318, 322, 323, 324, 325, 327, 329, 335], "ar": [2, 5, 13, 23, 28, 29, 31, 34, 35, 38, 41, 50, 51, 52, 53, 55, 63, 67, 71, 73, 74, 76, 81, 82, 83, 84, 88, 89, 97, 110, 117, 119, 123, 126, 135, 144, 145, 170, 177, 181, 183, 185, 191, 193, 195, 211, 213, 238, 245, 250, 251, 253, 254, 257, 258, 259, 292, 301, 303, 305, 307, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "subclass": [2, 3, 13, 28, 38, 41, 44, 312, 316, 334, 335], "numpi": [2, 3, 6, 7, 28, 29, 34, 35, 38, 45, 50, 56, 57, 65, 67, 69, 71, 74, 79, 85, 114, 115, 117, 233, 238, 245, 257, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "ndarrai": [2, 3, 6, 7, 9, 28, 29, 31, 33, 34, 35, 38, 39, 40, 41, 50, 51, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 69, 72, 74, 77, 79, 81, 82, 83, 84, 85, 88, 110, 111, 114, 115, 117, 126, 181, 183, 184, 186, 193, 194, 195, 211, 213, 214, 215, 216, 220, 233, 238, 245, 249, 250, 251, 253, 254, 256, 257, 258, 259, 263, 289, 290, 298, 301, 302, 303, 304, 305, 307, 309, 310, 312, 334, 335], "store": [2, 3, 17, 19, 20, 23, 27, 29, 30, 33, 34, 35, 36, 41, 50, 65, 71, 85, 254, 312, 313, 315, 316, 323, 324, 325, 327, 334], "underli": [2, 3, 6, 71, 74, 312, 323, 325, 334], "result": [2, 33, 34, 50, 55, 74, 76, 81, 88, 185, 251, 312, 313, 314, 316, 319, 320, 322, 323, 325, 327, 328, 334, 335], "potenti": [2, 28, 50, 55, 251, 312, 315, 325, 327, 328, 334], "complex": [2, 18, 22, 28, 35, 53, 74, 81, 85, 88, 97, 123, 193, 195, 223, 233, 238, 245, 251, 253, 312, 317, 322, 323, 324, 325, 327, 328, 329, 334, 335], "type": [2, 3, 6, 7, 8, 9, 10, 11, 13, 17, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 88, 112, 117, 119, 123, 126, 127, 142, 144, 145, 146, 173, 182, 184, 193, 195, 201, 214, 215, 220, 238, 240, 245, 249, 250, 251, 253, 256, 257, 258, 259, 289, 290, 298, 301, 302, 304, 305, 309, 312, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 334, 335], "while": [2, 29, 50, 55, 117, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "still": [2, 312, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "achiev": [2, 31, 305, 312, 314, 317, 328, 329, 334], "effici": [2, 334], "flexibl": [2, 316, 328], "defin": [2, 3, 4, 5, 6, 10, 13, 23, 28, 29, 31, 35, 45, 46, 50, 57, 64, 65, 67, 69, 70, 73, 74, 87, 88, 110, 117, 119, 123, 126, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 181, 183, 193, 195, 213, 251, 268, 305, 312, 313, 314, 317, 318, 322, 323, 324, 325, 329, 334, 335], "sdynpyarrai": [2, 6, 20, 28, 47, 49, 52, 54, 71, 74, 312, 334], "which": [2, 3, 5, 6, 7, 10, 13, 22, 23, 28, 29, 31, 33, 34, 35, 39, 48, 50, 51, 53, 55, 56, 57, 58, 67, 69, 71, 74, 76, 80, 81, 82, 83, 88, 110, 117, 135, 170, 177, 182, 193, 195, 249, 251, 253, 302, 303, 304, 305, 307, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334, 335], "The": [2, 3, 5, 6, 10, 23, 28, 29, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 48, 50, 51, 52, 53, 55, 58, 59, 63, 65, 68, 72, 74, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 110, 114, 115, 117, 119, 126, 142, 143, 144, 145, 146, 185, 193, 195, 213, 220, 233, 238, 245, 249, 250, 251, 253, 254, 256, 257, 258, 259, 263, 289, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 326, 328, 329, 334, 335], "inherit": [2, 3, 28, 312, 334], "from": [2, 3, 6, 8, 9, 13, 23, 28, 29, 33, 34, 35, 40, 41, 42, 43, 45, 47, 48, 49, 50, 52, 53, 54, 58, 59, 60, 61, 62, 64, 65, 66, 74, 75, 76, 77, 78, 81, 82, 83, 85, 87, 88, 96, 97, 98, 110, 113, 116, 117, 119, 123, 127, 128, 135, 142, 143, 144, 145, 173, 180, 181, 182, 183, 184, 185, 186, 188, 189, 193, 195, 201, 211, 212, 213, 214, 215, 220, 233, 238, 250, 253, 254, 256, 263, 304, 305, 307, 309, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 328, 329, 334, 335], "main": [2, 50, 55, 317, 323, 324, 325, 328, 334], "contribut": [2, 312, 314, 323, 324, 325, 327, 328, 329], "allow": [2, 3, 22, 28, 31, 34, 38, 50, 55, 74, 185, 193, 201, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "user": [2, 22, 23, 33, 35, 50, 55, 98, 117, 119, 185, 201, 312, 315, 316, 317, 325, 327, 328, 334, 335], "access": [2, 3, 123, 312, 316, 317, 323, 325, 334], "field": [2, 3, 13, 34, 50, 65, 312, 316, 323], "attribut": [2, 3, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 67, 69, 71, 74, 88, 117, 149, 152, 155, 159, 162, 165, 168, 171, 174, 178, 189, 190, 192, 197, 198, 199, 201, 203, 204, 206, 207, 312, 316, 317, 325, 327, 334], "notat": 2, "rather": [2, 31, 51, 53, 55, 195, 251, 253, 263, 305, 312, 314, 315, 317, 318, 323, 324, 325, 327, 328, 329, 334], "than": [2, 6, 10, 28, 29, 31, 33, 34, 35, 41, 50, 51, 53, 55, 74, 117, 119, 185, 195, 251, 253, 259, 263, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "index": [2, 3, 23, 28, 33, 50, 53, 114, 115, 117, 119, 213, 289, 312, 314, 316, 317, 318, 320, 323, 325, 329], "e": [2, 6, 7, 8, 12, 28, 31, 34, 35, 40, 56, 57, 67, 69, 88, 94, 110, 111, 112, 114, 115, 117, 119, 233, 251, 254, 302, 303, 304, 305, 307, 312, 316, 317, 318, 321, 323, 324, 325, 326, 327, 328, 334, 335], "g": [2, 6, 8, 12, 28, 31, 34, 35, 40, 110, 114, 115, 117, 119, 233, 238, 251, 254, 302, 303, 304, 305, 307, 312, 316, 318, 323, 325, 327, 328, 334, 335], "shape": [3, 6, 7, 10, 17, 19, 20, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 47, 48, 49, 50, 52, 53, 54, 55, 56, 62, 63, 66, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 97, 101, 104, 106, 114, 115, 117, 168, 170, 189, 190, 191, 193, 195, 201, 220, 229, 250, 251, 253, 254, 261, 263, 266, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 320, 322, 323, 327, 328, 329, 335], "dtype": [3, 71, 74, 168, 312, 315, 316, 322, 325, 327, 329, 334], "float": [3, 28, 29, 31, 33, 34, 35, 40, 48, 50, 51, 52, 53, 55, 74, 81, 83, 88, 89, 111, 112, 117, 126, 129, 184, 185, 186, 193, 195, 220, 233, 238, 240, 245, 249, 254, 256, 257, 258, 259, 263, 289, 298, 302, 303, 304, 305, 307, 309, 310, 312, 323, 325, 334], "buffer": [3, 6, 17, 19, 20, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 47, 49, 52, 54, 71, 72, 74], "none": [3, 6, 7, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 67, 69, 71, 72, 74, 76, 79, 80, 83, 84, 85, 86, 88, 89, 97, 103, 104, 106, 107, 112, 117, 119, 123, 126, 129, 130, 131, 132, 134, 136, 137, 138, 139, 142, 144, 145, 149, 159, 165, 181, 189, 193, 194, 195, 197, 201, 206, 217, 219, 224, 226, 227, 228, 229, 230, 231, 233, 242, 243, 244, 246, 251, 252, 254, 257, 258, 261, 263, 265, 266, 277, 285, 292, 300, 301, 304, 305, 308, 312, 313, 314, 315, 316, 317, 318, 322, 323, 327, 334], "offset": [3, 6, 17, 19, 20, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 47, 49, 50, 52, 54, 71, 72, 74, 88, 312, 313, 315, 318, 334], "0": [3, 6, 7, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 67, 69, 71, 72, 74, 81, 85, 86, 88, 94, 97, 101, 102, 103, 104, 105, 106, 112, 117, 126, 149, 162, 168, 182, 185, 192, 193, 195, 197, 204, 206, 213, 217, 219, 221, 228, 233, 246, 251, 254, 261, 263, 266, 267, 289, 292, 299, 302, 303, 304, 305, 308, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "stride": [3, 6, 17, 19, 20, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 47, 49, 52, 54, 71, 72, 74], "order": [3, 6, 17, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 47, 49, 50, 52, 54, 71, 72, 74, 110, 111, 126, 181, 183, 185, 284, 312, 314, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "sourc": [3, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 66, 67, 68, 69, 71, 72, 74, 79, 81, 82, 83, 85, 86, 88, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 149, 150, 152, 153, 155, 156, 157, 159, 160, 162, 163, 165, 166, 168, 169, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 327, 328, 335], "superclass": [3, 28], "implement": [3, 29, 34, 35, 74, 196, 202, 312, 314, 316, 317, 328, 334], "thei": [3, 31, 34, 50, 74, 84, 181, 183, 251, 253, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "were": [3, 28, 31, 33, 35, 50, 52, 74, 82, 304, 312, 313, 314, 315, 316, 317, 318, 322, 323, 325, 327, 328, 329, 334], "__init__": [3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 71, 74, 88, 117, 119, 124, 126, 149, 152, 155, 159, 162, 165, 168, 171, 174, 178, 189, 190, 192, 197, 198, 199, 201, 203, 204, 206, 207], "method": [3, 6, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 64, 65, 71, 74, 81, 82, 88, 117, 119, 124, 126, 149, 152, 155, 159, 162, 165, 168, 171, 174, 178, 189, 190, 197, 198, 199, 201, 203, 206, 207, 250, 253, 254, 257, 258, 259, 292, 311, 312, 313, 315, 316, 317, 319, 320, 322, 323, 324, 325, 327, 328, 334], "assemble_mat_dict": 3, "assembl": [3, 74, 88, 98, 290, 312, 313, 315, 318, 323, 324, 327, 334], "dictionari": [3, 6, 9, 28, 29, 31, 42, 43, 47, 49, 50, 52, 54, 60, 61, 74, 78, 92, 112, 144, 145, 182, 305, 312, 315, 318, 327, 335], "return": [3, 6, 7, 8, 9, 10, 11, 12, 17, 19, 22, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 92, 110, 111, 112, 114, 115, 117, 119, 123, 126, 132, 142, 143, 144, 145, 146, 181, 182, 183, 184, 185, 186, 193, 195, 201, 211, 212, 213, 214, 215, 216, 220, 233, 238, 240, 245, 249, 250, 251, 253, 254, 256, 257, 258, 259, 263, 289, 290, 298, 301, 302, 303, 304, 305, 307, 309, 310, 312, 313, 314, 315, 316, 318, 323, 325, 334, 335], "output_dict": 3, "content": [3, 34, 325, 327, 328], "file": [3, 6, 9, 13, 21, 28, 32, 34, 41, 45, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 65, 74, 76, 77, 78, 85, 88, 116, 117, 119, 123, 127, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 158, 181, 182, 183, 185, 201, 313, 316, 317, 318, 325, 334, 335], "dict": [3, 28, 29, 31, 33, 35, 42, 43, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 74, 78, 88, 92, 112, 129, 144, 145, 182], "properti": [3, 17, 19, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 71, 74, 88, 110, 117, 149, 152, 155, 159, 162, 165, 168, 171, 174, 178, 181, 183, 189, 197, 198, 206, 251, 313, 316, 322, 323, 324, 325, 326, 328, 334], "These": [3, 5, 34, 117, 119, 312, 314, 315, 316, 317, 318, 324, 325, 327, 334, 335], "through": [3, 82, 117, 119, 312, 313, 314, 316, 317, 318, 322, 323, 324, 326, 327, 334, 335], "syntax": [3, 312, 334], "classmethod": [3, 6, 28, 29, 34, 50, 71, 74, 88, 126, 149, 152, 155, 159, 162, 165, 168, 171, 174, 178], "load": [3, 6, 9, 28, 41, 47, 49, 50, 52, 54, 59, 74, 77, 78, 88, 117, 119, 128, 201, 313, 314, 317, 319, 322, 327, 334], "filenam": [3, 28, 29, 34, 45, 48, 50, 51, 53, 55, 65, 74, 88, 117, 119, 144, 145, 206, 312, 316], "specifi": [3, 5, 6, 7, 10, 22, 23, 28, 29, 31, 33, 34, 35, 38, 39, 40, 45, 47, 50, 51, 53, 55, 56, 57, 58, 63, 65, 67, 69, 71, 74, 76, 79, 80, 83, 85, 86, 88, 112, 117, 119, 123, 142, 143, 185, 193, 195, 249, 251, 253, 254, 257, 263, 289, 301, 304, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "paramet": [3, 6, 7, 8, 9, 10, 11, 12, 22, 23, 28, 29, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 97, 103, 104, 110, 111, 112, 114, 115, 117, 119, 123, 126, 132, 142, 143, 144, 145, 146, 181, 182, 183, 184, 185, 186, 193, 195, 201, 211, 213, 214, 215, 216, 220, 233, 238, 240, 245, 249, 250, 251, 253, 254, 256, 257, 258, 259, 263, 289, 290, 292, 298, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 314, 315, 317, 319, 323, 324, 325, 327, 328, 334], "str": [3, 8, 12, 23, 28, 29, 31, 33, 34, 35, 40, 45, 50, 51, 53, 55, 65, 74, 76, 86, 88, 117, 129, 132, 142, 144, 145, 146, 182, 185, 233, 250, 251, 253, 254, 257, 312, 324], "ha": [3, 28, 45, 70, 117, 119, 123, 220, 302, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "extens": [3, 28, 45], "unv": [3, 28, 42, 43, 45, 47, 49, 50, 52, 54, 60, 61, 65, 74, 78, 140, 141, 142, 335], "uff": [3, 28, 45, 140, 335], "univers": [3, 13, 21, 23, 28, 32, 35, 45, 47, 49, 50, 52, 54, 60, 61, 74, 78, 85, 140, 142, 143, 144, 145, 146, 147, 148, 151, 158, 312, 334, 335], "otherwis": [3, 6, 10, 28, 29, 31, 34, 35, 41, 45, 50, 51, 52, 53, 55, 85, 88, 233, 305, 312, 316, 318, 327, 328, 334], "rais": [3, 28, 29, 33, 34, 35, 40, 45, 50, 63, 65, 71, 74, 78, 86, 88, 142, 144, 145, 195, 211, 257, 258, 259, 289], "attributeerror": [3, 28, 45, 50, 65], "doe": [3, 23, 28, 34, 35, 45, 50, 65, 249, 312, 314, 315, 316, 322, 323, 324, 325, 327, 328, 329, 334], "from_unv": [3, 28, 45, 47, 49, 50, 52, 54, 65, 74], "appropri": [3, 28, 33, 35, 45, 312, 313, 314, 317, 323, 328, 334], "cl": [3, 28, 45, 50], "ndenumer": 3, "enumer": [3, 13, 16, 18, 21, 22, 32, 37, 192, 204, 315, 317, 327, 334], "over": [3, 31, 34, 50, 55, 143, 185, 254, 304, 305, 312, 313, 315, 316, 317, 322, 323, 324, 325, 327, 328, 334], "entri": [3, 6, 9, 28, 29, 112, 117, 123, 142, 143, 185, 312, 324, 325, 334], "yield": [3, 68], "tupl": [3, 29, 31, 34, 51, 117, 119, 305], "indic": [3, 6, 23, 26, 28, 34, 35, 71, 88, 97, 110, 114, 115, 117, 119, 197, 312, 316, 317, 318, 325], "correspond": [3, 5, 6, 7, 9, 28, 31, 34, 50, 56, 57, 62, 66, 67, 69, 74, 82, 85, 88, 110, 114, 115, 117, 119, 211, 213, 250, 312, 313, 315, 316, 317, 318, 322, 323, 324, 325, 327, 329, 334], "each": [3, 6, 10, 23, 28, 29, 31, 34, 38, 39, 50, 52, 53, 56, 57, 58, 65, 67, 69, 73, 83, 85, 111, 112, 114, 115, 117, 119, 146, 193, 233, 238, 257, 258, 263, 292, 304, 305, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "save": [3, 28, 41, 50, 51, 53, 55, 59, 74, 77, 88, 98, 116, 206, 312, 316, 317, 325, 327, 334], "Will": [3, 28, 142], "append": [3, 28, 50, 74, 117, 312, 313, 315, 317, 318, 323, 325, 327, 334], "npy": [3, 312, 316, 317, 334], "savemat": [3, 28], "matlab": [3, 6, 9, 28, 41, 50, 59, 74, 77], "mat": [3, 6, 9, 28, 41, 50, 59, 74, 77, 135, 138, 185, 335], "name": [3, 7, 29, 34, 35, 47, 50, 53, 56, 57, 67, 69, 88, 117, 119, 123, 233, 312, 315, 316, 317, 323, 324, 325, 334, 335], "color": [4, 47, 49, 50, 52, 54, 56, 57, 67, 69, 74, 80, 161, 162, 165, 178, 185, 312, 313, 316, 317, 318, 322, 323, 325, 328, 334], "scheme": [4, 117, 119, 312, 314, 327], "match": [4, 22, 28, 29, 31, 34, 39, 88, 257, 258, 259, 305, 312, 314, 315, 316, 317, 323, 328, 334], "dea": [4, 263], "coordinatearrai": [5, 7, 9, 10, 11, 28, 29, 34, 35, 38, 50, 71, 72, 74, 81, 82, 85, 87, 88, 129, 194, 312, 313, 314, 316, 324, 325, 334, 335], "node": [5, 6, 7, 8, 10, 12, 28, 34, 46, 49, 50, 52, 54, 57, 58, 62, 65, 66, 67, 69, 74, 83, 85, 86, 88, 89, 110, 111, 117, 119, 123, 161, 170, 178, 185, 268, 313, 314, 315, 316, 317, 318, 325, 327, 328, 335], "number": [5, 8, 12, 23, 28, 29, 31, 34, 35, 40, 48, 50, 51, 52, 53, 55, 64, 71, 74, 81, 83, 88, 89, 97, 98, 101, 102, 110, 111, 112, 114, 115, 117, 119, 123, 142, 143, 144, 145, 185, 193, 195, 213, 223, 233, 249, 250, 251, 253, 254, 257, 258, 259, 263, 298, 305, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "direct": [5, 6, 7, 8, 10, 12, 34, 47, 50, 56, 58, 63, 74, 76, 85, 111, 112, 253, 271, 272, 273, 274, 312, 314, 315, 317, 323, 324, 325, 327, 328, 329, 334, 335], "coordin": [5, 6, 7, 8, 10, 12, 22, 28, 29, 34, 35, 38, 39, 46, 47, 50, 52, 56, 58, 62, 63, 66, 67, 71, 72, 73, 74, 81, 82, 83, 85, 88, 110, 117, 119, 161, 162, 167, 194, 214, 215, 220, 268, 313, 314, 315, 316, 317, 318, 323, 324, 325, 327, 329, 335], "degre": [5, 6, 7, 10, 28, 29, 34, 35, 50, 71, 73, 74, 75, 85, 87, 88, 92, 110, 113, 114, 115, 126, 173, 257, 258, 289, 301, 304, 313, 314, 316, 319, 320, 321, 322, 326, 327, 334, 335], "freedom": [5, 6, 7, 10, 28, 29, 34, 35, 50, 71, 73, 74, 75, 85, 87, 88, 92, 110, 113, 114, 115, 126, 173, 257, 258, 301, 304, 313, 314, 316, 319, 320, 321, 326, 327, 334, 335], "consist": [5, 7, 11, 29, 31, 34, 35, 40, 50, 52, 58, 74, 79, 80, 81, 82, 83, 87, 88, 89, 117, 181, 183, 185, 213, 251, 253, 289, 305, 307, 312, 313, 314, 316, 317, 318, 325, 327, 334], "local": [5, 6, 50, 52, 58, 62, 66, 117, 312, 315, 324, 325, 334], "displac": [5, 31, 32, 34, 50, 53, 55, 67, 73, 74, 76, 88, 126, 185, 193, 195, 214, 251, 253, 304, 305, 307, 312, 313, 316, 317, 322, 324, 325, 334, 335], "system": [5, 28, 29, 46, 47, 50, 52, 56, 58, 62, 63, 66, 67, 74, 83, 87, 89, 91, 92, 93, 126, 129, 151, 161, 167, 195, 213, 253, 263, 268, 301, 302, 303, 304, 313, 314, 315, 317, 318, 320, 321, 326, 327, 328, 329, 335], "translat": [5, 6, 10, 28, 37, 50, 57, 111, 181, 183, 213, 216, 312, 315, 325, 329, 334], "rotat": [5, 28, 37, 50, 51, 57, 74, 76, 88, 111, 181, 183, 184, 186, 213, 216, 288, 289, 312, 315, 323, 325, 329, 334, 335], "about": [5, 50, 74, 110, 111, 184, 186, 289, 312, 316, 317, 321, 322, 323, 324, 327, 328, 329, 334], "princip": [5, 50, 312, 334], "axi": [5, 28, 29, 31, 33, 34, 35, 50, 58, 71, 74, 110, 208, 216, 224, 244, 254, 258, 259, 284, 289, 312, 315, 316, 318, 322, 323, 324, 325, 327, 328, 329, 334], "posit": [5, 6, 7, 10, 22, 31, 34, 47, 50, 52, 58, 67, 74, 161, 185, 199, 207, 211, 213, 215, 220, 302, 304, 305, 312, 313, 318, 323, 324, 325, 327, 328, 334], "neg": [5, 7, 31, 34, 302, 304, 305, 318, 324, 327, 328], "also": [5, 13, 28, 29, 31, 33, 34, 35, 46, 50, 74, 87, 135, 251, 257, 268, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "empti": [5, 34, 50, 119, 312, 317, 325, 327, 334], "non": [5, 34, 82, 123, 312, 314, 324, 325, 328, 334], "function": [5, 6, 7, 13, 17, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 67, 69, 70, 71, 73, 74, 77, 83, 87, 88, 91, 93, 95, 96, 97, 98, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 123, 126, 127, 128, 135, 138, 140, 148, 151, 154, 158, 161, 164, 167, 170, 173, 177, 180, 181, 183, 187, 191, 193, 202, 210, 213, 214, 215, 223, 225, 232, 233, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260, 263, 268, 279, 281, 288, 296, 303, 305, 313, 314, 315, 316, 317, 318, 320, 322, 325, 326, 328, 335], "inform": [6, 20, 34, 39, 47, 49, 50, 52, 54, 74, 117, 119, 123, 132, 144, 145, 154, 181, 183, 185, 312, 313, 316, 317, 322, 323, 324, 325, 327, 329, 334, 335], "101x": [6, 8, 12, 88, 315, 325, 334, 335], "coordinate_arrai": [6, 10, 50, 312, 314, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "helper": [6, 38, 39, 47, 49, 52, 53, 54, 71, 74, 312, 314, 316, 335], "creat": [6, 7, 8, 9, 10, 22, 28, 29, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 69, 71, 72, 74, 76, 77, 81, 82, 83, 85, 88, 92, 95, 96, 98, 108, 109, 117, 119, 123, 126, 185, 201, 250, 254, 263, 289, 296, 307, 313, 314, 317, 318, 319, 320, 322, 323, 324, 325, 327, 329, 335], "ab": [6, 31, 304, 305, 312, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "sign": [6, 88, 312, 313, 315, 318, 323, 325, 327, 334], "flip": [6, 74, 84, 312, 313, 315, 318, 323, 324, 327], "data_dtyp": [6, 47, 49, 52, 54, 71], "uint64": [6, 47, 49, 52, 54], "int8": 6, "datatyp": [6, 16], "direction_string_arrai": 6, "string": [6, 7, 8, 9, 12, 28, 31, 34, 35, 40, 50, 74, 76, 86, 88, 117, 119, 142, 143, 146, 185, 193, 254, 312, 316, 323, 334], "represent": [6, 8, 12, 74, 86, 88, 123, 146, 290, 312, 313, 323, 324, 325, 328, 334, 335], "repres": [6, 8, 12, 23, 31, 34, 52, 87, 88, 117, 119, 184, 186, 238, 290, 301, 304, 305, 312, 313, 314, 315, 317, 320, 323, 325, 327, 334, 335], "np": [6, 9, 28, 29, 31, 33, 34, 35, 38, 39, 40, 41, 50, 51, 52, 53, 55, 58, 59, 63, 64, 74, 77, 79, 81, 82, 83, 84, 88, 111, 114, 115, 117, 126, 184, 186, 193, 195, 214, 215, 216, 220, 233, 238, 245, 249, 251, 253, 254, 256, 257, 258, 259, 263, 289, 290, 298, 301, 302, 303, 304, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "from_matlab_cellstr": 6, "cellstr_data": [6, 9], "cellstr": [6, 9], "scipi": [6, 9, 23, 28, 33, 34, 35, 40, 41, 50, 59, 74, 77, 233, 254, 301, 312, 318, 325, 328, 334], "io": [6, 9, 28, 41, 50, 59, 74, 77], "loadmat": [6, 9, 41, 50, 59, 74, 77], "cell": [6, 9], "variabl": [6, 9, 23, 31, 34, 35, 74, 76, 88, 117, 119, 123, 305, 312, 316, 317, 325, 334], "built": [6, 9, 312, 314, 325, 335], "provid": [6, 9, 10, 11, 22, 23, 29, 34, 35, 74, 78, 82, 83, 88, 250, 254, 257, 258, 259, 263, 312, 314, 315, 316, 317, 318, 323, 325, 327, 328, 334, 335], "from_nodelist": [6, 312, 334], "1": [6, 7, 8, 10, 12, 16, 18, 20, 21, 23, 25, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 48, 50, 52, 53, 55, 56, 57, 58, 67, 69, 74, 84, 85, 88, 94, 99, 101, 106, 110, 111, 117, 119, 123, 126, 159, 162, 165, 168, 178, 182, 185, 192, 193, 195, 197, 204, 208, 213, 216, 220, 224, 228, 238, 243, 246, 254, 257, 258, 261, 263, 264, 266, 267, 280, 284, 289, 292, 301, 302, 304, 305, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 322, 328, 329, 334], "2": [6, 7, 8, 10, 12, 16, 18, 21, 29, 31, 32, 34, 50, 56, 57, 67, 69, 74, 86, 88, 100, 110, 112, 123, 126, 129, 185, 192, 193, 195, 197, 206, 211, 213, 220, 251, 257, 258, 263, 289, 302, 304, 305, 307, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 328, 329, 334], "flatten": [6, 7, 10, 28, 33, 50, 312, 314, 323, 324, 325, 329, 334], "true": [6, 10, 28, 29, 31, 33, 34, 35, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 71, 74, 78, 81, 83, 88, 99, 101, 111, 114, 115, 117, 119, 137, 146, 185, 193, 195, 197, 206, 221, 233, 242, 246, 262, 263, 289, 299, 305, 312, 314, 315, 316, 318, 322, 323, 324, 325, 327, 328, 334], "set": [6, 10, 22, 23, 28, 29, 31, 33, 34, 35, 48, 50, 52, 53, 55, 58, 64, 73, 74, 75, 76, 79, 81, 83, 86, 88, 89, 113, 114, 115, 117, 188, 211, 213, 254, 292, 302, 305, 307, 309, 314, 316, 319, 324, 325, 327, 328, 329, 334, 335], "iter": [6, 10, 29, 31, 34, 49, 50, 52, 54, 57, 58, 68, 69, 74, 76, 80, 88, 89, 114, 115, 117, 119, 123, 142, 143, 144, 145, 146, 181, 183, 185, 304, 305, 312, 314, 316], "list": [6, 10, 29, 34, 35, 41, 50, 55, 56, 57, 67, 68, 69, 71, 74, 75, 76, 80, 88, 97, 114, 115, 117, 119, 123, 129, 142, 143, 144, 145, 181, 183, 185, 189, 312, 313, 315, 316, 317, 318, 323, 334, 335], "default": [6, 10, 23, 28, 29, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 48, 50, 51, 52, 53, 55, 58, 63, 71, 74, 76, 80, 81, 83, 86, 88, 89, 111, 114, 115, 117, 119, 126, 144, 145, 146, 185, 193, 195, 220, 233, 251, 253, 254, 257, 258, 263, 289, 292, 304, 305, 307, 315, 316, 317, 319, 334], "three": [6, 10, 181, 183, 213, 312, 313, 318, 323, 324, 325, 327, 328, 329, 334], "x": [6, 7, 8, 10, 12, 29, 34, 50, 52, 56, 74, 76, 88, 110, 111, 117, 126, 181, 183, 184, 186, 195, 206, 208, 211, 212, 213, 220, 239, 244, 249, 250, 253, 254, 263, 280, 289, 292, 297, 304, 312, 314, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "y": [6, 7, 8, 10, 12, 29, 34, 50, 52, 74, 76, 88, 110, 111, 126, 184, 186, 206, 208, 212, 213, 220, 289, 292, 312, 317, 322, 324, 325, 327, 329, 334], "z": [6, 7, 8, 10, 12, 34, 50, 52, 58, 74, 76, 88, 110, 111, 184, 186, 206, 212, 213, 220, 289, 292, 302, 312, 315, 317, 324, 325, 327, 329, 334], "bool": [6, 7, 10, 28, 29, 31, 33, 34, 35, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 58, 71, 74, 78, 81, 88, 111, 114, 115, 117, 119, 123, 144, 145, 146, 185, 193, 195, 201, 233, 289, 305, 316], "prior": [6, 10, 33, 35, 325, 328, 334], "output": [6, 10, 29, 41, 50, 55, 59, 74, 77, 81, 82, 86, 88, 112, 123, 126, 132, 135, 142, 143, 144, 145, 180, 185, 238, 250, 251, 253, 254, 292, 312, 313, 314, 316, 317, 318, 327, 328, 334, 335], "fals": [6, 7, 10, 28, 29, 31, 33, 34, 35, 41, 44, 48, 50, 51, 53, 55, 58, 71, 74, 81, 88, 111, 114, 115, 117, 119, 123, 144, 145, 159, 185, 189, 193, 195, 197, 206, 207, 219, 221, 224, 233, 252, 286, 289, 305, 308, 312, 315, 318, 322, 323, 324, 334], "dimens": [6, 10, 28, 34, 42, 43, 85, 114, 115, 117, 220, 233, 238, 245, 312, 318, 325, 334], "one": [6, 10, 28, 29, 31, 33, 35, 41, 50, 74, 75, 84, 114, 115, 117, 123, 140, 193, 195, 251, 253, 257, 258, 263, 302, 312, 313, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "larger": [6, 10, 314, 316, 317, 322, 323, 325, 328, 329, 334], "input": [6, 7, 10, 29, 34, 35, 38, 50, 56, 57, 67, 69, 74, 75, 80, 88, 89, 126, 193, 238, 250, 251, 253, 254, 257, 258, 263, 292, 302, 312, 313, 314, 316, 317, 318, 323, 324, 325, 326, 327, 334], "due": [6, 10, 126, 312, 313, 314, 315, 317, 318, 322, 323, 324, 325, 327, 328, 334], "ad": [6, 10, 28, 34, 51, 83, 86, 185, 312, 317, 318, 320, 321, 327, 328], "size": [6, 10, 29, 34, 35, 50, 55, 88, 110, 117, 206, 211, 254, 257, 258, 292, 301, 304, 312, 313, 314, 315, 316, 317, 318, 323, 325, 327, 328, 334], "local_direct": 6, "local_direction_arrai": 6, "where": [6, 23, 29, 31, 34, 35, 50, 58, 67, 110, 117, 181, 183, 193, 213, 220, 238, 245, 250, 251, 253, 254, 257, 258, 259, 304, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "For": [6, 31, 74, 114, 115, 123, 263, 305, 307, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "exampl": [6, 31, 33, 35, 50, 123, 263, 305, 307, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 327, 328, 329, 334], "would": [6, 74, 76, 88, 251, 253, 256, 312, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "string_arrai": [6, 7, 312, 314, 315, 316, 322, 325, 327, 334], "structured_arrai": [7, 56, 57, 67, 69, 85], "force_broadcast": [7, 314, 315, 334], "an": [7, 16, 22, 23, 28, 29, 31, 33, 34, 35, 41, 50, 51, 52, 53, 55, 56, 57, 59, 62, 63, 66, 67, 69, 71, 74, 76, 77, 78, 80, 84, 85, 86, 88, 110, 117, 119, 123, 132, 141, 142, 181, 183, 189, 192, 193, 201, 204, 213, 220, 249, 250, 251, 253, 254, 256, 257, 258, 259, 263, 289, 303, 304, 305, 307, 309, 310, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 335], "test": [7, 46, 50, 55, 56, 57, 67, 69, 73, 74, 83, 85, 88, 95, 97, 126, 164, 167, 177, 185, 238, 317, 319, 320, 321, 322, 326, 328, 329, 334], "analysi": [7, 50, 56, 57, 67, 69, 85, 95, 117, 187, 238, 312, 313, 314, 316, 318, 319, 320, 321, 323, 324, 327, 329, 334], "two": [7, 31, 34, 64, 79, 85, 86, 117, 119, 238, 245, 292, 302, 305, 312, 313, 314, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "multidimension": [7, 56, 57, 67, 69, 85], "integ": [7, 8, 12, 28, 31, 34, 35, 50, 52, 56, 57, 67, 69, 74, 80, 117, 249, 305, 312, 328], "id": [7, 28, 47, 49, 50, 52, 54, 56, 57, 58, 64, 67, 69, 74, 83, 86, 117, 119, 144, 145, 312, 313, 314, 315, 318, 325, 327, 334], "cast": [7, 56, 57, 67, 69], "9": [7, 21, 31, 32, 34, 56, 57, 67, 69, 126, 159, 185, 206, 304, 305, 307, 308, 312, 313, 315, 316, 317, 323, 325, 327, 328, 334], "pass": [7, 22, 23, 28, 31, 33, 34, 35, 40, 41, 48, 50, 53, 55, 56, 57, 59, 67, 69, 71, 74, 77, 81, 82, 85, 88, 117, 119, 195, 201, 211, 263, 305, 312, 313, 314, 316, 317, 318, 323, 324, 327, 334, 335], "must": [7, 28, 29, 31, 34, 39, 50, 55, 63, 65, 86, 88, 114, 115, 254, 257, 258, 259, 305, 312, 314, 315, 317, 318, 322, 324, 325, 326, 327, 328, 329, 334], "rx": [7, 181, 183, 184, 186, 197, 292, 312, 325, 334], "ry": [7, 181, 183, 184, 186, 312, 325, 334], "rz": [7, 181, 183, 184, 186, 312, 325, 334], "whether": [7, 22, 34, 50, 51, 53, 55, 58, 81, 88, 117, 119, 123, 185, 195, 251, 313, 314, 315, 317, 323, 334], "valu": [7, 16, 18, 21, 28, 29, 31, 32, 33, 34, 35, 37, 39, 41, 52, 55, 68, 72, 74, 76, 81, 88, 112, 114, 115, 117, 119, 141, 144, 145, 146, 185, 192, 193, 204, 213, 240, 245, 249, 251, 253, 254, 256, 257, 259, 289, 298, 302, 304, 305, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 327, 328, 329, 334, 335], "given": [7, 29, 31, 34, 110, 117, 193, 220, 250, 251, 253, 254, 263, 290, 305, 312, 314, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334, 335], "assum": [7, 31, 34, 86, 112, 117, 251, 301, 305, 307, 314, 317, 322, 323, 325, 327, 328, 334, 335], "altern": [7, 31, 56, 57, 67, 69, 85, 204, 206, 253, 289, 305, 312, 314, 323, 325, 327, 334], "singl": [7, 11, 34, 35, 40, 41, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 69, 74, 78, 80, 112, 188, 189, 263, 301, 304, 312, 313, 315, 317, 318, 321, 322, 324, 327, 328], "pars": [7, 12, 28, 142, 316, 335], "combin": [7, 11, 47, 49, 50, 52, 54, 74, 75, 78, 80, 88, 89, 119, 312, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 334], "regardless": [7, 41, 185, 315, 317, 327, 328], "int": [8, 12, 23, 28, 29, 31, 33, 34, 35, 40, 48, 50, 51, 52, 53, 55, 71, 74, 81, 88, 111, 112, 114, 115, 117, 119, 129, 142, 143, 193, 195, 197, 233, 254, 263, 298, 303, 304, 305, 307, 309, 310, 312, 327], "arg": [11, 117, 124, 190], "nddataarrai": [13, 17, 19, 22, 23, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 41, 42, 43, 44, 48, 50, 312, 316, 334, 335], "time": [13, 29, 31, 32, 33, 34, 35, 40, 50, 53, 55, 74, 88, 110, 112, 117, 126, 128, 132, 135, 171, 173, 185, 201, 238, 249, 250, 254, 263, 281, 285, 286, 302, 303, 304, 305, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 328, 329, 335], "histori": [13, 29, 33, 34, 35, 40, 132, 135, 173, 201, 238, 254, 303, 312, 314, 322, 323, 326, 334, 335], "sever": [13, 28, 44, 50, 74, 80, 173, 313, 314, 318, 320, 322, 323, 325, 327, 328, 334, 335], "contain": [13, 18, 21, 28, 29, 31, 32, 34, 37, 39, 41, 42, 43, 47, 48, 49, 50, 52, 54, 58, 59, 60, 61, 74, 75, 77, 78, 87, 88, 92, 117, 119, 123, 132, 144, 145, 182, 193, 195, 220, 233, 238, 263, 304, 305, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 327, 328, 329, 334, 335], "specif": [13, 28, 88, 146, 193, 314, 316, 322, 324, 325, 327, 334, 335], "capabl": [13, 312, 313, 315, 316, 318, 323, 327, 334, 335], "connect": [13, 22, 49, 50, 54, 57, 58, 69, 88, 110, 117, 119, 123, 165, 312, 313, 315, 317, 318, 324, 325, 334], "format": [13, 50, 53, 60, 61, 74, 85, 86, 88, 117, 135, 140, 142, 143, 146, 147, 312, 313, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334, 335], "parent": [14, 15, 24, 25, 203], "powerspectraldensityarrai": [16, 34, 314], "compare_data": [16, 29], "qmainwindow": [16, 22, 189, 198, 201, 207], "enum": [16, 18, 21, 28, 32, 37, 192, 204], "coher": [16, 17, 21, 27, 29, 314, 317, 328, 334], "imaginari": [16, 18, 22, 312, 317, 323, 324, 327, 334], "16": [16, 21, 32, 50, 292, 312, 313, 315, 317, 323, 325, 327, 328, 329, 334], "magnitud": [16, 18, 22, 29, 193, 206, 314, 323, 324, 325, 327, 328, 334], "phase": [16, 18, 22, 29, 34, 35, 53, 263, 267, 312, 313, 314, 317, 322, 323, 324, 325, 327, 328, 329, 334], "4": [16, 18, 21, 24, 25, 31, 34, 47, 50, 55, 56, 74, 88, 117, 123, 126, 168, 181, 183, 185, 211, 213, 304, 305, 312, 313, 314, 315, 316, 317, 318, 322, 324, 327, 328, 329, 334], "real": [16, 18, 22, 28, 35, 71, 74, 85, 117, 193, 195, 312, 314, 317, 322, 323, 324, 325, 326, 327, 328, 334], "8": [16, 21, 29, 31, 32, 33, 34, 50, 53, 55, 83, 88, 89, 123, 185, 257, 258, 304, 305, 312, 313, 315, 316, 317, 322, 323, 324, 325, 327, 328, 334], "clear_select": 16, "event": [16, 22, 189, 199, 207], "coherence_st": 16, "connectui": 16, "deselect_diagon": 16, "deselect_lower_triangular": 16, "deselect_upper_triangular": 16, "extend_selection_matrix": 16, "find_function_typ": 16, "imaginary_st": 16, "initui": 16, "init_matrix_plot": 16, "invert_select": 16, "magnitude_st": 16, "phase_st": 16, "plot": [16, 18, 22, 28, 29, 31, 33, 35, 46, 48, 50, 51, 53, 55, 71, 74, 81, 88, 97, 117, 119, 126, 201, 206, 213, 224, 268, 305, 313, 314, 316, 317, 318, 319, 322, 323, 324, 327, 328, 329, 335], "plot_selected_funct": 16, "real_stat": 16, "select_diagon": 16, "select_lower_triangular": 16, "select_plot": 16, "select_upper_triangular": 16, "selector_click": 16, "selector_unclick": 16, "settext": 16, "state_chang": 16, "update_select": [16, 189], "nelement": [17, 19, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "function_typ": [17, 19, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 174], "variou": [18, 28, 35, 40, 71, 74, 81, 82, 185, 260, 312, 314, 316, 318, 320, 325, 326, 327, 328, 329, 334, 335], "wai": [18, 312, 314, 315, 316, 317, 322, 323, 325, 327, 328, 329, 334, 335], "magphas": 18, "5": [18, 21, 24, 25, 28, 31, 32, 33, 34, 35, 40, 48, 50, 81, 88, 94, 97, 103, 104, 106, 123, 185, 233, 254, 304, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 327, 328, 329, 334], "realimag": 18, "data_dimens": [19, 28], "ordinate_dtyp": [19, 28], "float64": [19, 28, 47, 52, 168, 312], "correl": [19, 185, 202, 213, 225, 312, 313, 316, 317, 318, 322, 327, 328, 335], "num_el": [20, 28, 33, 35, 117], "sum": [20, 31, 263, 305, 309, 310, 325, 327, 328, 335], "decai": [20, 31, 39, 302, 305, 307, 309, 310, 317, 323, 324, 328, 334, 335], "sine": [20, 31, 34, 39, 263, 305, 307, 309, 310, 312, 317, 322, 323, 324, 327, 328, 334, 335], "construct_displac": 20, "sample_r": [20, 31, 129, 233, 238, 300, 303, 305, 307, 308, 309, 310, 312, 322, 327, 328, 334], "block_siz": [20, 31, 300, 305, 307, 308, 309, 310], "acceleration_factor": [20, 31, 305, 307, 308], "construct_sign": 20, "construct_veloc": 20, "found": [21, 34, 35, 50, 144, 145, 292, 317, 322, 325, 334, 335], "autocorrel": 21, "7": [21, 31, 97, 123, 159, 185, 304, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "autospectrum": [21, 328], "6": [21, 31, 32, 97, 123, 126, 185, 304, 305, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "crosscorrel": 21, "crossspectrum": 21, "cumulative_frequency_distribut": 21, "13": [21, 32, 185, 312, 313, 315, 316, 317, 323, 325, 327, 328, 334], "eigenvalu": [21, 313, 317, 327], "22": [21, 32, 57, 312, 313, 315, 317, 325, 328, 334], "eigenvector": [21, 317, 327], "23": [21, 32, 57, 296, 312, 313, 315, 317, 325, 328, 334], "energy_spectral_dens": 21, "10": [21, 29, 31, 34, 88, 129, 185, 193, 195, 257, 258, 304, 305, 311, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "finite_impulse_response_filt": 21, "25": [21, 34, 48, 50, 53, 55, 81, 112, 312, 313, 315, 317, 323, 324, 325, 327, 328, 334], "force_pattern": 21, "19": [21, 32, 312, 313, 315, 317, 322, 323, 325, 327, 328, 329, 334], "frequency_response_funct": [21, 322, 327], "impulse_response_funct": 21, "29": [21, 312, 313, 315, 325, 334], "mode_indicator_funct": 21, "18": [21, 32, 123, 312, 313, 315, 317, 323, 325, 327, 328, 329, 334], "multiple_coher": 21, "26": [21, 312, 313, 315, 317, 325, 329, 334], "orbit": 21, "17": [21, 32, 312, 313, 315, 317, 323, 325, 327, 328, 329, 334], "order_funct": 21, "27": [21, 312, 313, 315, 316, 317, 325, 334], "partial_coher": 21, "21": [21, 32, 57, 206, 312, 313, 315, 317, 325, 328, 334], "partial_pow": 21, "20": [21, 32, 48, 50, 51, 53, 55, 81, 97, 99, 101, 102, 106, 206, 312, 313, 314, 315, 317, 322, 323, 325, 327, 328, 334], "peaks_vallei": 21, "14": [21, 185, 312, 313, 315, 316, 317, 323, 325, 327, 328, 329, 334], "phase_compens": 21, "28": [21, 312, 313, 315, 325, 334], "power_spectral_dens": 21, "probability_density_funct": 21, "11": [21, 32, 50, 57, 185, 311, 312, 313, 315, 316, 317, 318, 323, 325, 327, 328, 334], "shock_response_spectrum": 21, "24": [21, 57, 312, 313, 315, 317, 323, 325, 328, 334], "spectrum": [21, 31, 33, 34, 303, 304, 305, 327], "12": [21, 32, 34, 74, 185, 228, 312, 313, 314, 315, 316, 317, 323, 325, 327, 328, 334], "strain_per_cycl": 21, "stress_per_cycl": 21, "15": [21, 32, 126, 185, 197, 312, 313, 315, 317, 318, 323, 324, 325, 327, 328, 334], "time_respons": [21, 317, 334], "transmis": 21, "data_to_plot": 22, "labeled_data_to_plot": 22, "iteract": [22, 201], "window": [22, 23, 34, 35, 40, 50, 55, 74, 189, 201, 233, 254, 312, 316, 317, 322, 325, 327, 328, 334], "visual": [22, 29, 35, 50, 74, 80, 256, 315, 316, 317, 318, 323, 325, 334], "multipl": [22, 28, 31, 33, 34, 35, 41, 74, 75, 88, 143, 211, 238, 311, 312, 314, 317, 320, 321, 323, 325, 326, 327, 334], "dataset": [22, 28, 29, 50, 65, 88, 132, 144, 145, 147, 148, 151, 154, 158, 161, 164, 167, 170, 177, 195, 225, 312, 315, 316, 317, 328, 334, 335], "overlaid": [22, 313, 315, 316, 318, 325, 327, 334], "addit": [22, 23, 28, 31, 33, 34, 35, 40, 50, 51, 71, 74, 81, 82, 88, 154, 305, 314, 317, 323, 325, 328, 334], "argument": [22, 28, 29, 31, 33, 34, 35, 38, 40, 48, 50, 53, 55, 71, 74, 88, 117, 201, 251, 263, 303, 305, 312, 313, 314, 316, 317, 318, 324, 325, 334], "label": [22, 28, 29, 50, 71, 312, 315, 318, 322, 323, 324, 325, 334], "legend": [22, 315, 323, 324, 325, 327], "keyword": [22, 23, 28, 31, 33, 34, 35, 40, 48, 50, 53, 55, 81, 82, 112, 334], "_": [22, 29, 315, 325, 327, 328, 329], "replac": [22, 29, 220], "note": [22, 23, 28, 29, 31, 33, 34, 35, 57, 85, 110, 111, 112, 117, 123, 126, 185, 213, 238, 250, 251, 253, 254, 256, 257, 258, 292, 302, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "reshap": [22, 28, 312, 318], "so": [22, 28, 29, 31, 34, 35, 44, 88, 117, 123, 257, 258, 259, 305, 312, 313, 314, 315, 316, 317, 318, 321, 323, 324, 325, 327, 328, 329, 334], "first": [22, 28, 34, 50, 55, 58, 85, 86, 88, 110, 114, 115, 117, 181, 183, 185, 213, 238, 245, 253, 258, 259, 263, 302, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "exist": [22, 23, 28, 31, 33, 34, 35, 41, 50, 63, 68, 74, 80, 88, 185, 312, 314, 316, 318, 325, 334], "subsequ": [22, 34, 195, 323, 327], "error": [22, 29, 31, 34, 81, 82, 83, 86, 141, 142, 144, 145, 305, 313, 314, 315, 316, 317, 325, 327, 328, 334], "thrown": 22, "its": [22, 28, 33, 34, 35, 62, 66, 87, 117, 119, 213, 312, 313, 315, 316, 317, 318, 322, 323, 324, 325, 326, 328, 329, 334, 335], "connect_callback": [22, 189, 198, 199, 201, 203, 207], "callback": 22, "deselect_all_complex_types_except": 22, "complex_typ": 22, "deselect": [22, 317, 334], "except": [22, 116, 118, 140, 141, 202, 205, 257, 258, 259, 312, 317, 318, 323, 324, 325, 328, 334], "make": [22, 34, 50, 85, 181, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 327, 328, 334, 335], "checkbox": [22, 317, 334], "menu": [22, 50, 53, 55, 317, 325, 334], "act": [22, 323, 325, 334], "like": [22, 23, 35, 74, 93, 117, 123, 312, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "radiobutton": 22, "complextyp": 22, "select": [22, 28, 50, 52, 113, 117, 119, 188, 189, 257, 312, 313, 316, 317, 318, 319, 321, 326, 327, 328, 334], "selection_chang": 22, "call": [22, 50, 55, 65, 312, 313, 314, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "when": [22, 23, 28, 29, 31, 34, 35, 50, 55, 58, 74, 81, 88, 117, 141, 144, 145, 185, 257, 258, 259, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 325, 327, 328, 334, 335], "chang": [22, 29, 34, 50, 55, 126, 257, 259, 312, 314, 317, 322, 325, 327, 328, 334], "set_imaginari": 22, "set_magnitud": 22, "set_magnitude_phas": 22, "set_phas": 22, "set_real": 22, "set_real_imag": 22, "updat": [22, 50, 53, 55, 316, 318, 334], "figur": [22, 28, 29, 31, 33, 35, 71, 83, 305, 312, 313, 315, 316, 322, 323, 325, 327, 328, 334], "update_abscissa_log": 22, "abscissa": [22, 28, 29, 31, 33, 34, 35, 38, 40, 44, 74, 156, 174, 175, 257, 258, 259, 284, 312, 314, 316, 317, 322, 323, 327, 334], "log": [22, 29, 34, 193, 305, 312, 322, 323, 324, 325, 327, 334], "scale": [22, 29, 31, 33, 34, 48, 50, 53, 55, 230, 240, 257, 258, 305, 307, 314, 317, 323, 325, 327, 329, 334], "update_checkbox": 22, "disabl": [22, 317, 334], "button": [22, 312, 317, 325, 334], "auto": [22, 33, 97, 314, 317, 327, 334], "update_data": 22, "update_ordinate_log": 22, "ordin": [22, 28, 38, 44, 74, 174, 193, 312, 314, 316, 322, 323, 327, 334], "impuls": [23, 33, 35], "respons": [23, 28, 29, 31, 33, 34, 35, 40, 74, 88, 126, 193, 195, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 302, 303, 304, 312, 316, 319, 320, 321, 322, 326, 328, 335], "enforce_caus": [23, 35], "exponential_tap": [23, 35], "window_paramet": [23, 35], "end_of_ringdown": [23, 35], "enforc": [23, 35], "causal": [23, 35], "via": [23, 29, 34, 35, 256, 257, 258, 312, 317, 325, 327, 334], "cutoff": [23, 29, 35, 312], "some": [23, 250, 254, 263, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "sort": [23, 71, 312], "appli": [23, 29, 31, 33, 34, 35, 40, 50, 52, 53, 55, 74, 81, 88, 89, 254, 263, 301, 305, 312, 313, 314, 315, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328], "necessarili": [23, 35, 325, 334], "tradit": [23, 35, 325], "process": [23, 35, 117, 119, 200, 201, 209, 238, 312, 316, 317, 322, 323, 325, 326, 327, 328, 334], "current": [23, 28, 29, 33, 34, 35, 50, 53, 55, 74, 117, 126, 312, 317, 318, 320, 323, 325, 334, 335], "exponenti": [23, 35, 317, 323, 324, 325, 328, 334], "taper": [23, 35, 57], "end": [23, 28, 35, 50, 55, 302, 312, 313, 315, 316, 317, 323, 324, 325, 327, 328, 334], "boxcar": [23, 35], "irf": [23, 34, 35], "uniform": [23, 35, 111, 112, 193, 292, 334], "cuttoff": [23, 35], "sampl": [23, 29, 31, 34, 35, 40, 50, 55, 233, 238, 249, 254, 263, 303, 304, 305, 307, 309, 310, 312, 316, 317, 323, 327, 328, 334], "40": [23, 35, 312, 313, 314, 315, 317, 323, 325, 334], "db": [23, 35, 240], "down": [23, 28, 35, 113, 312, 313, 314, 315, 316, 317, 318, 322, 323, 325, 327, 328, 329, 334], "point": [23, 28, 31, 35, 50, 52, 55, 58, 81, 117, 185, 211, 213, 220, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 292, 298, 305, 312, 315, 316, 317, 318, 322, 323, 325, 327, 328, 329, 334], "care": [23, 35, 322, 323, 334], "taken": [23, 34, 35, 88, 323, 334], "sinc": [23, 35, 253, 312, 313, 315, 327, 329, 334], "lead": [23, 34, 35, 314], "errat": [23, 35], "behavior": [23, 35, 324], "automat": [23, 28, 33, 35, 42, 43, 50, 55, 95, 304, 312, 313, 314, 316, 317, 318, 324, 327, 334, 335], "isn": [23, 35, 257, 258, 259, 313, 318, 328, 334], "t": [23, 33, 34, 35, 50, 97, 117, 119, 135, 213, 216, 257, 258, 259, 280, 292, 302, 312, 313, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "window_paramt": [23, 35], "after": [23, 35, 123, 191, 302, 312, 313, 315, 317, 323, 324, 325, 327, 328, 334], "zero": [23, 28, 29, 31, 33, 34, 35, 48, 50, 53, 74, 88, 117, 301, 302, 305, 312, 313, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "It": [23, 34, 35, 50, 117, 213, 249, 312, 313, 314, 315, 316, 317, 320, 322, 323, 324, 325, 327, 328, 334, 335], "same": [23, 28, 29, 34, 35, 50, 55, 56, 57, 67, 69, 74, 80, 82, 88, 211, 220, 257, 258, 312, 313, 315, 316, 317, 323, 324, 327, 328, 329, 334], "amplitud": [23, 31, 34, 35, 39, 263, 267, 302, 305, 307, 309, 310, 316, 322, 323, 324, 327, 328, 329, 334], "001": [23, 35, 312, 334], "section": [23, 35, 110, 111, 112, 313, 316, 317, 318, 320, 322, 323, 324, 325, 326, 328, 334], "exponetional_tap": [23, 35], "although": [23, 34, 35], "best": [23, 35, 52, 83, 114, 115, 312, 315, 316, 327, 329], "practic": [23, 35, 322, 325, 327, 328], "suppli": [23, 29, 34, 35, 81, 82, 83, 126, 257, 258, 259, 328], "being": [23, 33, 34, 35, 50, 51, 53, 55, 74, 76, 117, 213, 258, 312, 314, 317, 323, 324, 325, 327, 328, 334], "code": [23, 35, 117, 312, 313, 314, 315, 316, 317, 318, 322, 323, 327, 335], "attempt": [23, 34, 35, 312, 314, 318, 323, 327, 328, 334], "find": [23, 35, 81, 123, 302, 312, 315, 316, 318, 321, 325, 329, 334], "ring": [23, 35], "suggest": [23, 35, 316, 317, 322, 335], "most": [23, 35, 50, 315, 316, 322, 323, 325, 327, 328, 334, 335], "logic": [23, 35, 312], "choic": [23, 35], "refer": [23, 28, 29, 34, 35, 40, 50, 74, 88, 188, 189, 193, 195, 196, 250, 252, 254, 257, 258, 259, 305, 311, 312, 314, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "zvonkin": [23, 35], "m": [23, 31, 35, 88, 110, 111, 112, 126, 253, 282, 283, 285, 292, 305, 307, 311, 315, 322, 323, 324, 325, 327], "2015": [23, 35, 317], "check": [23, 31, 33, 34, 35, 81, 312, 313, 314, 317, 320, 321, 326, 334], "physic": [23, 35, 74, 87, 88, 312, 313, 318, 322, 324, 325, 329, 334, 335], "qualiti": [23, 31, 35, 117, 185, 305, 321, 326, 328, 334], "linear": [23, 28, 33, 35, 57, 74, 110, 111, 119, 123, 211, 213, 240, 246, 312, 313, 315, 316, 317, 324, 325, 328, 329, 334], "electr": [23, 35, 126], "network": [23, 35], "model": [23, 31, 35, 46, 50, 58, 73, 88, 90, 92, 108, 110, 117, 119, 123, 125, 126, 158, 304, 305, 314, 316, 318, 319, 320, 322, 323, 324, 325, 327, 329], "master": [23, 35], "Theses": [23, 35], "missouri": [23, 35, 311], "scienc": [23, 35, 292], "scholar": [23, 35], "mine": [23, 35], "scholarsmin": [23, 35], "mst": [23, 35], "edu": [23, 35], "masters_thes": [23, 35], "7490": [23, 35], "fft": [23, 28, 33, 34, 35, 88, 249, 250, 254, 263, 312, 317, 322, 324, 326], "norm": [23, 33, 34, 35, 312, 318], "backward": [23, 33, 34, 35], "scipy_rfft_kwarg": [23, 34], "convert": [23, 28, 31, 34, 35, 117, 123, 240, 305, 307, 317, 319, 322, 325, 334], "frequenc": [23, 29, 31, 32, 33, 34, 35, 39, 40, 48, 74, 85, 86, 88, 97, 101, 102, 126, 171, 193, 195, 197, 198, 206, 233, 238, 243, 245, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 263, 267, 280, 302, 303, 304, 305, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 325, 326, 328, 329, 335], "normal": [23, 28, 29, 33, 34, 35, 50, 58, 117, 119, 251, 257, 312, 317, 322, 323, 325, 334], "comput": [23, 29, 31, 33, 34, 35, 40, 50, 53, 62, 63, 66, 74, 79, 81, 82, 84, 88, 110, 123, 126, 181, 183, 184, 191, 193, 195, 200, 201, 211, 213, 214, 215, 220, 225, 233, 245, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 292, 302, 303, 304, 305, 309, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 326, 328, 335], "rfft": [23, 34, 312, 317, 327, 328], "transfer": [23, 29, 33, 34, 35, 40, 74, 126, 173, 193, 257, 258, 259, 314, 316, 327], "impusl": 23, "rtype": [23, 35], "transferfunctionarrai": [23, 29, 34, 40, 74, 88, 189, 193, 195, 197, 198, 206, 207, 312, 316, 323, 327, 334], "find_end_of_ringdown": 23, "ringdown": 23, "smooth": [23, 317], "move": [23, 34, 35, 312, 315, 317, 318, 322, 323, 324, 325, 327, 334], "averag": [23, 34, 35, 40, 233, 250, 254, 263, 312, 314, 317, 327, 328, 334], "filter": [23, 35, 263, 301, 303, 304, 317, 328, 334], "minimum": [23, 28, 29, 31, 34, 35, 52, 193, 195, 263, 305, 312, 323, 328, 329, 334], "pair": [23, 28, 35, 88, 318, 324, 327, 334], "median": 23, "possibl": [23, 28, 34, 42, 43, 312, 316, 323, 325, 334], "end_of_ringdow": 23, "width": [24, 25, 29, 50, 88, 94, 97, 111, 328, 329, 334], "height": [24, 25, 50, 88, 111, 272, 323, 329, 334], "dpi": [24, 25], "100": [24, 25, 31, 159, 305, 312, 313, 315, 317, 323, 324, 325, 327, 328, 334], "figurecanvasqtagg": [24, 25], "subplot": [25, 28, 31, 33, 35, 88, 312, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "ignore_subplot": 25, "mode": [26, 35, 50, 53, 74, 88, 97, 101, 102, 114, 115, 117, 119, 170, 188, 193, 195, 202, 251, 253, 313, 314, 317, 318, 319, 320, 321, 323, 326, 327, 328, 329, 335], "cmif": [26, 35, 97, 197, 206, 316, 317, 334], "nmif": [26, 35, 317, 334], "n": [28, 29, 34, 50, 110, 112, 126, 213, 257, 258, 292, 305, 317, 322, 323, 324, 325, 327, 328, 334], "dimension": [28, 50, 71, 117, 195, 312, 324], "abscissa_spac": [28, 34], "space": [28, 29, 33, 34, 35, 52, 67, 86, 88, 126, 185, 213, 233, 238, 245, 298, 312, 316, 317, 318, 325, 327, 334], "valueerror": [28, 29, 33, 34, 35, 40, 50, 63, 71, 74, 78, 86, 88, 195, 211, 289], "evenli": [28, 35], "argmax": [28, 315, 316], "reduct": [28, 88, 312, 313, 319, 320, 323, 334], "argmax_arg": 28, "argmax_kwarg": 28, "maximum": [28, 29, 31, 34, 35, 48, 50, 52, 55, 83, 88, 115, 185, 193, 195, 263, 302, 304, 305, 312, 315, 318, 323, 325, 328, 334], "absolut": [28, 31, 304, 305, 329], "unravel_index": 28, "self": [28, 29, 34, 74, 88, 117, 190, 315], "get": [28, 29, 41, 50, 52, 59, 74, 77, 88, 114, 115, 117, 119, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 327, 328, 329, 334, 335], "unflatten": 28, "argmin": [28, 312, 323, 329], "argmin_arg": 28, "argmin_kwarg": 28, "downsampl": [28, 312, 314, 317, 328], "factor": [28, 29, 31, 50, 55, 81, 117, 126, 195, 240, 251, 253, 263, 305, 307, 312, 314, 317, 323, 325, 334], "signal": [28, 29, 31, 33, 34, 35, 40, 88, 200, 201, 209, 233, 238, 245, 249, 254, 260, 263, 284, 301, 304, 305, 307, 309, 310, 312, 314, 316, 317, 322, 323, 324, 327, 328], "keep": [28, 49, 50, 52, 54, 74, 80, 88, 111, 114, 115, 117, 119, 312, 313, 314, 315, 316, 317, 318, 323, 324, 327, 329, 334, 335], "onli": [28, 29, 31, 34, 35, 41, 49, 50, 52, 54, 55, 58, 74, 81, 112, 114, 115, 117, 185, 193, 195, 233, 256, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "everi": [28, 55, 312, 315, 317, 325, 327, 334], "th": [28, 110, 117, 325, 334], "abcissa": 28, "kept": [28, 50, 114, 115, 123, 193, 195, 312, 314, 315, 316, 318, 325, 328], "extract_el": [28, 312, 314, 316, 322, 327, 328], "element": [28, 34, 46, 49, 50, 52, 57, 58, 65, 69, 74, 108, 110, 111, 112, 117, 119, 123, 164, 185, 268, 313, 315, 316, 318, 319, 320, 325, 328], "reduc": [28, 42, 43, 49, 50, 52, 54, 74, 88, 123, 312, 313, 314, 315, 316, 317, 319, 324, 325, 327, 328, 329, 334], "extract_elements_by_abscissa": [28, 312, 317, 323, 324, 327], "min_abscissa": 28, "max_abscissa": 28, "extract": [28, 88, 97, 181, 182, 185, 186, 213, 312, 313, 316, 317, 328, 329, 334], "within": [28, 31, 68, 305, 312, 316, 318, 325, 328, 334, 335], "rang": [28, 29, 31, 35, 305, 312, 316, 317, 318, 322, 323, 325, 327, 328, 329, 334], "static": [28, 29, 31, 34, 35, 47, 49, 50, 52, 54, 71, 74, 119, 190, 203, 304, 305, 313, 314, 315, 316, 318, 322, 323], "from_uff": [28, 50, 74, 335], "unv_data_dict": [28, 42, 43, 47, 49, 52, 54, 74, 78], "squeez": [28, 41, 42, 43, 246, 318, 322], "read_unv": [28, 42, 43, 47, 49, 50, 52, 54, 60, 61, 74, 78], "read": [28, 31, 34, 42, 43, 47, 49, 50, 52, 54, 60, 61, 74, 76, 78, 88, 117, 119, 127, 132, 135, 140, 141, 142, 143, 144, 145, 185, 305, 312, 317, 334, 335], "return_funct": [28, 41, 42, 43], "functiontyp": [28, 38, 317, 327, 334], "idx_by_ab": 28, "abscissavalueextractor": 28, "idx_by_el": 28, "abscissaindexextractor": 28, "interpol": [28, 29, 33, 35, 74, 305, 317], "interpolated_abscissa": 28, "kind": [28, 312, 317, 322, 323, 325, 327, 334], "kwarg": [28, 50, 51, 55, 74, 112, 117, 120, 124, 190, 243, 312], "interp1d": 28, "multi": [28, 35, 50, 55, 71, 196, 312, 317, 323, 328, 334], "spline": 28, "nearest": [28, 34], "up": [28, 34, 35, 40, 50, 68, 213, 314, 316, 319, 322, 324, 325, 327, 328, 334], "slinear": 28, "quadrat": [28, 123], "cubic": [28, 57], "previou": [28, 312, 314, 315, 318, 323, 324, 325, 326, 327, 328, 329, 334], "next": [28, 322, 324, 325, 327, 334], "zeroth": 28, "second": [28, 50, 51, 53, 55, 74, 79, 86, 88, 110, 114, 115, 117, 185, 213, 238, 245, 251, 253, 258, 259, 302, 305, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334, 335], "third": [28, 258, 259, 313, 316, 317], "simpli": [28, 34, 52, 74, 83, 88, 117, 123, 312, 314, 315, 316, 317, 318, 323, 325, 327, 328, 329, 334], "differ": [28, 29, 34, 35, 117, 119, 126, 251, 253, 257, 258, 304, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 327, 328, 334], "half": [28, 34, 302, 324, 327, 328, 334], "round": [28, 31, 305], "join": 28, "data_arrai": [28, 44, 132, 201, 317, 327, 334], "increment_abscissa": [28, 44], "togeth": [28, 34, 35, 44, 88, 89, 123, 313, 315, 317, 323, 325, 327, 334], "concaten": [28, 44, 88, 216, 312, 314, 315, 317, 318, 322, 323, 325, 327, 328, 334], "determin": [28, 34, 44, 142, 143, 313, 314, 315, 322, 323, 325, 327, 328, 329, 334], "how": [28, 31, 34, 44, 50, 53, 82, 123, 142, 143, 312, 313, 314, 315, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 329, 334], "handl": [28, 34, 44, 46, 73, 135, 268, 312, 314, 315, 316, 317, 318, 323, 327, 334], "left": [28, 29, 35, 44, 50, 55, 107, 182, 213, 312, 314, 317, 322, 323, 325, 328, 329, 334], "wa": [28, 33, 44, 50, 312, 313, 314, 315, 317, 318, 322, 323, 324, 325, 327, 328, 334], "origin": [28, 31, 34, 44, 50, 74, 80, 82, 117, 119, 185, 220, 271, 272, 273, 274, 312, 313, 314, 315, 318, 322, 323, 325, 328, 334], "increment": [28, 44, 74, 83, 315], "continu": [28, 34, 44, 323, 325, 328, 334], "max": [28, 301, 312, 323, 324], "max_arg": 28, "max_kwarg": 28, "min": [28, 312, 323], "min_arg": 28, "min_kwarg": 28, "num_coordin": 28, "one_axi": [28, 31, 33, 35, 323, 324], "subplots_kwarg": [28, 31, 33, 35, 88, 103, 104, 106, 197, 242, 323, 324], "plot_kwarg": [28, 29, 31, 33, 35, 48, 50, 53, 55, 74, 103, 104, 106, 242, 243, 312, 315, 316, 322, 325, 327], "matplotlib": [28, 31, 33, 35, 74, 88, 213, 305, 312, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "ax": [28, 29, 31, 33, 35, 50, 71, 74, 88, 228, 242, 289, 305, 312, 313, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "On": [28, 31, 33, 35, 312, 317, 328, 334], "reference_coordin": [28, 206, 316, 334], "reshape_to_matrix": 28, "matrix": [28, 29, 31, 34, 35, 47, 50, 55, 56, 70, 74, 81, 85, 88, 89, 110, 111, 114, 115, 117, 119, 123, 126, 181, 183, 184, 186, 193, 211, 212, 213, 216, 233, 238, 245, 250, 251, 253, 254, 256, 257, 258, 259, 289, 290, 304, 305, 312, 313, 314, 315, 316, 317, 318, 327, 328, 329, 334, 335], "row": [28, 29, 35, 71, 72, 74, 88, 110, 114, 115, 195, 213, 233, 238, 245, 257, 304, 312, 314, 315, 316, 322, 323, 324, 325, 327, 334], "column": [28, 29, 35, 71, 72, 74, 86, 114, 115, 181, 183, 195, 213, 233, 238, 245, 257, 292, 305, 312, 314, 315, 316, 317, 324, 325, 334], "output_arrai": [28, 35, 47, 49, 52, 54, 74, 78], "2d": [28, 52, 74, 88, 111, 114, 115, 117, 185, 211, 220, 233, 251, 253, 258, 312, 317, 323, 324, 327, 329, 334, 335], "aarrai": 28, "response_coordin": [28, 88, 129, 312, 316, 334], "npz": [28, 50, 65, 316, 317, 334], "to_imat_struct": 28, "setrecord": 28, "created": 28, "datetim": 28, "modifyd": 28, "ownernam": 28, "abscissadatatyp": 28, "abscissatypequ": 28, "abscissaaxislab": 28, "abscissaunitslab": 28, "ordnumdatatyp": 28, "ordnumtypequ": 28, "orddendatatyp": 28, "orddentypequ": 28, "ordinateaxislab": 28, "ordinateunitslab": 28, "zaxisdatatyp": 28, "zaxistypequ": 28, "zgeneralvalu": 28, "zrpmvalu": 28, "zordervalu": 28, "ztimevalu": 28, "uservalue1": [28, 155], "uservalue2": [28, 155], "uservalue3": [28, 155], "uservalue4": [28, 155], "samplingtyp": 28, "weightingtyp": 28, "windowtyp": 28, "amplitudeunit": 28, "octaveformat": 28, "octaveavgtyp": 28, "expdampingfact": 28, "pulsesperrev": 28, "measurementrun": 28, "loadcas": 28, "irigtim": 28, "imat": [28, 41, 50, 59, 74, 77], "toolbox": 28, "imat_fn": [28, 41], "faster": [28, 34, 322, 327], "to_imat_struct_arrai": 28, "descript": [28, 34, 50, 54, 69, 97, 312, 316, 325, 334], "data_dict": 28, "specificdatatyp": 28, "unknown": [28, 32, 50, 74, 78], "typequ": 28, "verbos": [28, 31, 123, 144, 145, 299, 305, 308], "slower": [28, 323], "record": [28, 117, 312, 328], "date": [28, 117], "now": [28, 74, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 327, 328, 329, 334], "owner": 28, "associ": [28, 254, 312, 322, 323, 324, 325, 327, 334], "qualifi": [28, 154, 335], "unit": [28, 31, 34, 110, 114, 115, 151, 251, 253, 304, 305, 307, 312, 315, 323, 324, 325, 327, 335], "numer": [28, 312, 314, 315, 317, 318, 324, 325, 327, 334], "denomin": [28, 323, 325], "output_struct": 28, "to_shape_arrai": 28, "abscissa_valu": 28, "shapearrai": [28, 50, 53, 55, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 189, 195, 312, 313, 314, 315, 316, 318, 325, 334, 335], "closest": [28, 50, 52, 213, 312, 313, 318], "common": [28, 34, 74, 86, 127, 315, 316, 323, 325, 327, 328, 334], "across": [28, 34, 315, 322, 325, 328, 334], "duplic": [28, 88, 312, 325, 334], "occur": [28, 31, 34, 50, 74, 142, 249, 302, 305, 316, 317, 322, 323, 324, 325, 327, 328, 334], "shape_matrix": [28, 85, 114, 115, 228, 312, 314, 315, 325, 329, 334], "transform_coordinate_system": [28, 74, 312, 318], "original_geometri": [28, 74, 318], "new_geometri": [28, 74, 80, 318], "node_id_map": [28, 50, 74, 79, 84, 86, 313, 318], "perform": [28, 31, 34, 35, 50, 55, 74, 81, 88, 187, 250, 253, 254, 302, 305, 312, 313, 316, 317, 318, 319, 320, 323, 324, 326, 327, 328, 335], "transform": [28, 29, 33, 34, 35, 50, 56, 74, 87, 88, 123, 142, 143, 292, 313, 314, 315, 318, 322, 324, 325, 328, 329, 334, 335], "desir": [28, 31, 34, 74, 76, 88, 117, 251, 253, 263, 304, 305, 307, 312, 314, 317, 318, 327, 334], "id_map": [28, 50, 74, 86, 313, 318], "new": [28, 33, 34, 50, 53, 71, 74, 88, 89, 117, 119, 311, 312, 314, 316, 318, 328, 334], "do": [28, 29, 31, 33, 35, 40, 74, 86, 88, 305, 312, 313, 314, 315, 316, 317, 318, 321, 324, 325, 326, 327, 328, 334], "map": [28, 50, 57, 64, 74, 86, 117, 119, 313, 317, 318, 325, 327, 334], "mean": [28, 34, 35, 39, 40, 74, 88, 245, 312, 313, 314, 317, 322, 323, 324, 325, 327, 328, 334, 335], "validate_common_abscissa": 28, "allclose_kwarg": 28, "allclos": 28, "toler": [28, 29, 33, 34, 35, 83, 88, 185, 334], "zero_pad": 28, "num_sampl": [28, 265, 267, 304, 322, 323, 324, 327, 328], "update_abscissa": [28, 55], "use_next_fast_len": 28, "add": [28, 29, 34, 50, 53, 55, 123, 312, 314, 315, 316, 318, 323, 324, 325, 327, 328, 329, 334], "begin": [28, 50, 312, 315, 316, 317, 323, 324, 325, 327, 328, 334], "unless": [28, 41, 117, 119], "equal": [28, 29, 33, 34, 50, 74, 110, 253, 312, 315, 317, 323, 324, 325, 327, 334], "work": [28, 50, 180, 312, 313, 315, 316, 318, 320, 321, 322, 325, 327, 328, 329, 334, 335], "side": [28, 117, 213, 317, 318, 323, 324, 325, 327, 334], "both": [28, 34, 35, 81, 312, 313, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "split": [28, 34, 35, 40, 68, 325, 328], "total": [28, 312, 317, 324, 325, 334], "length": [28, 29, 31, 33, 34, 35, 40, 41, 50, 74, 80, 88, 94, 110, 111, 117, 119, 254, 257, 258, 259, 301, 302, 304, 305, 312, 314, 317, 327, 328, 329, 334], "final": [28, 33, 34, 35, 38, 123, 188, 263, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334, 335], "reach": [28, 323, 327, 334], "fast": [28, 314, 328], "next_fast_len": 28, "pad": [28, 33, 34, 35, 88, 317, 334], "power": [29, 30, 34, 314, 334, 335], "spectral": [29, 34, 173, 201, 314, 317, 327, 328, 334, 335], "densiti": [29, 34, 88, 110, 111, 112, 173, 233, 312, 314, 334, 335], "angl": [29, 74, 184, 186, 269, 271, 272, 276, 289, 314, 323, 324, 327, 334], "psd": [29, 314], "line": [29, 33, 34, 35, 50, 54, 55, 57, 88, 117, 126, 142, 143, 146, 193, 195, 233, 238, 245, 250, 251, 253, 254, 256, 257, 258, 263, 304, 312, 314, 316, 317, 322, 323, 324, 327, 328, 329, 334, 335], "coherencearrai": 29, "compare_asd": 29, "figure_kwarg": [29, 243, 314], "linewidth": [29, 97, 243, 314, 322, 324, 325, 327, 334], "cpsd_matric": 29, "diagon": [29, 34, 50, 71, 88, 257, 312, 314, 318, 324, 325], "cpsd": [29, 34, 200, 232, 234, 235, 237, 238, 242, 245, 247, 314, 335], "well": [29, 31, 46, 87, 132, 135, 268, 305, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 327, 328, 329, 334, 335], "level": [29, 34, 312, 314, 317, 323, 327, 328, 334], "ident": [29, 34, 35, 51, 71, 85, 86, 88, 193, 258, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 327, 328, 334], "kei": [29, 31, 144, 145, 182, 305, 316, 323, 324, 325, 334, 335], "between": [29, 34, 50, 52, 64, 79, 86, 88, 89, 126, 225, 254, 263, 292, 298, 304, 312, 313, 314, 315, 316, 317, 318, 324, 325, 327, 328, 329, 334], "error_summari": [29, 314], "summari": [29, 319, 320, 321, 326], "compar": [29, 34, 74, 84, 86, 97, 126, 313, 314, 315, 316, 317, 318, 320, 321, 323, 325, 326, 327, 328, 335], "against": [29, 31, 34, 312, 313, 314, 315, 316, 317, 318, 323, 327, 328, 334], "metric": [29, 185, 225, 314, 327, 328, 329, 334], "ey": [29, 50, 71, 314], "rm": [29, 34, 245, 261, 263, 266, 312, 314, 317, 327], "full_matrix": [29, 314], "breakpoint_frequ": [29, 246, 314], "breakpoint_level": [29, 246, 314], "breakpoint_interpol": [29, 246], "lin": 29, "min_frequ": [29, 34, 35, 193, 195, 197, 198, 206, 246], "max_frequ": [29, 34, 35, 97, 106, 193, 195, 197, 198, 206, 246], "construct": [29, 38, 41, 50, 59, 65, 74, 77, 289, 298, 312, 313, 314, 315, 317, 318, 323, 324, 327, 328, 334, 335], "full": [29, 34, 71, 92, 233, 312, 313, 315, 316, 318, 324, 325, 327, 328, 334], "squar": [29, 88, 112, 245, 251, 253, 257, 292, 314, 317, 318, 325, 327, 334], "asd": [29, 236], "breakpoint": [29, 305, 314], "low": [29, 193, 195, 298, 313, 315, 317, 323, 325, 327, 328], "below": [29, 312, 314, 315, 316, 317, 322, 327, 328, 334], "high": [29, 35, 193, 195, 298, 312, 313, 315, 317, 323, 325, 328, 329, 334], "abov": [29, 56, 57, 67, 69, 85, 312, 313, 322, 323, 324, 325, 327, 328, 329, 334], "invalid": [29, 35, 50, 74, 86, 315], "inconsist": 29, "generate_time_histori": [29, 314], "time_length": [29, 323], "output_oversampl": [29, 238, 314], "nyquist": [29, 34, 263, 317, 328], "constant": [29, 31, 34, 110, 302, 305, 322, 323, 324, 325], "overlap": [29, 34, 35, 40, 88, 233, 254, 312, 313, 316, 317, 327, 328, 334], "techniqu": [29, 34, 114, 115, 257, 258, 315, 316, 319, 324, 325, 328, 329], "whole": [29, 318], "realiz": [29, 34, 238, 327, 328, 334], "longer": [29, 117, 317, 323, 325, 328, 334], "oversampl": [29, 88, 263, 312, 314, 317, 323, 327, 334], "bin": [29, 317, 328], "time_histori": [29, 334], "satisfi": [29, 31, 34, 213, 305, 314, 318, 325, 328], "timehistoryarrai": [29, 31, 33, 35, 39, 40, 50, 55, 74, 88, 132, 185, 201, 312, 314, 316, 317, 334, 335], "get_asd": 29, "mimo_forward": [29, 34, 314], "transfer_funct": [29, 34, 126], "forward": [29, 34, 314, 334], "mimo": [29, 34, 317, 319, 320], "problem": [29, 34, 257, 312, 314, 319, 321, 322, 326, 329, 335], "gxx": 29, "hxv": 29, "gvv": 29, "mimo_invers": [29, 34, 314], "standard": [29, 34, 257, 311, 317, 323, 327, 335], "response_weighting_matrix": [29, 34, 257, 314], "reference_weighting_matrix": [29, 34, 257], "regularization_weighting_matrix": [29, 34, 257, 258], "regularization_paramet": [29, 34, 35, 256, 257, 258, 314], "cond_num_threshold": [29, 34, 257], "num_retained_valu": [29, 34, 257, 259], "estim": [29, 34, 83, 211, 257, 311, 314, 316, 317, 327, 328, 334], "random": [29, 34, 135, 263, 312, 316, 319, 320, 322, 324, 327, 334], "vibrat": [29, 34, 135, 257, 258, 311, 317, 319, 320, 321, 322, 325, 334], "frf": [29, 34, 35, 40, 74, 88, 97, 106, 189, 193, 195, 197, 199, 200, 201, 206, 250, 251, 253, 254, 256, 257, 258, 259, 311, 312, 314, 317, 319, 322, 323, 324, 328, 329, 334, 335], "invers": [29, 34, 35, 253, 255, 256, 257, 258, 259, 314, 327, 335], "avail": [29, 34, 257, 312, 315, 326, 328, 334, 335], "basic": [29, 34, 257, 313, 320, 321, 322, 327, 329, 334], "pseudo": [29, 34, 257, 258, 259], "linalg": [29, 34, 35, 257, 312, 316, 318, 324, 325], "pinv": [29, 34, 35, 257], "rcond": [29, 34, 35, 88, 89, 257], "threshold": [29, 34, 35, 52, 81, 88, 206, 257, 293, 295, 318], "condit": [29, 34, 35, 52, 74, 88, 89, 114, 185, 257, 301, 314, 317, 318, 323, 327, 329, 334, 335], "tikhonov": [29, 34, 35, 256, 257, 258], "regular": [29, 34, 35, 256, 257, 258, 317], "truncat": [29, 33, 34, 35, 257, 259, 312, 317], "fix": [29, 34, 35, 88, 257, 259, 312, 313, 315, 317, 322, 323, 324, 325, 334], "singular": [29, 34, 35, 213, 256, 257, 259, 317, 325, 334], "sdpy": [29, 34, 257, 258, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334, 335], "weight": [29, 34, 193, 197, 206, 257, 258, 292, 303, 304, 334], "solv": [29, 34, 83, 195, 213, 257, 302, 312, 314, 316, 317, 318, 323, 327, 328, 334], "least": [29, 31, 88, 213, 257, 292, 305, 314, 318, 328, 334], "multipli": [29, 74, 257, 313, 316, 323, 325, 327, 329], "scalar": [29, 31, 245, 257, 305, 325, 329], "3d": [29, 50, 52, 114, 115, 185, 213, 220, 238, 245, 251, 253, 257, 258, 312, 317, 319, 325, 327, 334], "case": [29, 34, 74, 123, 257, 258, 259, 312, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "chosen": [29, 34, 74, 257, 259, 334], "vector": [29, 34, 35, 110, 117, 213, 216, 224, 257, 258, 259, 289, 290, 292, 313, 324, 325, 327, 334], "num_lin": [29, 34, 257, 258], "svd": [29, 34, 35, 257, 258, 292], "vari": [29, 34, 257, 316, 328, 334], "pseudoinvers": [29, 334], "wikipedia": [29, 34, 257, 258], "moor": [29, 34, 257], "penros": [29, 34, 257], "en": [29, 34, 257, 258], "wiki": [29, 34, 257, 258], "e2": [29, 34, 257], "80": [29, 34, 257, 312, 313, 315, 334], "93penrose_invers": [29, 34, 257], "tith": [29, 34, 257, 258], "d": [29, 34, 117, 126, 257, 258, 307, 315, 321, 326], "j": [29, 34, 110, 117, 257, 258, 315, 323, 325, 327, 329, 334], "thompson": [29, 34, 257, 258], "quantif": [29, 34, 257, 258], "born": [29, 34, 257, 258], "transmiss": [29, 34, 36, 92, 257, 258, 319, 320, 334], "pathsbi": [29, 34, 257, 258], "part": [29, 34, 35, 97, 106, 257, 258, 312, 317, 318, 321, 322, 323, 324, 325, 326, 334], "journal": [29, 34, 257, 258], "sound": [29, 34, 257, 258, 323], "volum": [29, 34, 50, 123, 257, 258, 312], "264": [29, 34, 257, 258, 334], "issu": [29, 34, 81, 257, 258, 312, 328, 334], "2003": [29, 34, 257, 258], "page": [29, 34, 123, 257, 258, 312, 314, 316, 320, 334], "433": [29, 34, 257, 258], "451": [29, 34, 257, 258], "issn": [29, 34, 257, 258], "0022": [29, 34, 257, 258], "460x": [29, 34, 257, 258], "doi": [29, 34, 257, 258, 311], "1016": [29, 34, 257, 258], "s0022": [29, 34, 257, 258], "02": [29, 31, 34, 94, 206, 251, 257, 258, 299, 305, 308, 312, 314, 315, 320, 321, 322, 324, 325, 327, 328, 329, 334], "01203": [29, 34, 257, 258], "ridg": [29, 34, 257, 258], "regress": [29, 34, 257, 258], "ridge_regress": [29, 34, 257, 258], "plot_asd": [29, 314], "plot_magnitude_coherence_phas": [29, 314], "plot_ax": 29, "sharex": [29, 242, 312, 315, 316, 322, 323, 324, 325, 327, 334], "sharei": [29, 242, 322, 323, 324, 325, 334], "logx": 29, "logi": 29, "magnitude_plot_kwarg": [29, 314], "coherence_plot_kwarg": [29, 314], "angle_plot_kwarg": [29, 314], "upper": [29, 181, 183, 193, 195, 213, 216, 298, 314, 334], "triangl": [29, 52, 57, 117, 119, 314, 317, 318, 334], "lower": [29, 193, 195, 312, 314, 323, 324, 327, 328, 334], "tick": 29, "push": [29, 323, 324, 325, 327], "anoth": [29, 123, 312, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 327, 328, 329, 335], "room": 29, "share": [29, 316, 324, 328, 334], "logarithm": [29, 33, 334], "logrithm": [29, 323], "keyward": 29, "plot_singular_valu": [29, 35], "min_freq": [29, 35, 206, 263, 317], "small": [29, 34, 35, 51, 312, 313, 317, 323, 325, 327, 328, 334, 335], "largest_singular_valu": [29, 35], "effect": [29, 34, 35, 74, 115, 256, 312, 314, 315, 317, 318, 323, 325, 327, 328, 329, 334, 335], "displai": [29, 35, 50, 53, 55, 312, 317, 334], "rmss": 29, "set_coherence_phas": [29, 314], "coherence_arrai": 29, "angle_arrai": 29, "maintain": [29, 312, 314, 323, 325], "full_matric": [29, 35], "compute_uv": [29, 35], "as_matrix": [29, 35], "matric": [29, 35, 74, 87, 88, 109, 110, 126, 181, 211, 212, 213, 215, 216, 232, 253, 312, 313, 314, 316, 318, 323, 324, 326, 327, 334, 335], "simpl": [29, 35, 91, 317, 320, 321, 322, 324, 325, 327, 328, 329], "hand": [29, 35, 312, 316, 317, 322, 323, 328, 334], "num_respons": [29, 35, 334], "num_refer": [29, 35, 334], "vh": [29, 35], "to_rattlesnake_specif": [29, 34], "coordinate_ord": [29, 34], "upper_warning_db": 29, "lower_warning_db": 29, "upper_abort_db": 29, "lower_abort_db": 29, "upper_warning_psd": 29, "lower_warning_psd": 29, "upper_abort_psd": 29, "lower_abort_psd": 29, "spectra": [30, 33, 34, 48, 173, 328, 335], "shock": [31, 34, 135, 303, 304, 311, 335], "sum_decayed_sin": 31, "sine_frequ": [31, 300, 305, 306, 307, 308, 309, 310], "sine_tone_rang": [31, 305, 308], "sine_tone_per_octav": [31, 305, 308], "sine_amplitud": [31, 300, 305, 306, 307, 308, 309, 310], "sine_decai": [31, 300, 305, 306, 307, 308, 309, 310], "sine_delai": [31, 300, 305, 306, 307, 308, 309, 310], "srs_damp": [31, 300, 305, 308], "03": [31, 34, 302, 303, 304, 305, 312, 313, 315, 317, 320, 321, 325], "srs_type": [31, 34, 300, 305, 308], "mmaa": [31, 34], "compensation_frequ": [31, 300, 305, 306, 308, 310], "compensation_decai": [31, 300, 305, 306, 308, 310], "95": [31, 57, 305, 308, 312, 313, 315, 334], "number_of_iter": [31, 305], "converg": [31, 83, 305, 313, 334], "error_toler": [31, 305], "05": [31, 34, 206, 261, 304, 305, 308, 312, 313, 314, 318, 320, 321, 334], "tau": [31, 305, 308], "num_time_const": [31, 305, 308], "decay_resolut": [31, 305, 308], "scale_factor": [31, 305, 308], "plot_result": [31, 305, 308], "srs_frequenc": [31, 305], "return_veloc": 31, "return_displac": 31, "return_sr": 31, "return_sine_t": 31, "sr": [31, 34, 303, 305, 335], "mani": [31, 34, 305, 312, 313, 314, 315, 317, 325, 327, 328, 329, 334, 335], "approach": [31, 85, 305, 312, 314, 315, 316, 318, 323, 325, 327, 328, 329, 334], "pleas": [31, 305], "document": [31, 95, 305, 312, 319, 334], "carefulli": [31, 305, 312], "understand": [31, 305, 312, 315, 316, 317, 324, 325, 334], "rate": [31, 34, 50, 55, 233, 238, 303, 304, 305, 307, 309, 310, 312, 314, 317, 324, 334], "tone": [31, 305, 307, 309, 310], "per": [31, 34, 50, 51, 53, 55, 110, 117, 119, 123, 126, 233, 238, 251, 253, 254, 263, 298, 305, 312, 313, 316, 323, 325, 327, 334], "octav": [31, 34, 298, 305], "formula": [31, 305, 315, 323, 325, 327], "initi": [31, 50, 51, 64, 74, 88, 301, 305, 312, 314, 316, 317, 324, 325, 329, 334], "optim": [31, 74, 83, 113, 305, 316, 319, 326, 334, 335], "divid": [31, 305, 323, 325, 327], "often": [31, 305, 312, 316, 317, 322, 323, 324, 325, 327, 328, 334], "motion": [31, 34, 50, 74, 111, 253, 281, 292, 305, 312, 314, 315, 320, 323, 325, 327, 329, 335], "63": [31, 57, 305, 313, 315, 325, 334], "equat": [31, 74, 88, 212, 213, 253, 281, 302, 305, 312, 314, 320, 323, 325, 327, 329, 335], "pi": [31, 74, 305, 315, 323, 324, 325, 327, 328, 334], "freq": [31, 242, 305, 312, 313, 315, 317, 334], "zeta": [31, 302, 305, 325], "fraction": [31, 34, 35, 40, 85, 88, 233, 254, 302, 303, 304, 305, 322, 323, 325, 327], "critic": [31, 34, 85, 251, 302, 303, 304, 305, 322, 323, 325], "damp": [31, 34, 39, 53, 74, 85, 86, 87, 88, 97, 101, 102, 126, 193, 195, 206, 251, 253, 302, 303, 304, 305, 312, 313, 314, 315, 316, 317, 318, 321, 322, 326, 327, 328, 329, 334, 335], "instead": [31, 33, 35, 50, 74, 88, 251, 253, 305, 312, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "delai": [31, 39, 249, 305, 307, 309, 310], "compon": [31, 34, 92, 263, 305, 312, 314, 318, 319, 323, 324, 325, 328], "calcul": [31, 34, 88, 89, 195, 302, 303, 304, 305, 312, 314, 317, 318, 325, 334], "po": [31, 304, 305], "acceler": [31, 32, 74, 88, 126, 193, 195, 251, 253, 303, 304, 305, 307, 312, 316, 317, 324, 325, 327, 334], "rel": [31, 33, 34, 83, 304, 305, 328, 334], "express": [31, 304, 305, 322, 323, 325, 327], "equival": [31, 74, 84, 88, 123, 290, 304, 305, 312, 315, 317, 325, 327, 328, 334], "primari": [31, 50, 58, 304, 305, 327], "residu": [31, 81, 82, 83, 193, 195, 197, 206, 302, 304, 305, 312, 317, 334], "largest": [31, 302, 304, 305, 329], "maximax": [31, 304, 305], "fn": [31, 304, 305], "compens": [31, 305, 310], "puls": [31, 34, 305, 310, 328, 334], "lowest": [31, 34, 114, 193, 195, 305, 325], "At": [31, 305, 312, 313, 315, 316, 317, 318, 322, 323, 324, 325, 327, 334], "prefer": [31, 34, 50, 58, 305, 312, 314, 323, 325, 334], "correct": [31, 83, 211, 305, 313, 315, 316, 317, 318, 327, 328, 334], "latter": [31, 305, 312, 316, 323, 325, 328, 334], "ensur": [31, 34, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 325, 327, 328, 334], "identifi": [31, 305, 313, 314, 316, 317, 322, 323, 325, 328, 334], "resolut": [31, 305, 323, 334], "known": [31, 191, 305, 322, 323, 325, 329, 334], "better": [31, 50, 55, 71, 85, 193, 305, 312, 317, 318, 322, 324, 325, 327, 328, 329, 334], "just": [31, 88, 305, 312, 315, 316, 318, 322, 323, 324, 325, 327, 328, 329, 334], "touch": [31, 305, 325], "veloc": [31, 32, 74, 88, 126, 193, 195, 251, 253, 305, 307, 324, 325, 334], "inch": [31, 305, 307], "386": [31, 305, 307], "089": [31, 305, 307], "meter": [31, 305, 307, 334], "80665": [31, 305, 307], "show": [31, 50, 51, 53, 55, 71, 97, 117, 119, 190, 305, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "tabl": [31, 74, 86, 98, 117, 132, 312, 313, 315, 316, 317, 325, 334, 335], "diagnost": [31, 305], "print": [31, 305, 312, 313, 315, 317, 318, 323, 324, 325, 334], "consol": [31, 305, 312, 316, 317, 323, 334, 335], "good": [31, 34, 50, 55, 312, 313, 314, 315, 316, 317, 323, 325, 327, 328, 329, 334], "sine_t": 31, "decayedsinet": [31, 39], "excitation_forc": 32, "heat_flux": 32, "mass": [32, 50, 57, 74, 85, 87, 88, 109, 110, 111, 126, 251, 253, 312, 313, 315, 317, 318, 321, 326, 327, 329, 334, 335], "pressur": 32, "reaction_forc": 32, "rpm": [32, 322], "sound_intens": 32, "sound_pow": 32, "sound_pressur": 32, "strain": [32, 57, 315, 322], "stress": [32, 57, 322, 323], "temperatur": 32, "ifft": [33, 35], "rtol": [33, 34], "atol": [33, 34], "1e": [33, 34, 83, 88, 89, 126, 293, 295, 314, 325, 328], "08": [33, 34, 83, 88, 89, 315], "scipy_irfft_kwarg": [33, 35], "abcsissa": [33, 34], "irfft": [33, 35], "notimplementederror": [33, 34, 74, 88], "interpolate_by_zero_pad": [33, 35], "time_response_padded_length": 33, "return_time_respons": 33, "back": [33, 34, 35, 302, 312, 313, 314, 316, 317, 318, 322, 323, 324, 325, 328, 334], "last": [33, 34, 35, 55, 74, 85, 181, 183, 213, 220, 312, 317, 322, 323, 325, 327, 328, 334], "becaus": [33, 34, 35, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "won": [33, 35, 318, 329], "accur": [33, 35, 312, 313, 314, 315, 317, 323, 327, 334], "anywai": [33, 35], "less": [33, 34, 35, 312, 313, 314, 323, 324, 325, 327, 328, 329, 334], "plot_spectrogram": 33, "pcolormesh_kwarg": 33, "shade": 33, "log_scal": 33, "spectrogram": 33, "pcolormesh": 33, "colormap": [33, 334], "burst_random_sign": 34, "dt": [34, 35, 74, 88, 185, 249, 254, 261, 262, 264, 266, 267, 304, 312, 317, 322, 323, 324, 325, 327, 328, 334], "signal_length": [34, 262, 264, 322], "signal_rm": [34, 263, 317], "frame": [34, 35, 40, 51, 53, 55, 97, 99, 101, 102, 106, 233, 254, 263, 312, 317, 327, 328, 334], "frequency_shap": 34, "on_fract": [34, 261], "delay_fract": [34, 261], "ramp_fract": [34, 261], "comment1": [34, 38, 39, 85, 312, 313, 315, 316, 334], "comment2": [34, 38, 39, 85, 312, 315, 316, 334], "comment3": [34, 38, 39, 85, 312, 315, 316, 334], "comment4": [34, 38, 39, 85, 312, 315, 316, 334], "comment5": [34, 38, 39, 85, 312, 316, 334], "burst": 34, "nonzero": [34, 323, 325], "highest": [34, 193, 195, 325, 334], "broadcast": [34, 38, 312, 324, 334, 335], "portion": [34, 50, 65, 81, 88, 126, 312, 313, 314, 316, 317, 325, 327, 328, 334, 335], "essenti": [34, 51, 314, 317, 328], "repeat": [34, 111, 112, 142, 312, 313, 316, 317, 323, 325, 327, 328], "accept": [34, 50, 114, 115, 312, 313, 314, 316, 317, 323, 324, 328, 334], "activ": [34, 328], "measur": [34, 35, 40, 74, 82, 303, 312, 314, 317, 318, 322, 323, 324, 325, 326, 327, 328, 329, 334], "befor": [34, 254, 302, 312, 317, 323, 324, 328, 334], "start": [34, 48, 50, 53, 55, 298, 312, 314, 315, 316, 317, 318, 323, 324, 325, 327, 328, 334], "ramp": [34, 303, 304, 316, 328, 334], "off": [34, 50, 55, 312, 314, 318, 323, 324, 325, 327, 328], "comment": [34, 38, 39, 53, 85, 312, 313, 315, 325, 334], "describ": [34, 38, 39, 53, 238, 316, 322, 325, 327, 334], "chirp_sign": [34, 322], "start_frequ": [34, 48], "end_frequ": [34, 48], "amplitude_funct": 34, "force_integer_cycl": [34, 262], "chirp": [34, 322, 334], "sweep": [34, 322], "stop": [34, 53, 316, 317, 325, 327, 328, 334], "long": [34, 312, 317, 322, 325, 327, 328, 334], "forc": [34, 74, 88, 126, 251, 285, 313, 314, 315, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 334, 335], "cycl": [34, 251, 253, 302, 323, 325, 328], "adjust": [34, 35, 53, 55, 249, 314, 334], "samples_per_fram": [34, 233, 312, 316, 317, 334], "averages_to_keep": [34, 233], "only_asd": [34, 233], "percent": [34, 74, 86, 323, 334], "50": [34, 35, 40, 48, 50, 55, 233, 254, 304, 313, 314, 315, 317, 322, 323, 324, 325, 327, 328, 329, 334], "autospectr": [34, 233], "cpsd_arrai": 34, "cross": [34, 110, 111, 112, 290, 318, 323, 324, 325, 327, 335], "Be": 34, "awar": [34, 325, 328, 334], "period": [34, 328], "mai": [34, 35, 40, 263, 312, 313, 314, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "out": [34, 83, 185, 312, 313, 314, 316, 317, 318, 320, 322, 323, 324, 325, 327, 328, 334], "spectrumarrai": 34, "find_signal_shift": 34, "other_sign": 34, "compute_subsample_shift": 34, "good_line_threshold": 34, "01": [34, 48, 53, 197, 206, 312, 313, 315, 317, 318, 320, 321, 325, 327, 328, 329, 334], "shift": [34, 35, 50, 249, 317, 322, 323, 328], "amount": [34, 50, 51, 88, 249, 314, 315, 317, 323, 324, 325, 327, 328, 329, 334], "featur": [34, 312, 314, 317, 323, 324, 325, 327, 334, 335], "earlier": [34, 325], "To": [34, 35, 57, 74, 117, 119, 123, 312, 315, 316, 317, 318, 320, 323, 324, 325, 327, 329, 334], "align": [34, 50, 58, 74, 84, 312, 313, 327, 328], "take": [34, 87, 181, 249, 254, 263, 312, 313, 315, 316, 317, 322, 323, 325, 327, 328, 334], "shift_sign": 34, "subsampl": 34, "ignor": [34, 88, 314, 315, 325, 327], "time_shift": 34, "from_exodu": [34, 50, 74, 312, 313, 316, 317, 318, 335], "exo": [34, 50, 58, 74, 76, 119, 120, 312, 313, 316, 317, 318, 335], "x_disp": [34, 74, 76, 88], "dispx": [34, 74, 76, 88, 316, 317], "y_disp": [34, 74, 76, 88], "dispi": [34, 74, 76, 88, 316, 317], "z_disp": [34, 74, 76, 88], "dispz": [34, 74, 76, 88, 316, 317], "x_rot": [34, 74, 76, 88], "y_rot": [34, 74, 76, 88], "z_rot": [34, 74, 76, 88], "timestep": [34, 55, 74, 76, 88, 117, 119, 316, 317, 334], "exodu": [34, 50, 58, 74, 76, 88, 116, 119, 123, 313, 317, 318, 319, 335], "exodusinmemori": [34, 50, 58, 74, 76, 88, 117, 123, 312, 316, 335], "denot": [34, 74, 76, 84, 117, 181, 183, 213, 312, 313, 317, 323, 324, 325, 327, 334], "nodal": [34, 74, 76, 110, 117, 119, 173, 329, 335], "haversine_sign": 34, "pulse_width": [34, 264], "pulse_tim": [34, 264], "pulse_peak": [34, 264], "haversin": 34, "With": [34, 312, 313, 314, 316, 317, 318, 328, 329, 334, 335], "peak": [34, 302, 317, 322, 323, 324, 325, 329, 334], "convolut": 34, "impulseresponsefunctionarrai": [34, 35], "immedi": [34, 312, 317, 328, 334], "don": [34, 302, 312, 316, 318, 322, 325, 327, 328, 334], "time_method": 34, "single_fram": 34, "cola_frame_length": 34, "cola_window": 34, "hann": [34, 312, 314, 317, 328, 334], "cola_overlap": 34, "zero_pad_length": 34, "inverse_method": 34, "domain": [34, 311, 312, 317, 322, 324, 325, 328, 334], "transient": [34, 50, 55, 201, 312, 319, 320, 322, 323, 324, 325, 327, 328, 334], "fourier": [34, 35, 328, 334], "deconvolut": 34, "ones": [34, 318, 329, 334], "transer_funct": 34, "encompas": 34, "entir": [34, 119, 185, 312, 314, 315, 323, 325, 327, 328, 334, 335], "cola": 34, "seri": [34, 323, 334], "f": [34, 252, 253, 315, 317, 321, 323, 324, 325, 326, 327, 328, 329], "df": [34, 238, 245, 312, 334], "procedur": [34, 46, 73], "pre": [34, 325, 328], "post": [34, 325], "avoid": [34, 50, 312, 313, 318, 324], "wrap": [34, 119, 324], "around": [34, 35, 119, 185, 193, 195, 312, 317, 322, 324, 334], "determine_zero_pad_length": 34, "Not": [34, 117], "requir": [34, 50, 74, 112, 117, 250, 254, 263, 312, 313, 314, 316, 317, 318, 323, 324, 325, 326, 327, 335], "target": [34, 312, 317, 334], "trace": [34, 322], "h": [34, 112, 126, 250, 251, 252, 253, 254, 314, 324, 325, 327, 328], "add_method": 34, "overlap_and_add": 34, "functions_to_overlap": 34, "overlap_sampl": 34, "other": [34, 74, 81, 84, 123, 201, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "segment": [34, 324], "metadata": [34, 315, 316, 325], "need": [34, 50, 65, 74, 84, 123, 249, 312, 313, 315, 316, 317, 322, 323, 324, 325, 327, 328, 334], "No": [34, 35, 40, 250, 254, 324, 325, 327, 328], "sure": [34, 312, 316, 317, 318, 322, 324, 327, 334], "pseudorandom_sign": [34, 317], "different_r": 34, "pseudorandom": [34, 327, 334, 335], "pulse_sign": 34, "sine_expon": [34, 264], "cosin": [34, 323], "expon": [34, 325], "random_sign": [34, 317], "remove_rigid_body_mot": 34, "remov": [34, 52, 114, 115, 312, 316, 317, 323, 325, 327, 328, 334], "rigid": [34, 50, 57, 81, 82, 83, 292, 313, 315, 319, 324, 325, 327, 334], "bodi": [34, 50, 81, 82, 83, 126, 313, 315, 319, 323, 325, 327, 334], "step": [34, 50, 55, 74, 88, 117, 254, 302, 312, 313, 314, 315, 316, 317, 318, 322, 323, 325, 327, 334], "subtract": [34, 82, 312, 318, 327], "util": [34, 314, 327, 329, 334], "theorem": [34, 263], "caus": [34, 312, 323, 324, 328, 334], "shifted_sign": 34, "sine_sign": 34, "sinusoid": [34, 279, 307, 309, 310, 312, 323, 324, 326, 328], "split_into_fram": 34, "frame_length": [34, 88, 327, 328], "check_cola": 34, "allow_fractional_fram": 34, "neither": 34, "quarter": [34, 327, 328], "array_lik": 34, "get_window": 34, "dft": 34, "directli": [34, 312, 313, 315, 317, 318, 323, 324, 325, 327, 329, 334], "compat": 34, "remain": [34, 312, 315, 316, 322, 323, 324, 325, 334], "discard": [34, 123, 185, 199, 312, 315, 317, 318, 325, 329, 334], "num_fram": [34, 334], "num_point": 34, "points_per_octav": [34, 298], "encod": [34, 312, 334], "srss": [34, 304], "extra": [34, 74, 144, 145, 312, 314, 317, 318, 328, 334], "front": 34, "shockresponsespectrumarrai": 34, "charact": [34, 312, 334], "stft": 34, "short": [34, 323, 325, 328], "frame_abscissa": 34, "center": [34, 50, 312, 317, 323, 334], "min_tim": [34, 137, 138, 139], "max_tim": [34, 137, 138, 139], "compute_cmif": [35, 334], "track": [35, 97, 106, 313, 314, 323, 324, 334], "imag": [35, 51, 53, 55, 97, 98, 106, 185, 211, 213, 323, 324, 327, 328, 334, 335], "modeindicatorfunctionarrai": 35, "compute_mif": 35, "mif_typ": [35, 197, 206], "mif_arg": [35, 197], "mif_kwarg": [35, 197], "mmif": [35, 317, 334], "compute_": 35, "mif": 35, "compute_mmif": [35, 334], "mass_matrix": [35, 230], "compute_nmif": [35, 334], "delay_respons": 35, "had": [35, 312, 318, 325, 334], "been": [35, 117, 119, 220, 313, 314, 315, 317, 318, 322, 323, 328, 329, 334, 335], "shifted_transfer_funct": 35, "convers": 35, "wrapper": 35, "wiser": 35, "from_time_data": [35, 312, 316, 327, 334], "reference_data": [35, 40], "response_data": [35, 40, 317], "samples_per_averag": [35, 40, 254, 316, 327], "h1": [35, 40, 250, 254, 317, 328], "timedata2frf_kwarg": [35, 40], "treat": [35, 40, 74, 313, 317, 325, 327], "1d": [35, 40, 88, 114, 115, 117, 251, 253, 254, 263, 312, 334], "coeffici": [35, 40, 74, 85, 254, 301, 303, 316, 317, 324, 325, 329, 334], "obtain": [35, 40, 50, 74, 254, 312, 313, 314, 315, 316, 317, 323, 324, 328, 334], "timedata2frf": [35, 40], "warn": [35, 117, 119, 257, 258, 259, 315, 328], "appear": [35, 312, 313, 317, 322, 324, 327, 328, 334], "irf_padded_length": 35, "return_irf": 35, "plot_cond_num": 35, "number_retained_valu": 35, "condition_numb": 35, "reciproc": [35, 325], "substructure_by_constraint_matrix": 35, "dof": [35, 111, 126, 312, 313, 314, 315, 323, 324, 325, 329, 334, 335], "constraint_matrix": [35, 88, 318], "substructur": [35, 88, 92, 319, 320, 335], "constraint": [35, 50, 57, 58, 88, 89, 195, 313, 315, 318, 320, 328], "constrained_frf": [35, 334], "constrain": [35, 88, 89, 317, 318, 334], "substructure_by_coordin": [35, 88, 334], "dof_pair": [35, 88, 334], "constain": 35, "ground": [35, 57, 88, 323, 324, 325], "cannot": [35, 312, 313, 316, 318, 324, 325, 328, 334], "quantiti": [37, 53, 55, 315, 322, 324, 327, 329, 334], "data_typ": [38, 171, 334], "obj": 38, "wave": [39, 263, 312, 317, 322, 323, 324, 327, 328, 334], "sinet": 39, "imat_fn_struct": 41, "In": [41, 50, 59, 74, 77, 311, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 326, 327, 328, 329, 334], "oper": [46, 73, 312, 315, 316, 317, 318, 327, 334, 335], "subcompon": [46, 268], "tracelin": [46, 50, 54, 65, 69, 177, 268, 315, 316, 318, 325, 335], "coordinate_system_arrai": 47, "u40": [47, 54, 312, 334], "uint16": [47, 49, 52, 54], "cs_type": [47, 56, 168, 312, 334], "coordinatesytemarrai": 47, "deflection_shape_data": [48, 50], "background_plotter_kwarg": [48, 50, 53], "auto_upd": [48, 50, 53, 55], "undeformed_opac": [48, 50, 53, 55, 312, 313, 315, 316, 318], "starting_scal": [48, 50, 53], "deformed_opac": [48, 50, 53, 55, 312, 313, 316, 318], "num_curv": [48, 50, 55], "shapeplott": [48, 50, 327], "anim": [48, 50, 51, 53, 55, 316, 317, 323, 325, 334, 335], "deflect": [48, 50, 63, 201, 312, 315, 317, 322, 323, 325, 327], "backgroundplott": [48, 50, 51, 53, 55], "constructor": [48, 53, 71, 74], "opac": [48, 50, 53, 55], "undeform": [48, 50, 53, 55, 323], "curv": [48, 50, 55, 57, 74, 196, 202, 312, 316, 317, 322, 325, 334, 335], "selector": [48, 50, 55, 317], "modify_abscissa": [48, 55], "save_multiline_anim": 48, "frame_r": [48, 51, 53, 55, 99, 101, 102, 106], "phase_change_per_fram": 48, "087": 48, "frequency_change_per_fram": 48, "start_phas": 48, "individual_imag": [48, 51, 53, 55], "element_arrai": 49, "uint8": 49, "node_list": [49, 50, 52, 54], "defc": [50, 312, 325, 334], "disc": [50, 312, 325, 334], "coordinate_system": [50, 62, 63, 65, 66, 312, 318, 325, 334], "spatial": [50, 318], "support": 50, "nodearrai": [50, 67, 312, 313, 318, 325, 334, 335], "coordinatesystemarrai": [50, 52, 56, 62, 63, 66, 312, 325, 334, 335], "tracelinearrai": [50, 69, 312, 325, 334, 335], "elementarrai": [50, 52, 57, 312, 325, 334, 335], "add_el": 50, "elem_typ": [50, 117], "add_tracelin": [50, 312, 316, 318], "node_id": 50, "greater": [50, 259], "modif": [50, 314], "made": [50, 85, 91, 93, 123, 325, 328, 334], "place": [50, 183, 312, 315, 322, 323, 325, 329, 334], "camera_visu": 50, "k": [50, 74, 88, 110, 111, 126, 181, 183, 212, 213, 214, 215, 216, 217, 220, 253, 282, 283, 285, 315, 323, 324, 325, 327, 328], "rt": [50, 181, 183, 212, 213, 214, 215, 220], "image_s": 50, "camera": [50, 55, 180, 181, 182, 183, 185, 210, 211, 212, 213, 214, 215, 216, 220, 323, 328, 334, 335], "intrins": [50, 181, 182, 183, 211, 214, 215, 216, 220], "extrins": [50, 181, 182, 183, 211, 213, 214, 215, 216, 220], "distanc": [50, 81, 88, 89, 220, 318], "rai": 50, "project": [50, 52, 82, 181, 183, 216, 292, 312, 314, 316, 320, 327, 334, 335], "pinhol": [50, 220], "assign": [50, 72, 88, 117, 312, 313, 317, 318, 323, 324, 325], "geoemtri": 50, "compress_id": 50, "compress_nod": 50, "compress_el": 50, "compress_tracelin": 50, "compress_c": 50, "return_map": 50, "compress": [50, 323], "etc": [50, 117, 119, 316, 320, 334, 335], "contigu": 50, "done": [50, 258, 312, 314, 316, 317, 325, 327, 334], "mapped_geometri": 50, "node_map": 50, "old": [50, 314, 316], "traceline_map": 50, "element_map": 50, "cs_map": 50, "block": [50, 58, 88, 117, 119, 123, 201, 312, 313, 316, 317, 318, 323, 334], "preferred_local_orient": [50, 58, 312], "secondary_preferred_local_orient": [50, 58, 312], "local_nod": [50, 58], "import": [50, 58, 116, 313, 317, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 335], "flag": [50, 58, 185, 312, 317], "instrumnet": [50, 58], "finit": [50, 58, 74, 108, 123, 313, 315, 316, 318, 319, 320, 325, 328, 334], "sensor": [50, 56, 57, 58, 67, 69, 74, 83, 114, 115, 312, 314, 316, 318, 322, 323, 327, 329], "orient": [50, 58, 83, 110, 312, 316, 334], "perpendicular": [50, 58, 111, 312, 327, 328, 334], "surfac": [50, 57, 58, 88, 117, 119, 123, 312, 313, 318], "mount": [50, 58], "global": [50, 52, 58, 62, 63, 66, 83, 117, 312, 314, 317, 324, 325], "try": [50, 58, 83, 315, 318, 324, 325, 327, 328], "itself": [50, 58, 119, 312, 322, 323, 327, 334], "much": [50, 58, 312, 313, 314, 315, 322, 323, 324, 325, 327, 328, 329, 334], "secondari": [50, 58, 312], "parallel": [50, 58, 334], "from_imat_struct": [50, 74], "imat_fem_struct": [50, 59, 74, 77], "imat_fem": [50, 59], "unv_dict": [50, 60, 61], "readunv": [50, 60, 61, 74, 335], "global_deflect": 50, "deform": [50, 55, 315, 316, 322, 323, 325, 335], "global_node_coordin": 50, "respect": [50, 65, 73, 289, 312, 313, 314, 317, 318, 322, 323, 325, 334], "proper": [50, 65, 312, 314, 316], "map_id": 50, "traceline_id_map": 50, "element_id_map": 50, "coordinate_system_id_map": 50, "unchang": [50, 314, 317, 334], "geom_out": 50, "modify_id": [50, 315], "node_chang": [50, 315], "traceline_chang": 50, "element_chang": 50, "coordinate_system_chang": 50, "node_by_global_posit": 50, "global_position_arrai": 50, "nodarrai": [50, 52], "position_arrai": [50, 52], "overlay_geometri": [50, 318, 334], "color_overrid": [50, 74, 80, 313, 316, 318, 334], "return_node_id_offset": [50, 318, 334], "conflict": [50, 312, 313, 315, 318, 334], "iterbl": [50, 74, 80], "overrid": [50, 74, 80, 334], "node_offset": [50, 318], "node_s": [50, 312, 315, 316, 318, 322], "line_width": [50, 312, 315, 316, 318], "view_up": [50, 312, 316, 318], "view_from": [50, 315, 322], "plotter": [50, 51, 53, 312, 316, 317, 325, 327, 334], "show_edg": [50, 312, 318], "interact": [50, 108, 189, 317, 322, 325, 327, 334, 335], "pixel": [50, 55, 185, 213, 214, 215, 220], "edg": [50, 57, 314, 317, 334], "transpar": [50, 55], "complet": [50, 55, 146, 316, 317, 334], "opaqu": [50, 55], "invis": 50, "view": [50, 211, 317, 322, 325, 327], "draw": [50, 322, 323], "keyerror": 50, "referenc": [50, 312, 324, 325, 334], "face_mesh": 50, "mesh": [50, 117, 119, 123, 312, 313, 317, 318, 334], "point_mesh": 50, "solid_mesh": 50, "plot_coordin": [50, 312, 314, 315, 316, 322, 325, 327, 328, 334], "arrow_scal": [50, 312, 314, 325, 334], "arrow_scale_typ": 50, "bbox": 50, "label_dof": [50, 312, 314, 315, 316, 322, 325, 327, 334], "label_font_s": 50, "arrow_ends_on_nod": 50, "arrow": [50, 316, 334], "proport": [50, 85, 88, 317, 323, 325], "bound": [50, 334], "box": [50, 316, 317, 318, 334], "raw": [50, 312, 334], "font": 50, "tip": [50, 126, 312, 314, 315, 322, 328, 329, 334], "defualt": 50, "plot_deflection_shap": [50, 322, 327, 334], "editor": [50, 51, 55], "plot_shap": [50, 189, 198, 207, 312, 313, 315, 316, 317, 318, 325, 327, 334], "plot_transi": [50, 317, 322, 334], "displacement_data": [50, 55, 119], "displacement_scal": [50, 55, 322, 334], "frames_per_second": [50, 55], "transformation_shap": [50, 55, 88], "app": [50, 51, 55], "window_s": [50, 51, 55], "off_screen": [50, 51, 55], "allow_quit_keypress": [50, 51, 55], "toolbar": [50, 51, 53, 55, 325, 334], "menu_bar": [50, 51, 55], "update_app_icon": [50, 51, 55], "transientplott": [50, 334], "expand": [50, 55, 74, 117, 312, 316, 325], "run": [50, 55, 128, 313, 316, 317, 318, 319, 320, 322, 327, 328, 334, 335], "qapplic": [50, 51, 55], "1024": [50, 55], "768": [50, 55], "render": [50, 55], "screen": [50, 55, 312], "autom": [50, 55, 312, 317, 334], "screenshot": [50, 55, 334], "debug": [50, 55], "exit": [50, 55, 317], "press": [50, 55, 312, 317, 325, 334], "q": [50, 55, 119, 316, 325, 329, 334], "vtk": [50, 55], "qt": [50, 51, 55], "icon": [50, 55, 316], "logo": [50, 55], "pyvista": [50, 51, 55, 315], "titl": [50, 55, 99, 100, 103, 104, 105, 106, 117, 316, 327, 328], "multi_sampl": [50, 55], "mitig": [50, 55], "alias": [50, 55, 312, 328], "impact": [50, 55, 317, 327, 328], "line_smooth": [50, 55], "enabl": [50, 55, 119, 312, 317, 334], "smoth": [50, 55], "point_smooth": [50, 55], "polygon_smooth": [50, 55], "polygon": [50, 55], "actor": [50, 55], "rigid_body_shap": [50, 81, 82], "inertia": [50, 110], "cg": [50, 312], "principal_ax": 50, "analyt": [50, 81, 82, 83, 193, 312, 328, 329], "3x3": [50, 184, 186, 214, 215, 216, 220, 289], "moment": [50, 110, 312, 327], "graviti": [50, 312], "articl": [50, 88, 312, 316, 327], "those": [50, 73, 82, 144, 145, 312, 314, 316, 317, 318, 322, 324, 325, 327, 328, 329, 334, 335], "output_shap": [50, 195], "doesn": [50, 117, 119, 318, 325, 327, 328], "write_to_unv": [50, 74], "write_nod": 50, "write_coordinate_system": 50, "write_tracelin": 50, "write_el": 50, "dataset_2412_kwarg": 50, "dataset_2420_kwarg": 50, "write": [50, 74, 117, 119, 135, 140, 146, 316, 317, 323, 325, 327, 334, 335], "unvers": 50, "written": [50, 74, 117, 317, 323], "similar": [50, 74, 312, 313, 317, 322, 323, 324, 328, 334], "2411": [50, 335], "2420": [50, 335], "82": [50, 57, 312, 315, 334, 335], "2412": [50, 312, 334, 335], "app_window_class": 51, "mainwindow": 51, "howev": [51, 251, 253, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "save_rotation_anim": 51, "path": [51, 53, 55, 117, 132, 144, 145, 182, 312, 334, 335], "them": [51, 53, 55, 213, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 327, 329, 334], "gif": [51, 53, 55, 316, 325, 334], "boolean": [51, 53, 55, 334], "individu": [51, 53, 55, 56, 57, 67, 69, 316, 317, 325], "png": [51, 53, 55, 316], "img": [51, 53, 55], "node_arrai": 52, "by_grid": 52, "grid_spac": [52, 312], "x_min": 52, "y_min": 52, "z_min": 52, "x_max": 52, "y_max": 52, "z_max": 52, "grid": [52, 94, 312, 315, 318, 323, 324, 328], "approxim": [52, 312, 315, 323, 325, 327, 334], "minimun": 52, "by_posit": [52, 312, 313, 318], "def_c": [52, 67, 312, 334], "disp_c": [52, 67, 312, 334], "global_coordin": 52, "cs_arrai": 52, "project_to_minimum_plan": 52, "return_3d": 52, "plane": [52, 57, 81, 111, 312, 322, 327], "triangul": [52, 117, 119, 318], "projection_funct": 52, "return_element_arrai": 52, "element_color": 52, "condition_threshold": [52, 318], "delaunai": 52, "simplic": 52, "poorli": 52, "shape_nam": 53, "show_damp": 53, "geometryplott": [53, 55], "add_menu_bar": [53, 55], "bar": [53, 55, 57], "add_toolbar": [53, 55], "compute_displac": 53, "compute_scal": 53, "renorm": 53, "next_shap": 53, "increas": [53, 314, 317, 322, 323, 324, 325, 328], "play_anim": [53, 55], "plai": [53, 314, 317, 327, 328, 334], "prev_shap": 53, "decreas": [53, 317, 323], "save_anim": [53, 55, 316], "save_animation_all_shap": 53, "filename_bas": 53, "shape_": 53, "easili": [53, 312, 313, 315, 316, 323, 325, 328, 334], "produc": [53, 88, 312, 313, 314, 315, 316, 317, 318, 320, 323, 325, 327, 328, 329, 335], "actual": [53, 259, 312, 314, 315, 316, 318, 323, 325, 328, 334], "save_animation_from_act": 53, "select_complex": 53, "select_loop": 53, "select_scaling_0p25": [53, 55], "25x": [53, 55], "select_scaling_0p5": [53, 55], "5x": [53, 55, 334], "select_scaling_0p8": [53, 55], "8x": [53, 55, 334], "select_scaling_1": [53, 55], "reset": [53, 55], "select_scaling_1p25": [53, 55], "select_scaling_2p0": [53, 55], "2x": [53, 55, 263, 325, 334], "select_scaling_4p0": [53, 55], "4x": [53, 55, 334], "select_shap": 53, "select_speed_0p8": [53, 55], "speed": [53, 55, 325, 328, 334], "select_speed_1": [53, 55], "select_speed_1p25": [53, 55], "show_com": 53, "hide": 53, "stop_anim": [53, 55], "toggle_undeform": 53, "update_shap": 53, "update_shape_mod": 53, "elaps": 53, "traceline_arrai": 54, "fulli": [54, 317], "go_to_first_step": 55, "go_to_last_step": 55, "go_to_next_step": 55, "go_to_previous_step": 55, "play_animation_revers": 55, "start_tim": 55, "stop_tim": 55, "update_abscissa_revers": 55, "update_displac": 55, "update_selector": 55, "cartesian": [56, 312, 325, 334], "polar": [56, 110, 327], "spheric": [56, 63, 312, 325, 334], "here": [57, 312, 313, 314, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "rod": 57, "beam": [57, 88, 91, 93, 109, 110, 111, 112, 320, 322, 325, 329, 335], "parabol": 57, "31": [57, 312, 313, 315, 317, 325, 329, 334], "straight": 57, "pipe": 57, "32": [57, 312, 313, 315, 317, 325, 329, 334], "41": [57, 313, 315, 317, 325, 328, 329, 334], "42": [57, 126, 315, 325, 329, 334], "43": [57, 312, 315, 317, 325, 334], "44": [57, 126, 315, 317, 323, 325, 334], "quadrilater": 57, "45": [57, 74, 97, 313, 315, 317, 325, 327, 328, 329, 334], "46": [57, 312, 313, 315, 325, 334], "51": [57, 313, 315, 325, 329, 334], "52": [57, 312, 313, 315, 317, 325, 334], "53": [57, 312, 313, 315, 325, 334], "54": [57, 315, 325, 334], "55": [57, 313, 315, 325, 334, 335], "56": [57, 313, 315, 325, 334], "61": [57, 315, 317, 325, 329, 334], "plate": [57, 93, 325, 327, 328], "62": [57, 315, 325, 334], "64": [57, 312, 315, 325, 334], "65": [57, 315, 317, 325, 334], "66": [57, 312, 313, 315, 317, 325, 334], "71": [57, 312, 315, 317, 325, 327, 334], "membran": 57, "72": [57, 312, 315, 325], "73": [57, 312, 313, 315, 325], "74": [57, 312, 313, 315, 325], "75": [57, 103, 206, 312, 315, 323, 325, 334], "76": [57, 315, 317, 325], "81": [57, 312, 315, 317, 334], "axisymetr": 57, "solid": [57, 317, 334], "84": [57, 315, 317, 324, 325], "85": [57, 313, 315], "91": [57, 313, 315, 317], "thin": 57, "shell": 57, "92": [57, 312, 315, 317], "93": [57, 313, 315], "94": [57, 312, 315], "96": [57, 312, 313, 315, 317], "101": [57, 314, 315, 325, 334], "thick": [57, 112, 317, 322], "wedg": [57, 117, 119], "102": [57, 325, 329], "103": [57, 312, 315, 329], "104": 57, "brick": 57, "105": [57, 315], "106": 57, "111": [57, 322], "tetrahedron": 57, "112": 57, "113": [57, 315], "114": [57, 315], "115": [57, 315], "116": 57, "117": [57, 315], "118": 57, "121": [57, 315, 334], "122": 57, "136": 57, "spring": [57, 126, 321], "137": 57, "138": [57, 312], "139": 57, "141": 57, "damper": [57, 323, 324, 325], "142": [57, 312], "gound": 57, "151": [57, 335], "gap": [57, 316, 327, 334], "152": 57, "161": [57, 165], "lump": [57, 324], "171": [57, 323], "172": [57, 312], "181": 57, "191": 57, "plastic": 57, "cold": 57, "runner": 57, "192": [57, 312, 334], "hot": 57, "193": 57, "water": 57, "194": 57, "fountain": 57, "195": 57, "baffl": 57, "196": 57, "heater": 57, "201": [57, 314, 327, 334], "interfac": [57, 88, 140, 312, 313, 315, 317, 318, 320, 327, 334, 335], "202": 57, "203": 57, "204": 57, "face": [57, 117, 119, 123, 318], "208": 57, "212": 57, "axisymmetr": 57, "213": 57, "221": [57, 315], "222": 57, "231": 57, "232": [57, 325], "axisymentr": 57, "local_coord": 62, "local_deflect": 63, "global_point": 63, "cylindr": [63, 312, 325, 334], "from_id": [64, 318], "to_id": [64, 318], "global_coord": 66, "seq": 68, "sequenc": [68, 117, 186], "group": [68, 74, 312], "sublist": 68, "separ": [68, 316, 317, 327, 334], "help": [70, 81, 312, 315, 316, 318, 322, 324, 327, 334], "tool": [70, 125, 188, 200, 209, 248, 255, 312, 316, 317, 334, 335], "bookkeep": [70, 71, 312, 314, 315, 316, 318, 334], "nrow": 71, "ncol": 71, "is_complex": [71, 74], "argsort_coordin": 71, "row_indic": 71, "column_indic": 71, "row_coordin": [71, 72], "column_coordin": [71, 72], "num_coordinate_column": 71, "num_coordinate_row": 71, "show_colorbar": 71, "imshow_arg": 71, "colorbar": [71, 334], "imshow": [71, 213, 334], "sort_coordin": 71, "return_v": 71, "ndof": [74, 88, 315], "shape_typ": 74, "shape_arrai": [74, 75, 312, 316, 327], "complex_data_dtyp": 74, "compute_frf": [74, 322, 334], "displacement_deriv": [74, 88, 129, 193, 195, 197, 199, 206, 212, 314, 322, 323, 324, 325, 327, 329, 334], "deriv": [74, 88, 193, 195, 212, 302, 312, 323, 324, 325, 326, 334], "output_data": 74, "concatenate_dof": [74, 318], "initial_geometri": 74, "expansion_geometri": 74, "expansion_shap": 74, "expansion_coordin": 74, "return_coeffici": 74, "serep": [74, 316, 319], "expans": [74, 315, 316, 319], "fem": [74, 312, 316, 334], "typic": [74, 76, 85, 312, 316, 322, 325, 327, 328, 334], "rotx": [74, 76], "roti": [74, 76], "rotz": [74, 76], "imat_shp_struct": [74, 77], "imat_shp": [74, 77], "characterist": [74, 78, 322, 327, 328], "mode_t": 74, "table_format": [74, 86, 313, 315], "csv": 74, "frequency_format": [74, 86, 97, 103, 104, 106], "2f": [74, 86, 97, 101, 102, 103, 104, 315, 323], "damping_format": [74, 86, 97, 103, 104, 106, 313, 315, 317], "modal": [74, 79, 85, 88, 97, 103, 104, 126, 238, 251, 311, 314, 315, 317, 318, 319, 320], "rst": 74, "markdown": [74, 86, 313], "latex": [74, 86, 96, 316, 335], "ascii": 74, "modeshap": [74, 97, 325, 329, 334], "optimize_degrees_of_freedom": 74, "sensors_to_keep": [74, 114, 115, 312, 314, 329], "group_by_nod": 74, "ei": 74, "triaxial": [74, 114, 115, 312, 329], "acceleromet": [74, 114, 115, 312, 316, 322, 323], "independ": [74, 97, 115, 312, 314, 316, 317, 318, 322, 325, 327, 328, 329, 334, 335], "cond": 74, "overlay_shap": [74, 312, 313, 315, 316, 334], "comparit": [74, 80], "new_shap": [74, 80], "plot_frequ": 74, "interp_abscissa": 74, "interp_ordin": 74, "linestyl": 74, "marker": [74, 334], "mark": [74, 316], "postiion": [74, 312], "command": [74, 312, 325, 334], "real_data_dtyp": 74, "nodelist_or_coordinate_arrai": 74, "reduce_for_comparison": 74, "comparison_shap": 74, "repack": [74, 119, 316], "linearli": [74, 316, 325, 329], "go": [74, 197, 312, 315, 322, 323, 324, 327, 329, 334], "shape_align": [74, 313, 315], "shape_1": [74, 79, 84, 86, 312], "shape_2": [74, 79, 84, 86, 312], "alreadi": [74, 84, 88, 132, 312, 317, 318, 322, 328, 334], "stiff": [74, 87, 88, 109, 110, 111, 126, 253, 312, 313, 315, 317, 318, 323, 324, 325, 326, 327, 328, 329, 334, 335], "time_integr": [74, 88, 312, 314, 322, 323, 324, 325, 327, 334], "integr": [74, 88, 263, 281, 314, 317, 320, 322, 323, 324, 325, 327, 328, 335], "simul": [74, 92, 301, 303, 304, 312, 317, 319, 320, 323, 328, 334], "accuraci": [74, 313, 314, 315, 317, 327, 334], "10x": [74, 312, 314, 334], "higher": [74, 323, 324, 325, 327, 328, 334], "bandwidth": [74, 88, 246, 263, 312, 314, 317, 318, 325, 327, 328, 334], "interest": [74, 185, 312, 315, 317, 322, 323, 324, 325, 327, 328, 329, 334], "response_arrai": [74, 88], "reference_arrai": [74, 88], "to_real": 74, "force_angl": [74, 224], "7853981633974483": 74, "collaps": [74, 329, 334], "collapse_complex_to_r": 74, "missing_dofs_are_zero": 74, "miss": [74, 325, 327, 329, 334], "specific_data_typ": [74, 171], "load_case_numb": [74, 171], "unveris": 74, "yet": [74, 317, 318, 328, 334], "shape_unv": 74, "sdynpy_uff_dataset_55": 74, "assur": [79, 97, 117, 312, 314, 316, 334], "critera": [79, 318], "automac": 79, "mac_arrai": 79, "rigid_shap": [81, 82, 83, 334], "distance_numb": 81, "distance_yscal": 81, "residuals_to_label": 81, "return_shape_diagnost": 81, "rigid_shape_kwarg": [81, 82], "look": [81, 123, 193, 195, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "nomin": [81, 82, 83, 317, 323, 327, 334], "outlier": 81, "neighbor": 81, "penalti": [81, 314], "top": [81, 107, 213, 312, 316, 317, 318, 322, 323, 325, 334], "highlight": [81, 312, 314, 317, 323, 334], "diagnos": 81, "suspicious_channel": 81, "suspic": 81, "channel": [81, 114, 115, 132, 312, 314, 316, 328, 335], "investig": [81, 83, 312, 314, 315, 316, 317, 318, 324, 325, 327, 328, 334], "analytic_rigid_shap": 81, "uniqu": [81, 312, 315, 316, 318, 325, 327, 329, 334], "shape_matrix_exp": 81, "suspect_nod": 83, "new_cs_id": 83, "gtol": 83, "xtol": 83, "minim": [83, 316, 327], "nonlinear": [83, 317, 328], "give": [83, 302, 312, 314, 317, 318, 323, 325, 327, 328, 334], "newli": 83, "suspect": 83, "corrected_geometri": 83, "modal_mass": [85, 171, 312, 334], "transpos": [85, 312, 316, 325, 327, 329, 334], "itegr": 85, "natur": [85, 193, 195, 251, 312, 316, 317, 318, 322, 323, 325, 327, 328, 334], "percentag": 85, "02f": [86, 106], "mac_format": [86, 103], "0f": [86, 323], "percent_error_format": [86, 312, 334], "1f": [86, 97, 106, 322], "text": [86, 315, 322, 323, 329, 334], "comparison": [86, 102, 103, 312, 313, 314, 316, 319, 334], "mac": [86, 97, 312, 313, 314, 315, 316, 317, 318, 334], "output_str": 86, "necessari": [87, 142, 312, 313, 317, 327, 334], "intern": [87, 88, 238, 312, 315, 318, 323, 324, 325, 334], "state": [87, 88, 126, 301, 312, 317, 318, 322, 323, 324, 325, 327, 328, 334, 335], "improperli": [88, 318], "c": [88, 126, 213, 253, 282, 283, 285, 311, 315, 316, 318, 321, 323, 324, 325, 326], "stffness": 88, "assign_modal_damp": [88, 329, 334], "damping_ratio": [88, 193, 194, 195, 251, 286, 287], "num_nod": [88, 117, 329, 334], "rho": [88, 94, 111, 112], "nu": [88, 94, 111, 112], "materi": [88, 110, 111, 312, 329, 334], "lenghth": 88, "young": [88, 112], "modulu": [88, 110, 111, 112], "poisson": [88, 111, 112], "ratio": [88, 111, 112, 193, 195, 251, 316, 322, 323, 325, 327, 328, 334], "steel": [88, 112, 329, 334], "aluminum": [88, 112], "improp": [88, 289], "coordinate_node_offset": 88, "combint": 88, "b": [88, 112, 126, 197, 290, 300, 301, 303, 315, 318, 321, 323, 324, 325, 326], "literatur": [88, 334], "nullspac": [88, 89], "eigensolut": [88, 313, 314, 315, 316, 317, 318, 322, 325, 327, 328, 329, 334], "num_mod": [88, 315], "maximum_frequ": [88, 314, 315, 322, 325, 327, 328, 329, 334], "complex_mod": [88, 206], "return_shap": [88, 315], "frequency_respons": [88, 314, 323, 324, 327, 329, 334], "from_exodus_superel": [88, 313], "superelement_nc4": 88, "transformation_exodus_fil": 88, "reduce_to_external_surfac": 88, "superel": [88, 319, 320], "sierra": [88, 317, 318, 319, 320], "sd": [88, 317, 318, 319, 320], "netcdf4": [88, 117, 316], "extern": [88, 126, 312, 316, 317, 323, 324, 325], "bad": [88, 185, 328], "boundary_dof": [88, 313], "get_indices_by_coordin": 88, "ignore_sign": 88, "request": [88, 312, 335], "ndof_transform": 88, "reduction_transform": 88, "reduce_craig_bampton": [88, 315], "connection_degrees_of_freedom": 88, "num_fixed_base_mod": 88, "return_shape_matrix": [88, 315], "craig": [88, 319, 320], "bampton": [88, 319, 320], "form": [88, 126, 213, 251, 302, 312, 313, 315, 318, 322, 323, 324, 325, 327, 328, 334], "reduce_dynam": [88, 315], "condens": 88, "preserv": [88, 315], "reduce_guyan": [88, 315], "guyan": 88, "set_proportional_damp": 88, "mass_fract": 88, "stiffness_fract": 88, "simulate_test": [88, 327, 328], "num_averag": [88, 327, 328], "excit": [88, 260, 263, 312, 316, 319, 321, 322, 326], "excitation_level": 88, "excitation_noise_level": 88, "response_noise_level": [88, 327], "steady_state_tim": [88, 327], "excitation_min_frequ": [88, 328], "excitation_max_frequ": [88, 328], "signal_fract": [88, 328], "extra_time_between_fram": [88, 328], "integration_oversampl": [88, 129, 263, 312, 317, 322, 323, 324, 327, 334], "antialias_filter_cutoff_factor": 88, "antialias_filter_ord": 88, "generator_kwarg": 88, "spy": [88, 312, 318, 325], "figsiz": [88, 314, 315, 322, 323, 324, 325, 327, 334], "spy_kwarg": 88, "pyplot": [88, 213, 312, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "return_constrained_system": [88, 318], "substructure_by_posit": [88, 313, 315, 334], "distance_threshold": [88, 89, 318], "coloc": [88, 89], "consid": [88, 89, 312, 313, 314, 315, 322, 323, 325, 327, 328, 329, 334], "combined_system": [88, 89, 313, 318, 334], "combined_geometri": [88, 89, 313, 316, 318, 334], "substructure_by_shap": [88, 318], "constraint_shap": [88, 315], "connection_dofs_0": 88, "connection_dofs_1": 88, "sens": [88, 305, 315, 325], "basi": [88, 312, 315, 316, 318, 324], "initial_st": [88, 323, 324, 325], "to_state_spac": 88, "output_displac": 88, "output_veloc": 88, "output_acceler": 88, "output_forc": 88, "input_coordin": 88, "feedforward": [88, 126], "a_stat": 88, "b_state": 88, "c_state": 88, "d_state": 88, "transformation_matrix_at_coordin": 88, "return_valu": 88, "shape_indic": 88, "demonstr": [90, 91, 92, 93, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 334], "airplan": [91, 92, 314, 315, 319, 320, 322], "full_system": [92, 315], "full_geometri": [92, 313, 315], "transmission_system": 92, "shorter": [92, 117, 334], "wing": [92, 312, 314, 315, 322], "transmission_geometri": 92, "all_system": 92, "all_geometri": 92, "125": [94, 312, 322, 323, 325], "beam_height": 94, "beam_width": 94, "69000000000": 94, "33": [94, 112, 312, 313, 315, 317, 325, 334], "2830": [94, 112], "report": [96, 312, 316, 317, 334], "figure_basenam": [97, 316], "output_fil": [97, 316], "figure_basename_relative_to_latex": 97, "max_shap": [97, 106], "cmif_kwarg": [97, 106], "cmif_subplots_kwarg": 97, "mac_subplots_kwarg": [97, 103, 104], "mac_plot_kwarg": 97, "geometry_plot_kwarg": [97, 99, 101, 106, 316], "shape_plot_kwarg": 97, "save_animation_kwarg": [97, 99, 101, 102, 106], "latex_cmif_graphics_opt": 97, "latex_mac_graphics_opt": 97, "latex_shape_graphics_opt": 97, "loop": [97, 185, 238, 312, 313, 317, 318, 324, 327, 334], "latex_shape_subplot_opt": 97, "latex_max_figures_per_pag": 97, "latex_max_figures_first_pag": 97, "latex_cmif_capt": 97, "experiment": [97, 187, 193, 195, 316, 317, 320, 321, 323, 325, 327, 329, 334], "latex_cmif_label": 97, "fig": [97, 305, 312, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "latex_mac_capt": 97, "criterion": [97, 312, 314, 316, 334], "latex_mac_label": 97, "latex_shape_subcapt": 97, "hz": [97, 193, 195, 251, 253, 263, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "latex_shape_sublabel": 97, "latex_shape_capt": 97, "latex_shape_label": 97, "latex_shape_table_column": 97, "lllp": 97, "5in": 97, "latex_shape_table_capt": 97, "shown": [97, 312, 315, 316, 317, 318, 325, 328, 334], "brief": [97, 317, 327], "latex_shape_table_label": 97, "tab": [97, 312, 334], "modelist": 97, "powerpoint": [98, 316, 335], "present": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 312, 316, 317, 323, 325, 327, 328, 334, 335], "tedious": 98, "put": [98, 117, 312, 315, 322, 323, 324, 329, 334], "larg": [98, 117, 253, 312, 313, 315, 316, 317, 322, 323, 325, 327, 329, 334, 335], "animate_geometri": 99, "200": [99, 206, 312, 322, 323, 334], "content_slide_layout_index": [99, 101, 106, 316], "subtitl": [100, 105, 106, 316], "section_header_slide_layout_index": 100, "title_format": [101, 102], "text_format": [101, 102], "nfrequenc": [101, 102], "ndamp": [101, 102], "3f": [101, 102, 334], "plot_shape_kwarg": 101, "left_right": 101, "geometry_1": 102, "shapes_1": [102, 103, 230], "geometry_2": [102, 334], "shapes_2": [102, 103, 230], "geometry_plot_kwargs_1": 102, "plot_shape_kwargs_1": 102, "geometry_plot_kwargs_2": 102, "plot_shape_kwargs_2": 102, "two_content_slide_layout_index": 102, "shapes_1_label": 103, "shapes_2_label": 103, "axes_modifi": [103, 104], "03f": [103, 104], "matrix_plot_kwarg": [103, 104], "table_threshold": 103, "empty_slide_layout_index": [103, 104, 106, 316], "exp_data": 104, "fit_data": 104, "title_slide_layout_index": [105, 106, 316], "slide_width": 106, "slide_height": 106, "placehold": [107, 316], "bottom": [107, 317, 323, 334], "node_coord": 110, "element_connect": 110, "bend_direction_1": [110, 112], "ae": 110, "jg": 110, "ei1": 110, "ei2": 110, "mass_per_length": 110, "tmmi_per_length": 110, "elast": [110, 111, 312, 313, 329, 334], "nx3": 110, "mx2": 110, "mx3": 110, "bend": [110, 111, 325, 327], "product": [110, 290, 312, 325, 327, 328, 329], "axial": [110, 111], "area": [110, 185, 317, 334], "torsion": [110, 312, 325], "shear": 110, "i1": [110, 312, 334], "i2": [110, 328], "6nx6n": 110, "follow": [110, 123, 126, 312, 314, 316, 324, 334, 335], "disp_x_0": 110, "disp_y_0": 110, "disp_z_0": 110, "rot_x_0": 110, "rot_y_0": 110, "rot_z_0": 110, "disp_x_1": 110, "disp_y_1": 110, "disp_z_1": 110, "rot_x_1": 110, "rot_y_1": 110, "rot_z_1": 110, "disp_x_n": 110, "disp_y_n": 110, "disp_z_n": 110, "rot_x_n": 110, "rot_y_n": 110, "rot_z_n": 110, "nnode": 111, "simplifi": [111, 323, 325], "nelem": 112, "rectangular": [112, 313], "beamkm": [112, 335], "bend_direction_2": 112, "si": 112, "200e9": 112, "7850": 112, "kg": [112, 126], "69e9": 112, "candid": [113, 312, 314], "return_condition_numb": 114, "bundl": [114, 115], "new_shape_matrix": [114, 115], "inci": [114, 115], "returned_condition_numb": 114, "return_efi": [115, 312], "returned_efi": 115, "r": [117, 184, 186, 213, 216, 238, 292, 293, 312, 316, 323, 324, 334, 335], "num_dim": 117, "num_elem": 117, "num_block": 117, "num_node_set": 117, "num_side_set": 117, "clobber": [117, 119, 316], "open": [117, 132, 238, 312, 316, 317], "w": [117, 292, 314, 317], "close": [117, 312, 314, 316, 317, 318, 325, 328, 329, 334], "extract_sharp_edg": 117, "get_block_surfac": [117, 119], "block_id": [117, 119], "keep_midside_nod": [117, 119, 121, 123], "skin": [117, 119], "midsid": [117, 119], "element_block_inform": [117, 119], "element_typ": [117, 119, 122], "node_indic": [117, 119], "block_surface_connect": [117, 119], "block_surface_original_el": [117, 119], "quad4": [117, 119, 123], "tri3": [117, 119], "recov": [117, 119, 317, 323, 325, 327], "came": [117, 119, 328, 334], "tri": [117, 119, 316], "quad": [117, 119], "get_coord": 117, "retriev": [117, 324], "coord": [117, 214, 215, 317], "get_coord_nam": 117, "coord_nam": 117, "get_displac": 117, "displacement_nam": 117, "disp": [117, 214, 251, 253, 312, 323], "capital_coordin": 117, "get_elem_attr": 117, "num_attribut": 117, "masked_arrai": 117, "get_elem_blk_id": 117, "get_elem_blk_info": 117, "elements_in_block": 117, "nodes_per_el": 117, "attributes_per_el": 117, "get_elem_connect": 117, "num_nodes_per_el": 117, "get_elem_num_map": 117, "elem_num_map": 117, "get_elem_typ": 117, "get_elem_variable_nam": 117, "elem_var_nam": 117, "get_elem_variable_t": 117, "elem_var_t": 117, "num_element_vari": 117, "jth": 117, "ith": 117, "get_elem_variable_valu": 117, "name_or_index": 117, "element_index": 117, "elem_variable_valu": 117, "maskedarrai": 117, "get_element_property_nam": 117, "get_element_property_valu": 117, "get_global_variable_nam": 117, "global_var_nam": 117, "get_global_variable_valu": 117, "global_variable_valu": 117, "get_info_record": 117, "info_record": 117, "get_node_num_map": [117, 317], "node_num_map": 117, "get_node_set_dist_factor": 117, "dist_factor": 117, "get_node_set_id": 117, "ns_id": 117, "get_node_set_nam": 117, "ns_name": 117, "get_node_set_nod": [117, 317], "get_node_set_num_nod": 117, "get_node_variable_nam": 117, "node_var_nam": 117, "get_node_variable_valu": [117, 317], "node_index": 117, "node_variable_valu": 117, "get_qa_record": 117, "qa_record": 117, "nest": 117, "get_side_set_dist_factor": 117, "get_side_set_fac": 117, "sideset": 117, "get_side_set_id": 117, "ss_id": 117, "get_side_set_nam": 117, "exoud": 117, "ss_name": 117, "get_side_set_node_list": 117, "get_side_set_num_fac": 117, "num_fac": 117, "get_tim": 117, "time_arrai": 117, "load_into_memori": [117, 316], "memori": [117, 119, 123, 316, 334, 335], "netcdf": [117, 335], "upon": 117, "fexo": [117, 123, 312, 316, 318], "num_attr": 117, "attr_per_el": 117, "num_blk": 117, "num_dimens": 117, "num_elem_vari": 117, "num_elems_in_blk": 117, "elem_per_el": 117, "num_global_vari": 117, "num_node_vari": 117, "num_nodes_per_elem": 117, "nodes_per_elem": 117, "num_tim": 117, "put_coord_nam": 117, "put_coord": 117, "put_elem_blk_id": 117, "put_elem_blk_info": 117, "num_attrs_per_elem": 117, "shell4": 117, "hex8": [117, 123], "num_attrs_per_el": 117, "put_elem_num_map": 117, "put_elem_variable_nam": 117, "num_el_blk": 117, "num_elem_var": 117, "put_element_property_nam": 117, "put_element_property_valu": 117, "put_global_variable_nam": 117, "put_info_record": 117, "put_node_num_map": 117, "put_node_set_id": 117, "put_node_set_info": 117, "dist_fact": 117, "put_node_set_nam": 117, "put_node_variable_nam": 117, "put_qa_record": 117, "put_side_set_id": 117, "put_side_set_info": 117, "put_side_set_nam": 117, "reduce_to_surfac": [117, 312, 318], "set_elem_attr": 117, "set_elem_connect": 117, "convent": 117, "set_elem_variable_valu": 117, "valid": [117, 312, 313, 316, 317, 323, 325, 327, 328, 329], "set_global_variable_valu": 117, "set_node_variable_valu": 117, "set_tim": 117, "len": [117, 249, 301, 304, 312, 322, 323], "triangulate_surface_mesh": [117, 119], "patch": [117, 119], "hasn": [117, 119], "pyexodu": [117, 119], "mesh_triangulation_arrai": [117, 119], "skip": [117, 119], "triangulated_mesh_info": [117, 119], "conveni": [119, 325], "easier": [119, 312, 316, 325, 328, 334, 335], "manipul": [119, 316], "want": [119, 312, 314, 316, 318, 322, 323, 324, 325, 328, 329, 334], "from_sdynpi": [119, 316], "load_from_exodu": 119, "repackag": 119, "write_to_fil": [119, 316], "edge_threshold": 120, "60": [120, 312, 315, 317, 325, 327, 329, 334], "reduced_element_typ": 121, "blocks_to_transform": 123, "variables_to_transform": 123, "eas": [123, 318], "insensit": 123, "corner": [123, 317, 327, 328, 334], "fexo_out": [123, 316], "TO": 123, "we": [123, 302, 312, 313, 314, 315, 316, 317, 318, 321, 323, 324, 325, 326, 327, 328, 329, 334], "tetra4": 123, "hex20": 123, "mash": 123, "lastli": 123, "what": [123, 312, 315, 316, 317, 318, 320, 321, 323, 324, 327, 328, 329, 334, 335], "turn": [123, 312, 317, 329, 334], "reduce_element_typ": 123, "reduce_element_nodes_per_fac": 123, "reduce_element_fac": 123, "reduce_element_substitute_typ": 123, "exodusii": 123, "manual": [123, 325, 334], "prod": [123, 329], "gov": 123, "techlib": 123, "control": [123, 238, 316, 319, 325, 327], "cgi": 123, "1992": 123, "922137": 123, "pdf": [123, 292, 316], "simplenamespac": 124, "shaker": [125, 126, 135, 316, 319, 322, 324, 327, 328, 335], "commerci": 125, "m_armatur": 126, "m_bodi": 126, "m_forcegaug": 126, "k_suspens": 126, "k_stinger": 126, "c_suspens": 126, "c_stinger": 126, "resist": 126, "induct": 126, "force_factor": 126, "four": [126, 324, 325, 328, 334], "electromechan": 126, "armatur": 126, "trunion": 126, "gaug": [126, 312], "stinger": 126, "coil": 126, "electron": 126, "bl": 126, "magnet": 126, "mck": 126, "voltag": [126, 327, 335], "impart": 126, "plu": [126, 312], "modal_shop_100lbf": 126, "shop": 126, "2100e11": 126, "100lbf": 126, "shaker_model": 126, "1e5": 126, "63e6": 126, "ohm": 126, "6e": 126, "henri": 126, "36": [126, 312, 313, 315, 325, 329, 334], "plot_electrical_imped": 126, "3998": 126, "3999": 126, "4000": [126, 317, 328, 334], "test_data": 126, "imped": [126, 323], "arang": [126, 312, 314, 315, 316, 317, 318, 322, 323, 327, 328, 329, 334], "state_spac": 126, "formul": [126, 324, 327], "x_dot": 126, "feedthrough": 126, "forcegaug": 126, "matri": 126, "rattlesnak": [128, 132, 319, 320, 335], "spreadsheet_file_nam": 129, "system_filenam": 129, "excitation_coordin": 129, "rattlesnake_directori": 129, "time_per_read": 129, "time_per_writ": 129, "environ": [129, 312, 317, 319, 322, 325, 334], "channel_comment_data": 129, "channel_serial_number_data": 129, "channel_triax_dof_data": 129, "channel_engineering_unit_data": 129, "channel_warning_level_data": 129, "channel_abort_level_data": 129, "channel_active_in_environment_data": 129, "coordinate_override_column": [130, 131, 132, 134], "read_only_indic": [130, 132], "read_vari": 132, "time_data": [132, 316, 335], "nc4": [132, 313, 316], "channel_t": [132, 316], "datafram": [132, 335], "panda": [132, 335], "labview": 135, "laboratori": [135, 312, 314], "tdm": 135, "nativ": 135, "There": [135, 193, 250, 254, 314, 317, 322, 323, 324, 325, 327, 328, 334], "data_fil": [136, 137], "coordinate_properti": [136, 137, 138, 139], "ch_info": [136, 137], "reference_coordinate_properti": 136, "frf_refid": 136, "coordinate_string_map": [136, 137, 138, 139], "invalid_coordinate_valu": [136, 137, 138, 139], "999999": [136, 137, 138, 139], "read_filtered_time_data": 137, "data_directori": 138, "ch_id": 138, "file_pattern": 138, "ch": [138, 292], "_thdata": 138, "file_sort_kei": 138, "lambda": [138, 254, 263, 314, 323, 325], "ch_locat": 139, "channel_indic": 139, "format_spec": [142, 146], "read_numb": [142, 143], "uffreaderror": [142, 144, 145], "line_format_spec": 143, "lines_read": 143, "fill_lin": 146, "fill": [146, 312, 316], "definit": [147, 312, 317, 323, 324, 325, 327, 334], "header": [148, 158, 335], "model_file_nam": 149, "model_file_descript": 149, "db_program": 149, "db_date_cr": 149, "db_version": 149, "db_subvers": 149, "file_typ": 149, "date_db_last_sav": 149, "writing_program": 149, "sdynpy_uff": 149, "py": [149, 212, 315], "date_written": 149, "releas": [149, 320, 323], "version_numb": [149, 159, 174], "host_id": 149, "test_id": 149, "release_counter_per_host": 149, "dataset_numb": [149, 152, 155, 159, 162, 165, 168, 171, 174, 178], "from_uff_data_arrai": [149, 152, 155, 159, 162, 165, 168, 171, 174, 178], "write_str": [149, 152, 155, 159, 162, 165, 168, 171, 174, 178], "58": [154, 312, 315, 325, 334, 335], "set_record_numb": 155, "octave_format": 155, "measurement_run": 155, "weighting_typ": 155, "window_typ": 155, "amplitude_unit": 155, "normalization_method": 155, "abscissa_data_qualifi": 155, "ordinate_num_data_qualifi": 155, "ordinate_den_data_qualifi": 155, "zaxis_data_qualifi": 155, "sampling_typ": 155, "time_averag": 155, "zrpm": 155, "ztime": 155, "zorder": 155, "number_sampl": 155, "exponential_window_damping_factor": 155, "overall_rm": 155, "weighted_rm": 155, "response_direct": [155, 174], "reference_direct": [155, 174], "model_uid": 159, "entity_typ": 159, "entity_subtyp": 159, "entity_nam": 159, "sdynpy_geometri": [159, 327, 334], "part_numb": 159, "status_mask": 159, "datetime_short_time_format": 159, "idm_item_version_id": 159, "idm_item_id": 159, "primary_parent_uid": 159, "geometry_switch": 159, "p_analysis_switch": 159, "all_selections_switch": 159, "auto_create_dynamic_groups_switch": 159, "acdg_1d_element_switch": 159, "acdg_2d_element_switch": 159, "acdg_3d_element_switch": 159, "acdg_other_element_switch": 159, "acdg_related_nodes_switch": 159, "acdg_related_geometry_switch": 159, "acdg_related_boundary_condition_switch": 159, "node_label": 162, "export_coordinate_system": 162, "displacement_coordinate_system": 162, "element_label": 165, "fe_descriptor_id": 165, "physical_property_table_numb": 165, "material_property_table_numb": 165, "beam_orient": 165, "beam_fore_cross_section_numb": 165, "beam_aft_cross_section_numb": 165, "part_uid": 168, "part_nam": 168, "cs_label": 168, "cs_color": 168, "cs_name": 168, "cs_matric": 168, "idline1": [171, 174], "idline2": [171, 174], "idline3": [171, 174], "idline4": [171, 174], "idline5": [171, 174], "model_typ": 171, "analysis_typ": 171, "data_characterist": 171, "integer_data": 171, "real_data": 171, "node_data_dictionari": 171, "buckling_eigenvalu": 171, "frequency_step_numb": 171, "id_numb": 171, "imaginary_eigenvalu": 171, "imaginary_modal_a": 171, "imaginary_modal_b": 171, "modal_hysteretic_damp": 171, "modal_viscous_damp": 171, "mode_numb": 171, "real_eigenvalu": 171, "real_modal_a": 171, "real_modal_b": 171, "time_step_numb": 171, "function_id": 174, "load_cas": 174, "response_entity_nam": 174, "response_nod": 174, "reference_entity_nam": 174, "reference_nod": 174, "abscissa_data_typ": 174, "abscissa_length_expon": 174, "abscissa_force_expon": 174, "abscissa_temp_expon": 174, "abscissa_axis_label": 174, "abscissa_units_label": 174, "ordinate_num_data_typ": 174, "ordinate_num_length_expon": 174, "ordinate_num_force_expon": 174, "ordinate_num_temp_expon": 174, "ordinate_num_axis_label": 174, "ordinate_num_units_label": 174, "ordinate_den_data_typ": 174, "ordinate_den_length_expon": 174, "ordinate_den_force_expon": 174, "ordinate_den_temp_expon": 174, "ordinate_den_axis_label": 174, "ordinate_den_units_label": 174, "zaxis_data_typ": 174, "zaxis_length_expon": 174, "zaxis_force_expon": 174, "zaxis_temp_expon": 174, "zaxis_axis_label": 174, "zaxis_units_label": 174, "zaxis_valu": 174, "improv": [177, 314, 315, 316, 317, 328], "visibl": [177, 313, 317, 325], "traceline_numb": 178, "identif": [178, 334], "vic3d": [180, 181, 182, 183, 185, 335], "xml": [181, 183], "calibr": [181, 182, 183, 211], "insid": [181, 183, 316, 318, 322, 335], "unzip": [181, 183], "z3d": [181, 182, 183], "cx": [181, 183], "cy": [181, 183], "fx": [181, 183, 327], "fy": [181, 183], "tx": [181, 183], "ty": [181, 183], "tz": [181, 183], "triangular": [181, 183, 185, 213, 216], "intrinisc": [181, 183, 213], "orthogon": [181, 183, 213], "z3d_file": 182, "out_data": 182, "intrinsics_0": 182, "extrinsics_0": 182, "distortion_0": 182, "intrinsics_1": 182, "extrinsics_1": 182, "distortion_1": 182, "distort": [182, 328], "bryant": [184, 186], "radian": [184, 186, 251, 253, 289, 323, 325, 327], "read_3d": 185, "read_2d": 185, "read_qual": 185, "sigma_tol": 185, "element_triangulation_condit": 185, "element_color_ord": 185, "allow_dropout": 185, "export": [185, 317, 319, 334, 335], "sigma": [185, 314], "subset": [185, 312], "drop": [185, 317, 325, 327, 328], "dropout": 185, "detect": [185, 317, 328, 334], "geometry_3d": 185, "time_data_3d": 185, "geometry_2d": 185, "time_data_2d": 185, "time_data_2d_dispar": 185, "sigma_data": 185, "r_x": 186, "r_y": 186, "r_z": 186, "graphic": [188, 200, 312, 316, 317, 327, 335], "clear_plot": 189, "clicked_point": 189, "mouse_ev": 189, "cluster_mod": 189, "collect_shap": 189, "compute_and_plot_ccmif": 189, "compute_ccmif": 189, "disable_fil": 189, "enable_fil": 189, "enabled_selected_mod": 189, "enabled_shape_arrai": 189, "export_figur": 189, "export_mode_t": [189, 207], "load_fil": 189, "load_geometri": [189, 198, 207], "load_progress": 189, "plot_ccmif": 189, "plot_cmif": 189, "plot_frf": 189, "remove_fil": 189, "replace_fil": 189, "resynthes": [189, 195, 316, 317, 334], "save_progress": 189, "save_shap": [189, 198, 207], "set_mode_properti": 189, "item": [189, 312, 315, 334], "set_properti": 189, "file_index": 189, "shape_index": 189, "toggle_auto_resynth": 189, "update_line_width": 189, "update_shape_list": 189, "no_load": 189, "qdialog": [190, 203], "pole": [191, 197, 199, 312, 316, 317, 334], "drive_point_coeffici": 192, "participation_factor": [192, 194, 195], "experimental_frf": [193, 195], "natural_frequ": [193, 194, 195, 251, 286, 287], "real_mod": [193, 195, 197], "frequency_lines_at_reson": [193, 195, 197], "frequency_lines_for_residu": [193, 195, 197], "shape_residu": 193, "n_mode": [193, 195], "synthesized_frf": 193, "residual_frf": [193, 195], "residue_matrix": 194, "shape_select": 194, "shapeselect": 194, "multirefer": 195, "particip": [195, 317, 334], "n_input": 195, "frfs_resynthes": 195, "polynomi": [196, 312, 316, 317, 334], "fitter": [196, 202, 312, 316, 317, 334], "analyze_pole_converg": 197, "pole_or_index": 197, "frequency_stability_threshold": 197, "damping_stability_threshold": 197, "modal_participation_threshold": 197, "label_ord": 197, "no_converge_marg": 197, "freq_converge_mark": 197, "damp_converge_mark": 197, "full_converge_mark": 197, "angular_frequ": [197, 206], "compute_pol": 197, "polynomial_ord": 197, "compute_shap": [197, 198, 206, 207], "frequency_spac": [197, 206, 233, 246], "plot_stabl": 197, "label_pol": 197, "order_rang": 197, "pole_list_from_indic": 197, "frf_data": [198, 207, 327], "compute_stabil": 198, "create_cmif_window": 198, "create_frf_window": 198, "create_mmif_window": 198, "create_nmif_window": 198, "create_qmif_window": 198, "export_fit_data": 198, "frequency_slic": 198, "pole_selection_chang": 198, "set_geometri": [198, 334], "show_line_selector": 198, "update_data_plot": 198, "update_frequency_from_region": 198, "update_max_frequ": 198, "update_min_frequ": 198, "update_resynthesi": 198, "polypy_gui": [199, 334, 335], "polypy_tabwidget": 199, "frequency_region": 199, "qwidget": 199, "mouseclick": 199, "mousemov": 199, "plot_pol": 199, "update_stability_plot_view": 199, "update_stabilization_plot": 199, "time_history_arrai": 201, "acceptancechang": 201, "analyzepolypi": 201, "analyzesmac": 201, "block_averaging_sign": 201, "block_data_range_sign": 201, "block_sampling_sign": 201, "compute_trigg": 201, "create_roi": 201, "endtimechang": 201, "framesizechang": 201, "frametimechang": 201, "frameschang": 201, "frequencylineschang": 201, "frequencyspacingchang": 201, "get_abscissa_index_rang": 201, "hysteresischang": 201, "initialize_ui": 201, "levelchang": 201, "loaddata": 201, "loadgeometri": 201, "overlapchang": 201, "overlapsampleschang": 201, "plotdeflect": 201, "plottransi": 201, "pretriggerchang": 201, "referenceviewchang": 201, "referenceschang": 201, "reset_ui": 201, "responseviewchang": 201, "responseschang": 201, "saveautospectra": 201, "savecoher": 201, "savecrossspectra": 201, "savefrf": 201, "savewindowedtimehistori": 201, "sendtorefer": 201, "sendtorespons": 201, "showautospectra": 201, "showcoher": 201, "showcrossspectra": 201, "showfrf": 201, "showwindowedtimehistori": 201, "starttimechang": 201, "toggleroi": 201, "roi": 201, "typechang": 201, "updatehysteresisfromrefer": 201, "updatehysteresisfromrespons": 201, "updatetimefromrefer": 201, "updatetimefromrespons": 201, "updatetriggerfromrefer": 201, "updatetriggerfromrespons": 201, "windowchang": 201, "synthes": [202, 328, 335], "smac": [202, 311, 312, 316, 335], "add_root": [203, 207], "recompute_correl": 203, "switch_log_plot": 203, "update_plot_rang": 203, "update_range_selector": 203, "paraboloid": 204, "autofit_root_altern": 206, "initial_frequ": 206, "initial_damp": 206, "frequency_rang": 206, "frequency_point": 206, "frequency_converg": 206, "00025": [206, 317], "damping_low": 206, "0025": [206, 312], "damping_high": 206, "damping_point": 206, "damping_converg": 206, "frequency_lines_for_correl": 206, "max_it": 206, "zoom_rat": 206, "plot_converg": 206, "autofit_root_paraboloid": 206, "autofit_root": [206, 207], "autofit_typ": 206, "autofittyp": 206, "compute_correlation_matrix": [206, 207], "low_frequ": 206, "high_frequ": 206, "frequency_sampl": 206, "frequency_resolut": 206, "low_damp": 206, "high_damp": 206, "damping_sampl": 206, "compute_initial_rootlist": 206, "peak_finder_filter_s": 206, "correlation_threshold": 206, "num_roots_mif": 206, "num_roots_frequency_threshold": 206, "005": [206, 312, 334], "plot_correl": 206, "compute_pseudoinvers": [206, 207], "compute_residu": 206, "root": [206, 245, 313, 314, 316, 317, 325, 327, 334], "find_peak": 206, "correlation_matrix": 206, "fit_damp": 206, "min_damp": 206, "max_damp": 206, "fit_frequ": 206, "max_freq": [206, 263], "fit_paraboloid": 206, "frf_sdof_complex": 206, "root_frequ": 206, "root_damp": 206, "frf_sdof_real": 206, "get_num_root": 206, "frequency_threshold": 206, "add_initial_root": 207, "confirm_initial_roots_for_autofit": 207, "delete_initial_root": 207, "delete_root": 207, "load_shap": 207, "paint_mark": 207, "plot_mac": 207, "refind_peak": 207, "update_coefficient_and_refind": 207, "update_crosshair": 207, "update_frequency_line_label": 207, "update_initial_rootlist_tab": 207, "no_reset_ax": 207, "update_rootlist_t": 207, "update_selector_and_refind": 207, "deal": [210, 223, 232, 279, 288, 314, 323, 328], "image_point": [211, 213, 217, 219], "plane_point": [211, 219, 275], "n_camera": [211, 221], "n_imag": [211, 221], "n_point": [211, 312], "k_est": 211, "rt_est": 211, "du": 212, "dx": [212, 328], "dy": 212, "dz": 212, "dv": 212, "spatial_point": 213, "six": [213, 325, 334], "intrin": 213, "v": [213, 290, 307, 312, 314, 318, 322, 323, 325], "homogen": 213, "decomposit": [213, 327], "smallest": [213, 312, 314, 327], "null": 213, "horizont": [213, 322], "vertic": [213, 322, 327], "locat": [213, 312, 315, 316, 317, 319, 322, 323, 324, 325, 326, 327, 328, 334], "paint": 213, "gimp": 213, "correpond": 213, "f_u": 213, "u_0": 213, "f_v": 213, "v_0": 213, "And": [213, 323, 325], "r_xx": 213, "r_xy": 213, "r_xz": 213, "t_x": 213, "r_yx": 213, "r_yi": 213, "r_yz": 213, "t_y": 213, "r_zx": 213, "r_zy": 213, "r_zz": 213, "t_z": 213, "3x4": [214, 215, 216, 220], "3xn": [214, 215], "mx": [214, 215], "pixel_disp": 214, "2xn": [214, 215], "world": [215, 324], "pixel_posit": 215, "p": [216, 217, 311, 315, 327, 328], "decompos": 216, "3x1": 216, "k_guess": 219, "rt_guess": 219, "radial_distort": [219, 221], "prismatic_distort": [219, 221], "tangential_distort": [219, 221], "radial_denominator_distort": [219, 221], "k_guess_distort": 219, "least_squares_kwarg": 219, "pixel_coordin": 220, "parameter_arrai": 221, "use_k_for_distort": 221, "preserve_magnitud": 224, "fft_1": 226, "fft_2": 226, "phi_1": [227, 325], "phi_2": [227, 325], "display_valu": 228, "text_siz": [228, 312, 313, 314, 315], "vmin": 228, "vmax": 228, "boundari": [228, 312, 313, 315, 317, 318, 328], "reference_shap": 229, "th_1": 231, "th_2": 231, "response_spectral_matrix": 233, "coh": 236, "ph": 236, "cpsd_matrix": 238, "schultz": 238, "nelson": 238, "synthesi": [238, 334], "proceed": [238, 311], "confer": 238, "2019": 238, "decibel": 240, "cpsd_origin": 241, "cpsd_to_match": 241, "spec": [243, 323], "channel_nam": 243, "csd": 245, "num_channel": 246, "target_rm": 246, "phae": 249, "n_signal": 249, "updated_sign": 249, "nf": [250, 251, 253, 254], "ni": [250, 251, 253, 254], "nt": [250, 254], "h2": [250, 254], "hv": [250, 254], "mode_shap": 251, "input_mode_shap": 251, "frf_type": [251, 253, 327], "evalu": [251, 253, 256, 315, 328, 334], "hertz": [251, 253, 325, 334], "angular": [251, 253, 323, 325], "percentang": 251, "nm": 251, "nonsquar": 251, "vel": [251, 253, 323], "accel": [251, 253, 323], "By": [251, 253, 312, 316, 322, 325, 327, 328, 334], "recept": [251, 253], "1j": [251, 253, 323, 324, 327], "omega": [251, 253, 323, 324, 325, 329], "depend": [251, 312, 313, 316, 317, 323, 324, 325, 327, 329, 334], "real_imag": 252, "x_dd": 253, "x_d": 253, "therefor": [253, 312, 313, 315, 316, 317, 318, 322, 323, 324, 325, 326, 327, 328, 329, 334], "advis": 253, "response_fft": [254, 327], "reference_fft": [254, 327], "response_fft_arrai": 254, "reference_fft_arrai": 254, "divis": 254, "number_of_respons": 254, "n_averag": 254, "number_of_refer": 254, "original_singular_valu": 256, "seen": [256, 317, 318, 322, 324, 325, 328, 334], "intend": 256, "oringin": 256, "organ": [256, 257, 258, 259], "modified_singular_valu": 256, "mathemat": [256, 324, 325, 328], "rigor": [256, 323], "subject": [256, 325], "frf_matrix": [257, 258, 259, 327], "declar": [257, 325], "paper": 258, "n_sampl": [261, 266], "low_frequency_cutoff": [261, 266], "high_frequency_cutoff": [261, 266, 312, 317], "frequency_min": [262, 322], "frequency_max": [262, 322], "fft_line": [263, 317], "f_nyq": [263, 317], "filter_oversampl": 263, "shape_funct": 263, "inclus": 263, "acquisit": [263, 328], "antialias": [263, 328], "56x": 263, "replica": 263, "ramp_sampl": 265, "end_ramp_sampl": 265, "ncircum": 272, "naxial": 272, "radiu": 273, "plane_direct": 275, "origin_guess": 277, "direction_guess": 277, "radius_guess": 277, "nharmon": 280, "massless_dof": 282, "fmin": 284, "fmax": 284, "inf": [284, 312, 323, 324, 327], "x0": 285, "modal_forc": 286, "return_accel": 286, "rotatoin": 289, "specfici": 289, "rotmat": 289, "cross_matrix": 290, "rvec": [291, 295], "descib": 292, "o": [292, 312, 329, 334], "sorkin": 292, "hornung": 292, "rabinovich": 292, "depart": 292, "eth": 292, "zurich": 292, "jan": [292, 311], "2017": 292, "onlin": 292, "igl": 292, "ethz": 292, "arap": 292, "svd_rot": 292, "wi": 292, "06": [293, 295, 312, 315, 317], "quat": 294, "fri": 296, "nov": 296, "09": [296, 313, 334], "59": [296, 312, 315, 324, 325, 334], "2023": 296, "author": [296, 316], "dprohe": [296, 315, 316], "xp": 297, "fp": 297, "octave_point": 298, "intermediate_result": 299, "rms_error_threshold": [299, 308], "amplitude_lin_scal": 300, "control_irf": 300, "limit_irf": 300, "control_sr": [300, 308], "control_weight": [300, 308], "limit_sr": 300, "frequency_index": [300, 312], "zi": 301, "lfilter": 301, "filtered_sign": 301, "times_at_respons": 302, "freeli": 302, "sdof": [302, 303], "One": [302, 312, 313, 317, 322, 323, 325, 327, 328, 329, 334], "know": [302, 313, 316, 322, 323, 325, 327, 329, 334], "response_peak": 302, "exp": [302, 327], "wn": 302, "sin": [302, 323, 334], "wd": 302, "co": [302, 315, 323], "Then": [302, 316, 317, 334], "substitut": [302, 323, 324, 325, 327], "spectrum_typ": [303, 304], "reson": [303, 312, 322, 323, 324, 327, 328, 334], "invari": [303, 304, 312], "conjunct": 303, "sdof_filt": 303, "compute_sr": 303, "b_filter_weight": 304, "a_filter_weight": 304, "digit": [304, 327, 335], "10000": [304, 324, 325, 327], "sdof_ramp_invariant_filter_weight": 304, "required_sr": 305, "srs_breakpoint": 305, "acceleration_sign": 305, "velocity_sign": 305, "displacement_sign": 305, "control_breakpoint": 308, "limit_breakpoint": 308, "limit_transfer_funct": 308, "control_transfer_funct": 308, "minimize_iter": 308, "optimization_pass": 308, "compensation_amplitud": 310, "compensation_delai": 310, "daniel": 311, "henslei": 311, "randi": 311, "l": [311, 327], "may": 311, "extend": [311, 325], "24th": 311, "nternat": 311, "odal": 311, "nalysi": 311, "onfer": 311, "220": 311, "230": 311, "st": 311, "loui": 311, "januari": 311, "2006": 311, "bart": 311, "peeter": 311, "herman": 311, "van": 311, "der": 311, "auwera": 311, "patrick": 311, "guillaum": 311, "leuridan": 311, "polymax": [311, 316, 319, 334], "523692": 311, "2004": 311, "url": 311, "1155": 311, "usag": [312, 314, 316, 320, 334], "walk": [312, 314, 324, 326], "entireti": 312, "workflow": [312, 314, 320, 334], "collect": [312, 319, 323, 324, 325], "quicklook": 312, "plt": [312, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "lot": [312, 322, 324, 325], "plot_opt": [312, 318], "trival": 312, "addition": [312, 314, 317, 318, 324, 327, 328, 334], "onc": [312, 313, 316, 317, 318, 323, 325, 327, 329, 334], "crucial": 312, "success": 312, "reason": [312, 313, 318, 322, 323, 325, 327, 328, 334], "analys": [312, 313, 316, 317, 320, 334], "outer": [312, 318, 328], "abl": [312, 314, 317, 324, 325, 327, 328, 329, 334], "interior": 312, "our": [312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 329, 334], "exterior": 312, "goal": [312, 313, 317, 328, 334], "exclus": 312, "obliqu": 312, "nose": [312, 313, 314, 322], "wise": 312, "ipython": [312, 316, 335], "496": 312, "062": 312, "000": [312, 325, 334], "20497": 312, "500": [312, 322, 323, 324, 325, 328], "429": 312, "256": 312, "290": 312, "407": 312, "489": 312, "063": 312, "reveal": [312, 318, 322, 334], "advantag": [312, 327, 328, 334], "intersect1d": [312, 318, 334, 335], "variant": [312, 334], "fieldnam": [312, 334], "develop": [312, 314, 315, 322, 323, 325, 327, 334], "recogn": [312, 325, 328, 334], "five": [312, 334, 335], "u8": [312, 334], "f8": [312, 334], "u2": [312, 334], "byte": [312, 334], "bit": [312, 316, 317, 322, 323, 325, 327, 328, 334], "unsign": [312, 334], "signifi": [312, 334], "12686": 312, "examin": [312, 322, 323, 324, 325, 334], "again": [312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 327, 328, 334], "previous": [312, 315, 322, 324, 325, 327, 328, 329, 334], "recal": [312, 318, 324, 325, 327, 328, 329, 334], "12687": 312, "u1": [312, 334], "might": [312, 317, 322, 323, 325, 334], "similarli": [312, 315, 316, 317, 318, 324, 325, 328, 329, 334, 335], "verifi": [312, 314, 317, 318, 325, 328, 334], "correctli": [312, 315, 316, 317, 318, 334], "triad": [312, 334], "readabl": [312, 334], "1x": [312, 325, 334], "1y": [312, 324, 325, 334], "1z": [312, 325, 327, 334], "20496x": 312, "20496y": 312, "20496z": 312, "u7": [312, 316], "aspect": [312, 324, 329, 334], "smaller": [312, 313, 325, 334], "zoom": [312, 317, 325, 328, 334], "blue": [312, 313, 314, 315, 317, 324, 334], "alwai": [312, 324, 334], "red": [312, 314, 317, 324, 334], "toward": [312, 322, 323, 324, 328], "finish": [312, 318, 334], "gather": 312, "shapes_glob": 312, "briefli": [312, 323, 327, 328, 334], "38058": 312, "u80": [312, 334], "hold": [312, 313, 315, 322, 324, 327, 334], "belong": [312, 334], "thu": [312, 317, 323, 334], "feel": [312, 334], "relev": [312, 327, 334], "thing": [312, 315, 316, 317, 322, 324, 327, 334], "sometim": [312, 317, 324], "slight": [312, 328], "instabl": [312, 334], "easi": [312, 314, 316, 320, 325, 328, 334], "statement": 312, "subtl": [312, 334], "seem": [312, 317, 323, 324, 327, 334], "inde": [312, 315, 317, 323, 325, 327, 328, 329, 334], "79983277e": 312, "35834268e": 312, "75579236e": 312, "66030128e": 312, "39180665e": 312, "experienc": 312, "readili": [312, 313, 326], "trigger": [312, 317, 328, 334], "advanc": [312, 318, 334], "reiter": 312, "reader": [312, 325, 328, 334, 335], "concept": [312, 327, 328, 334], "encourag": [312, 334], "misappli": [312, 334], "nuanc": [312, 334], "introduc": [312, 314, 322, 323, 325, 328, 334], "bug": [312, 334], "As": [312, 313, 322, 323, 325, 327, 334], "mention": [312, 327, 328], "come": [312, 314, 322, 323, 324, 325, 327, 328], "cordin": 312, "onto": [312, 314, 324, 334], "geometry_glob": 312, "though": [312, 313, 315, 317, 323, 325, 327, 328, 334], "went": 312, "troubl": [312, 329], "downselect": 312, "algorithm": [312, 314, 329], "by_effective_independ": [312, 314, 329], "throw": [312, 314, 318], "awai": [312, 314, 318, 323, 325], "686": 312, "overlai": [312, 313, 315, 316, 317, 322, 334], "meshgrid": [312, 318, 323], "min_coord": 312, "max_coord": 312, "range_coord": 312, "num_grid": 312, "ceil": 312, "astyp": [312, 316], "linspac": [312, 318, 323, 324, 325, 327], "grid_arrai": 312, "num": [312, 315, 316, 317, 323, 324, 325, 327, 328, 329, 334], "zip": [312, 315, 317, 322, 323, 324, 325, 327, 329], "grid_point": 312, "ij": [312, 318, 323, 329], "particularli": [312, 314, 315, 316, 317, 323, 327, 328, 334], "tail": [312, 314, 315], "further": [312, 320, 334], "elimin": 312, "candidate_nod": 312, "candidate_node_id": 312, "candidate_dof": [312, 314], "newaxi": [312, 313, 314, 315, 317, 324, 325, 327, 329, 334], "captur": [312, 317, 328, 334], "band": [312, 315, 325, 327, 328, 334], "300": [312, 322, 328], "shape_bandwidth": 312, "target_shap": 312, "30": [312, 313, 314, 315, 316, 317, 323, 324, 325, 327, 328, 334], "illustr": [312, 317, 334], "could": [312, 313, 315, 316, 317, 318, 322, 323, 324, 325, 326, 327, 328, 334], "let": [312, 313, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "1217": 312, "almost": [312, 313, 324, 327], "count": 312, "moveaxi": [312, 314, 318, 324], "re": [312, 316, 318, 327, 328, 334], "oridin": 312, "keep_indic": [312, 314, 318], "intuit": [312, 316, 323, 325, 327, 329, 334], "few": [312, 314, 315, 317, 324, 325, 327, 328, 334], "fuselag": [312, 315], "efi": 312, "set_yscal": [312, 322, 323, 324, 325, 327], "set_xlim": [312, 324, 328], "get_xlim": 312, "set_ylabel": [312, 313, 315, 316, 317, 322, 323, 324, 325, 327, 328, 334], "set_xlabel": [312, 313, 315, 316, 317, 322, 323, 324, 325, 327, 328, 334], "keep_dof": 312, "abund": 312, "aid": [312, 316, 317, 334], "test_geometri": [312, 316, 318], "2796": 312, "051": 312, "497": 312, "562": 312, "5248": 312, "095": 312, "031": 312, "6157": 312, "970": 312, "310": [312, 315], "6172": 312, "413": 312, "6214": 312, "989": 312, "224": 312, "6272": 312, "438": 312, "037": 312, "6376": 312, "6392": 312, "6405": 312, "155": 312, "8143": 312, "384": 312, "129": 312, "8160": 312, "11664": 312, "11705": 312, "11722": 312, "11735": 312, "11764": 312, "11892": 312, "11909": 312, "13603": 312, "13647": 312, "13660": 312, "17107": 312, "17563": 312, "17573": 312, "123": 312, "18331": 312, "18416": 312, "185": [312, 325], "18787": 312, "19579": 312, "19651": 312, "19665": 312, "green": [312, 313, 314, 315, 317, 334], "pink": 312, "everyth": [312, 318], "distinguish": [312, 318, 324, 329, 334], "nice": [312, 316, 325, 329, 334, 335], "matrix_plot": [312, 313, 314, 315, 316, 317, 318, 334], "test_shap": [312, 314, 318], "ll": 312, "too": [312, 315, 322, 323, 325, 329, 334], "instal": [312, 320], "tediou": [312, 316, 327], "inevit": [312, 325, 327, 328], "purposefulli": 312, "overwrit": [312, 313], "test_geometry_error": 312, "5th": 312, "elicit": 312, "rest": [312, 323, 334], "fairli": [312, 315], "veri": [312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 327, 328, 329, 334], "projector": 312, "mathbf": [312, 314, 315, 324, 325, 327, 328, 329, 334], "phi": [312, 315, 325, 329, 334], "_a": 312, "test_system": 312, "wherea": [312, 317, 325, 334], "90": [312, 313, 315, 322, 323, 324, 334], "2868905": 312, "99964993": 312, "3210105": 312, "88194563": 312, "3289727": 312, "48791008": 312, "67": [312, 315, 325, 334], "75138079": 312, "66707341": 312, "55042371": 312, "76026978e": 312, "40194807e": 312, "58617331e": 312, "73749203e": 312, "09022372e": 312, "04": [312, 315, 320, 321], "68270938e": 312, "53050658e": 312, "80137822e": 312, "07032636e": 312, "46528917e": 312, "02431820e": 312, "76349533e": 312, "69407153e": 312, "83686628e": 312, "59999135e": 312, "49012119e": 312, "74121905e": 312, "04985114e": 312, "55739072e": 312, "65502669e": 312, "38297408e": 312, "34896916e": 312, "71546727e": 312, "47339469e": 312, "93925263e": 312, "19915019e": 312, "66942214e": 312, "39905468e": 312, "48742295e": 312, "91024169e": 312, "55791597e": 312, "30305914e": 312, "16004354e": 312, "31560277e": 312, "15253196e": 312, "19728196e": 312, "2796x": 312, "2796y": 312, "2796z": 312, "5248x": 312, "5248y": 312, "5248z": 312, "6157x": 312, "6157y": 312, "6157z": 312, "6172x": 312, "6172y": 312, "6172z": 312, "6214x": 312, "6214y": 312, "6214z": 312, "6272x": 312, "6272y": 312, "6272z": 312, "6376x": 312, "6376y": 312, "6376z": 312, "6392x": 312, "6392y": 312, "6392z": 312, "6405x": 312, "6405y": 312, "6405z": 312, "8143x": 312, "8143y": 312, "8143z": 312, "8160x": 312, "8160y": 312, "8160z": 312, "11664x": 312, "11664y": 312, "11664z": 312, "11705x": 312, "11705y": 312, "11705z": 312, "11722x": 312, "11722y": 312, "11722z": 312, "11735x": 312, "11735y": 312, "11735z": 312, "11764x": 312, "11764y": 312, "11764z": 312, "11892x": 312, "11892y": 312, "11892z": 312, "11909x": 312, "11909y": 312, "11909z": 312, "13603x": 312, "13603y": 312, "13603z": 312, "13647x": 312, "13647y": 312, "13647z": 312, "13660x": 312, "13660y": 312, "13660z": 312, "17107x": 312, "17107y": 312, "17107z": 312, "17563x": 312, "17563y": 312, "17563z": 312, "17573x": 312, "17573y": 312, "17573z": 312, "18331x": 312, "18331y": 312, "18331z": 312, "18416x": 312, "18416y": 312, "18416z": 312, "18787x": 312, "18787y": 312, "18787z": 312, "19579x": 312, "19579y": 312, "19579z": 312, "19651x": 312, "19651y": 312, "19651z": 312, "19665x": 312, "19665y": 312, "19665z": 312, "aim": [312, 327], "lsim": [312, 334], "test_bandwidth": 312, "rb_frame": 312, "choos": [312, 317, 324, 325, 334], "rb_frequenc": 312, "chose": [312, 328, 334], "rb_coordin": 312, "startup": [312, 317, 323], "queri": [312, 325], "erron": [312, 334], "rb_shape": 312, "nois": [312, 314, 317, 327, 328, 329, 334], "incorrect": [312, 334], "throughout": [312, 325], "intention": 312, "opposit": [312, 323, 324, 325], "thoroughli": [312, 327], "analyz": [312, 314, 319, 323, 324, 325, 327, 334], "34": [312, 313, 315, 317, 325, 334], "316000": 312, "35": [312, 313, 315, 317, 325, 329, 334], "f4": 312, "Being": 312, "316": 312, "peculiar": 312, "contrari": 312, "rememb": [312, 327, 328, 334], "37": [312, 313, 315, 325, 334], "contrast": [312, 334], "38": [312, 313, 315, 317, 325, 334], "16000": 312, "39": [312, 313, 315, 317, 322, 323, 324, 325, 329, 334], "c16": [312, 334], "ve": [312, 316, 325], "understood": [312, 325], "task": 312, "discuss": [312, 322, 325, 327, 328, 329, 334], "rigid_body_check": 312, "suspici": 312, "warrant": 312, "quantit": [312, 314], "wrong": [312, 334], "suspicious_dof": 312, "significantli": [312, 314, 315, 317, 327, 328, 334], "behav": [312, 315, 324, 334], "hone": [312, 334], "difficult": [312, 316, 325, 328, 329, 334], "rigid_body_fix_node_orient": 312, "suspicious_nod": 312, "test_geometry_correct": 312, "drive": [312, 314, 317, 325, 329, 334], "drive_point": 312, "simultan": [312, 317, 318, 327, 328, 334], "modal_fram": 312, "random_forc": 312, "statist": 312, "sqrt": [312, 323, 325, 327], "rfftfreq": [312, 317, 327, 328], "sharp": [312, 317, 323, 324, 334], "responses_mod": [312, 325], "references_mod": 312, "responses_sampl": 312, "slice": [312, 314, 316, 322, 327, 328], "references_sampl": 312, "frf_sampl": 312, "guiplot": [312, 314, 316, 317, 327, 334], "quickli": [312, 314, 316, 317, 320, 322, 323, 324, 325, 328, 334], "polymax_gui": [312, 316], "gui": [312, 316, 317, 328, 334], "pm": 312, "stabil": [312, 316, 317, 334], "diagram": [312, 317, 323, 334], "instanc": [312, 317, 322, 325], "drag": [312, 325, 334], "region": [312, 328, 334], "stabl": [312, 317, 334], "click": [312, 316, 317, 325, 334], "disk": [312, 317, 334, 335], "shape_comparison_t": [312, 313, 315, 317, 334], "test_shapes_polymax": [312, 316], "shapes_polymax": 312, "shape_correspond": 312, "4f": 312, "00": [312, 313, 315, 325, 334], "0067": 312, "9820": 312, "0218": 312, "9605": 312, "0458": 312, "4512": 312, "0344": 312, "4827": 312, "99": [312, 313, 315, 317, 328], "0077": 312, "7148": 312, "3471": 312, "0114": 312, "98": [312, 313, 315, 317, 328, 334], "0855": 312, "78": [312, 315, 317], "77": [312, 315, 317], "0156": 312, "97": [312, 313, 315, 317], "4382": 312, "47": [312, 313, 315, 325, 329, 334], "0189": 312, "0342": 312, "57": [312, 313, 315, 325, 334], "49": [312, 313, 315, 317, 325, 329, 334], "0003": 312, "1664": 312, "0012": 312, "0377": 312, "0000": [312, 325, 329, 334], "0906": 312, "0026": 312, "1076": 312, "0078": 312, "1584": 312, "0061": 312, "3016": 312, "0013": 312, "1005": 312, "107": [312, 315], "0018": 312, "1139": 312, "0065": 312, "5165": 312, "140": [312, 334], "0016": 312, "3194": 312, "0097": 312, "2438": 312, "148": 312, "0045": 312, "3527": 312, "158": 312, "70": [312, 313, 315, 317, 325, 334], "0005": 312, "2717": 312, "164": [312, 335], "0063": 312, "1195": 312, "68": [312, 315, 325, 334], "0183": 312, "8317": 312, "0171": 312, "8663": 312, "183": 312, "0042": 312, "1180": 312, "180": [312, 323, 324, 334], "dot": [312, 323, 324, 325], "shape_phas": 312, "einsum": 312, "test_comparison_geometri": 312, "test_comparison_shap": 312, "fem_comparison_geometri": 312, "fem_comparison_shap": 312, "stick": 312, "insuffici": 312, "commun": 312, "stakehold": 312, "uniaxi": [312, 316, 327], "among": [312, 328], "expansion_basi": 312, "expanded_shap": 312, "Or": [312, 317, 334], "expansion_comparison_geometri": 312, "expansion_comparison_shap": 312, "toi": 313, "cubit": [313, 318], "spaceship": 313, "attach": [313, 315, 318, 323, 324, 325, 334], "execut": [313, 318], "thruster": 313, "nodeset": [313, 317], "block_1": 313, "block_2": 313, "block_al": 313, "truth": [313, 318, 319, 327], "eigen": [313, 318], "cbr": 313, "block_": 313, "degr": 313, "eig": 313, "inp": 313, "popul": [313, 316, 327, 334], "reli": [313, 315, 317, 324, 334], "packag": [313, 315, 317, 320, 323, 325, 327, 328, 334], "check_shap": 313, "reduced_shap": 313, "wish": [313, 314, 317, 318, 325, 327, 334], "symmetri": 313, "perfect": [313, 315, 328, 334], "agreement": [313, 314, 316, 317, 327], "technic": 313, "pertin": 313, "super": 313, "aren": [313, 318], "cb_shape": 313, "full_shap": [313, 315], "compare_geo": 313, "compare_shap": [313, 315], "set_titl": [313, 315, 316, 317, 322, 323, 325, 327, 328, 334], "tend": [313, 317, 323, 324, 325, 327, 328, 329, 334], "break": [313, 322, 328, 334], "poor": [313, 314, 315, 317, 327, 328, 329, 334], "fact": [313, 322, 323, 324, 325, 327, 328], "nearli": [313, 315, 323, 328], "assembli": [313, 315, 318], "colloc": 313, "combined_shap": [313, 316, 334], "successfulli": [313, 315, 317, 318, 334], "stai": [313, 317, 322, 334], "renam": [313, 318], "original_nod": 313, "substructured_nod": 313, "substructure_indic": 313, "truth_indic": 313, "463": 313, "585": 313, "750": [313, 325, 334], "834": [313, 317], "1368": 313, "1434": 313, "1458": 313, "1665": 313, "1727": 313, "2021": 313, "07": [313, 315], "2767": 313, "2766": 313, "3140": 313, "3138": 313, "3432": 313, "48": [313, 315, 317, 325, 334], "3767": 313, "3765": 313, "3871": 313, "3870": 313, "86": [313, 315], "4063": 313, "4062": 313, "4251": 313, "4250": 313, "4312": 313, "4319": 313, "4948": 313, "4947": 313, "5195": 313, "5193": 313, "5713": 313, "5687": 313, "6213": 313, "6198": 313, "6215": 313, "6210": 313, "6945": 313, "7110": 313, "7102": 313, "79": [313, 315, 317], "7247": 313, "83": [313, 315, 325], "7246": 313, "7398": 313, "7397": 313, "7732": 313, "7729": 313, "8052": 313, "87": [313, 315], "8049": 313, "8101": 313, "7992": 313, "8336": 313, "8310": 313, "8877": 313, "8860": 313, "9108": 313, "9069": 313, "9323": 313, "9263": 313, "9627": 313, "9591": 313, "9914": 313, "9875": 313, "10095": 313, "10060": 313, "10308": 313, "10307": 313, "10391": 313, "10369": 313, "12108": 313, "12079": 313, "until": [313, 317, 334], "31st": 313, "cb": [313, 315], "sdynpi": [314, 315, 316, 317, 321, 322, 326, 328, 329], "replic": 314, "tune": [314, 317, 325], "beam_airplan": [314, 315, 322, 327], "demo": [314, 315, 322, 325, 327, 328], "modal_system": [314, 322, 325, 327, 328, 334], "control_dof": 314, "025": [314, 325, 334], "recreat": 314, "dure": [314, 317, 318, 325, 334], "environment_dof": 314, "242": 314, "301": [314, 315], "302": 314, "304": 314, "305": [314, 315], "respond": [314, 322, 323, 324, 325, 327, 329], "1000": [314, 317, 323, 324, 325, 327, 328, 329, 334], "arbitrari": 314, "uncorrel": [314, 327], "input_cpsd": 314, "predict": [314, 315, 322, 323, 324, 335], "environment_specif": 314, "great": [314, 328], "excitation_loc": [314, 327], "201x": [314, 315, 334], "201z": [314, 315, 322, 334], "233z": [314, 315], "305y": [314, 315], "control_frf": 314, "strategi": [314, 317], "perhap": [314, 315, 322, 323, 327, 334], "simplest": [314, 334], "straightforward": [314, 323], "control_predict": 314, "900": [314, 334], "trivial": [314, 325, 328], "offer": [314, 323, 325, 327, 334], "apsd": 314, "focus": [314, 317, 324, 329], "mainli": 314, "relationship": [314, 323, 327, 328], "ill": 314, "usual": [314, 324], "input_weighting_matrix_tikhonov": 314, "input_weighting_scale_tikhonov": 314, "input_cpsd_tikhonov": 314, "excitation_weighting_matrix": 314, "control_predictions_tikhonov": 314, "expens": 314, "input_weighting_matrix_shaker_eq": 314, "input_weighting_scale_shaker_eq": 314, "5e": 314, "input_cpsd_shaker_eq": 314, "control_predictions_shaker_eq": 314, "shaker_equ": 314, "101y": [314, 315, 322, 334], "serious": 314, "coordinate_to_improv": 314, "input_cpsd_weight": 314, "control_predictions_weight": 314, "weighted_pseudoinvers": 314, "degrad": [314, 315, 328], "driven": [314, 324], "white": [314, 316, 334], "gracefulli": [314, 327], "buzz_input_cpsd": 314, "buzz_predict": 314, "buzz_coher": 314, "buzz_phas": 314, "modified_environment_specif": 314, "trend": [314, 317, 323], "dark": 314, "light": [314, 323], "accomod": 314, "input_cpsd_buzz": 314, "control_predictions_buzz": 314, "attract": [314, 323], "certainli": [314, 327], "input_sign": 314, "input_cpsd_buzz_check": 314, "alpha": [314, 323, 325], "diff": [314, 317], "control_buzz": 314, "buzz_simul": 314, "tutori": [314, 320], "notebook": 315, "component_system": 315, "126": [315, 334], "492": 315, "transmission_simul": 315, "132": 315, "component_geometri": 315, "easiest": [315, 328], "futur": [315, 317], "1xx": 315, "2xx": 315, "3xx": 315, "appdata": 315, "python38": 315, "lib": 315, "site": 315, "core": [315, 316, 327, 334], "1541": 315, "pyvistadeprecationwarn": 315, "cell_arrai": 315, "deprec": 315, "cell_data": 315, "1401": 315, "point_arrai": 315, "point_data": 315, "busi": [315, 334], "interrog": [315, 317, 324], "101z": [315, 322, 334], "101rx": [315, 334], "101ry": [315, 334], "101rz": [315, 334], "102x": 315, "102y": 315, "102z": 315, "102rx": 315, "102ry": 315, "102rz": 315, "103x": 315, "103y": 315, "103z": 315, "103rx": 315, "103ry": 315, "103rz": 315, "104x": 315, "104y": 315, "104z": 315, "104rx": 315, "104ry": 315, "104rz": 315, "105x": 315, "105y": 315, "105z": 315, "105rx": 315, "105ry": 315, "105rz": 315, "106x": 315, "106y": 315, "106z": 315, "106rx": 315, "106ry": 315, "106rz": 315, "107x": 315, "107y": 315, "107z": 315, "107rx": 315, "107ry": 315, "107rz": 315, "108x": 315, "108y": 315, "108z": 315, "108rx": 315, "108ry": 315, "108rz": 315, "109x": 315, "109y": 315, "109z": 315, "109rx": 315, "109ry": 315, "109rz": 315, "110x": 315, "110y": 315, "110z": 315, "110rx": 315, "110ry": 315, "110rz": 315, "111x": 315, "111y": 315, "111z": 315, "111rx": 315, "111ry": 315, "111rz": 315, "112x": 315, "112y": 315, "112z": 315, "112rx": 315, "112ry": 315, "112rz": 315, "113x": 315, "113y": 315, "113z": 315, "113rx": 315, "113ry": 315, "113rz": 315, "114x": 315, "114y": 315, "114z": 315, "114rx": 315, "114ry": 315, "114rz": 315, "115x": 315, "115y": 315, "115z": 315, "115rx": 315, "115ry": 315, "115rz": 315, "116x": 315, "116y": 315, "116z": 315, "116rx": 315, "116ry": 315, "116rz": 315, "117x": 315, "117y": 315, "117z": 315, "117rx": 315, "117ry": 315, "117rz": 315, "118x": 315, "118y": 315, "118z": 315, "118rx": 315, "118ry": 315, "118rz": 315, "119x": 315, "119y": 315, "119z": 315, "119rx": 315, "119ry": 315, "119rz": 315, "120x": 315, "120y": 315, "120z": 315, "120rx": 315, "120ry": 315, "120rz": 315, "121x": 315, "121y": [315, 334], "121z": 315, "121rx": 315, "121ry": 315, "121rz": 315, "lt": [315, 322, 325, 327, 329], "u6": 315, "ahead": 315, "component_shap": 315, "cee": 315, "python_util": 315, "src": 315, "sdynpy_system": 315, "453": 315, "runtimewarn": 315, "encount": 315, "true_divid": 315, "diag": [315, 325], "un": [315, 328], "pick": [315, 316, 322, 334], "fourth": [315, 317, 329], "wing_boundary_dof": 315, "262": 315, "tail_boundary_dof": 315, "119": 315, "303": 315, "308": 315, "all_boundary_dof": 315, "internal_dof": 315, "109": 315, "306": 315, "reduction_dof": 315, "201y": [315, 334], "205x": 315, "205y": 315, "205z": 315, "209x": 315, "209y": 315, "209z": 315, "213x": 315, "213y": 315, "213z": 315, "217x": 315, "217y": 315, "217z": 315, "221x": 315, "221y": 315, "221z": 315, "221rx": 315, "221ry": 315, "221rz": 315, "225x": 315, "225y": 315, "225z": 315, "229x": 315, "229y": 315, "229z": 315, "233x": 315, "233y": 315, "237x": 315, "237y": 315, "237z": 315, "241x": 315, "241y": 315, "241z": [315, 322], "245x": 315, "245y": 315, "245z": 315, "249x": 315, "249y": 315, "249z": [315, 322], "253x": 315, "253y": 315, "253z": 315, "257x": 315, "257y": 315, "257z": 315, "261x": 315, "261y": 315, "261z": 315, "262x": 315, "262y": 315, "262z": 315, "262rx": 315, "262ry": 315, "262rz": 315, "265x": 315, "265y": 315, "265z": 315, "269x": 315, "269y": 315, "269z": 315, "273x": 315, "273y": 315, "273z": 315, "277x": 315, "277y": 315, "277z": 315, "281x": 315, "281y": 315, "281z": 315, "301x": 315, "301y": 315, "301z": 315, "303x": 315, "303y": 315, "303z": 315, "303rx": 315, "303ry": 315, "303rz": 315, "305x": 315, "305z": 315, "306x": 315, "306y": 315, "306z": 315, "308x": 315, "308y": 315, "308z": 315, "308rx": 315, "308ry": 315, "308rz": 315, "310x": 315, "310y": 315, "310z": 315, "account": [315, 317], "bmatrix": [315, 324, 325, 327], "dd": 315, "da": 315, "678": 315, "system_guyan": 315, "component_shapes_guyan": 315, "system_i": 315, "in1d": [315, 318], "full_system_guyan": 315, "full_geometry_guyan": 315, "full_shapes_guyan": 315, "general": 315, "truth_shapes_to_compar": 315, "shapes_to_compar": 315, "frequency_error": 315, "88": 315, "89": 315, "69": [315, 325, 334], "452": 315, "incorpor": [315, 334], "dynamic_frequ": 315, "system_dynam": 315, "component_shapes_dynam": 315, "full_system_dynam": 315, "full_geometry_dynam": 315, "full_shapes_dynam": 315, "431": 315, "elsewher": 315, "famou": 315, "ii": 315, "ib": 315, "bi": 315, "bb": 315, "henc": [315, 327], "system_cb": 315, "component_shapes_cb": 315, "n_fixed_base_mod": 315, "full_system_cb": 315, "full_geometry_cb": 315, "full_shapes_cb": 315, "clearli": [315, 322, 323, 324, 325, 328, 334], "fair": 315, "system_cm": 315, "component_shapes_cm": 315, "full_system_cm": 315, "full_geometry_cm": 315, "full_shapes_cm": 315, "shape_mac": 315, "cm": [315, 334], "geometry_i": 315, "shapes_i": 315, "full_shapes_to_compar": 315, "shapes_i_to_compar": 315, "flip_sign": 315, "compare_geom": 315, "set_ylim": [315, 323, 324, 328], "surprisingli": 315, "special": [315, 324], "struggl": 315, "expect": [315, 316, 317, 323, 325, 327, 328, 334, 335], "reaction": 315, "abil": [315, 316, 325, 329, 334, 335], "focu": [315, 322, 324, 329, 334], "bog": 315, "pptx": 316, "read_rattlesnake_output": [316, 335], "rattlesnake_modal_data": 316, "tight_layout": [316, 317, 322, 323, 324, 325, 327, 328, 334], "worth": [316, 317, 323, 325], "explor": [316, 317, 334], "31745": 316, "tell": [316, 317, 318, 322, 324, 325, 328, 334], "piec": [316, 317, 325], "sdynpy_coordin": 316, "28376x": 316, "28376y": 316, "28376z": 316, "28560x": 316, "28560y": 316, "28560z": 316, "17290x": 316, "17290y": 316, "17290z": 316, "16733x": 316, "16733y": 316, "16733z": 316, "2467x": 316, "2467y": 316, "2467z": 316, "2392x": 316, "2392y": 316, "2392z": 316, "33715y": 316, "36140y": 316, "24046x": 316, "30947x": 316, "8579y": 316, "12664y": 316, "4475z": 316, "2991y": 316, "5457x": 316, "time_start": 316, "time_end": 316, "truncated_time_data": 316, "response_indic": 316, "reference_indic": 316, "pull": [316, 322, 323, 324, 325, 334], "launch": 316, "frf_window": 316, "lbf": 316, "realli": [316, 325], "510": 316, "propreti": 316, "obviou": [316, 317, 322, 323, 324, 334], "eventu": [316, 318, 323, 328, 334], "question": 316, "exodus_eigensolut": 316, "fem_geometri": 316, "destroi": 316, "keep_nod": 316, "12664": 316, "17290": 316, "30947": 316, "28560": 316, "36140": 316, "33715": 316, "28376": 316, "24046": 316, "16733": 316, "8579": 316, "4475": 316, "2467": 316, "2991": 316, "2392": 316, "5457": 316, "rc": 316, "rattlesnake_test_geometri": 316, "smac_gui": [316, 334, 335], "sdynpy_smac": 316, "0x14fe6f05b80": 316, "guiess": 316, "solver": [316, 317], "autofit": [316, 334], "switch": [316, 323, 334], "rattlesnake_test_shapes_smac": 316, "script": [316, 317, 334], "sdynpy_polymax": 316, "0x14fff4c5d30": 316, "resynthesi": [316, 317, 334], "rattlesnake_test_shapes_polymax": 316, "test_shapes_smac": 316, "fem_shap": 316, "2000": [316, 317, 318, 324, 327, 334], "meaning": [316, 322, 334], "response_dof": [316, 328, 329, 334], "test_shape_matrix_smac": 316, "test_shape_matrix_polymax": 316, "test_shape_matrix_fem": 316, "fem_shapes_reduc": 316, "mac_smac_polymax": 316, "mac_smac_fem": 316, "mac_polymax_fem": 316, "fem_match": 316, "geometry_kwarg": 316, "mode_1": 316, "perfectli": [316, 327], "enough": [316, 317, 318, 322, 323, 327, 328], "doc": [316, 335], "create_summary_pptx": [316, 335], "creeat": 316, "templat": 316, "design": [316, 322, 334], "slide": [316, 334], "background": 316, "corpor": 316, "reformat": 316, "custom": 316, "layout": [316, 334], "theme": 316, "pr": 316, "powerpoint_sandia_them": 316, "barc": 316, "rattlesnake_test_quicklook": 316, "overview": [316, 320], "create_latex_summari": [316, 335], "strongli": [316, 329], "subdirectori": 316, "snippet": 316, "rattlesnake_test": 316, "rattlesnake_test_memo_cont": 316, "tex": 316, "documentclass": 316, "usepackag": 316, "graphicx": 316, "caption": 316, "subcapt": 316, "dan": 316, "rohe": 316, "maketitl": 316, "abstract": [316, 323], "obvious": [316, 329], "context": 316, "surround": [316, 322, 328], "setup": [316, 317, 322, 334], "analyst": 316, "who": 316, "postprocess": 316, "gain": [316, 325, 334], "happen": [316, 317, 323, 324, 325, 327, 328, 329, 334], "limit": [316, 318, 322, 327, 328, 334], "lstsq": 316, "rebuild": 316, "properli": [316, 328], "assumpt": [316, 328, 334], "fexo_repack": 316, "expanded_shapes_polymax": 316, "combined_expanded_geometri": 316, "combined_expanded_shap": 316, "expanded_mode_1": 316, "rattlesnake_test_output": 316, "rattlesnake_test_output_expand": 316, "paraview": 316, "contact": 317, "solidmechan": 317, "explicit": 317, "cantilev": 317, "fork": 317, "character": [317, 322], "quit": [317, 322, 325, 334], "clumbsi": 317, "scroll": [317, 325], "inc": 317, "pseudorandom_signal_fft": 317, "abruptli": 317, "10th": 317, "shorten": 317, "lose": [317, 329], "intermedi": 317, "leakag": [317, 328], "determinist": [317, 328], "smoothli": 317, "past": [317, 323, 328], "signal_shap": 317, "random_signal_": 317, "random_signal_fft": 317, "repetit": 317, "deck": 317, "wrote": 317, "piecewis": 317, "prescrib": 317, "nodelist_2": 317, "aprepro": 317, "termin": 317, "0000025": 317, "twice": [317, 334], "tuning_fork_pseudorandom": 317, "40002": 317, "333": 317, "144": 317, "displacement_x": 317, "displacement_i": 317, "displacement_z": 317, "acceleration_x": 317, "acceleration_i": 317, "acceleration_z": 317, "force_external_x": 317, "force_external_i": 317, "force_external_z": 317, "external_energi": 317, "internal_energi": 317, "kinetic_energi": 317, "momentum_x": 317, "momentum_i": 317, "momentum_z": 317, "explicitli": [317, 325], "grab": 317, "force_nod": 317, "excitation_force_sign": 317, "force_data": 317, "signalprocessinggui": [317, 328, 334], "all_data": 317, "shortli": [317, 325, 334], "durat": [317, 334], "uncertainti": 317, "sm": 317, "explain": 317, "diverg": [317, 334], "steadi": [317, 323, 327, 328, 334], "vice": [317, 334], "versa": [317, 334], "doubl": [317, 323, 334], "sent": [317, 334], "send": [317, 334], "anyth": 317, "rectangl": 317, "reject": [317, 328], "counter": 317, "notic": 317, "clean": [317, 328], "219": 317, "polypi": [317, 335], "bring": [317, 325, 334], "spurious": 317, "thoughout": 317, "qmif": [317, 334], "sensit": 317, "dip": [317, 328], "poli": [317, 334], "statu": 317, "messag": 317, "symbol": [317, 325, 334], "unstabl": 317, "shouldn": 317, "circl": [317, 324, 334], "rule": [317, 323, 325, 328, 334], "thumb": [317, 328, 334], "peopl": 317, "mous": [317, 325, 334], "hover": [317, 334], "black": 317, "frfgui": 317, "332": 317, "judg": [317, 334], "adequaci": [317, 334], "accumul": 317, "overal": [317, 334], "pictur": 317, "tuning_fork_random": 317, "force_external_": 317, "slightli": [317, 328, 334], "leav": [317, 324, 334], "alon": 317, "substanti": 317, "relat": [317, 327], "outsid": [317, 323, 328], "standpoint": 317, "unrel": 317, "suffer": [317, 327], "lessen": 317, "diminish": 317, "middl": [317, 325, 327, 328, 329], "tuning_fork_geometri": 317, "benefici": 317, "exodus_sd": 317, "tuning_fork_sd": 317, "shapes_sd": 317, "shapes_sm_pr": 317, "tuning_fork_pseudorandom_shap": 317, "shapes_sm_ra": 317, "tuning_fork_random_shap": 317, "mechan": [317, 325, 335], "sm_mac": 317, "pr_indic": 317, "ra_indic": 317, "755": 317, "1299": 317, "1717": 317, "1808": 317, "bewteen": 317, "artifici": [317, 328, 334], "excel": 317, "coars": 317, "hexahedr": 317, "softer": 317, "refin": 317, "sd_mac": 317, "2500": [317, 324, 325, 327], "sd_indic": 317, "176": 317, "166": 317, "240": 317, "358": 317, "327": 317, "362": 317, "426": 317, "378": 317, "832": 317, "848": 317, "1129": 317, "1011": 317, "1383": 317, "1098": 317, "1445": 317, "1457": 317, "1234": 317, "1860": 317, "1937": 317, "1655": 317, "1947": 317, "1751": 317, "artifact": [317, 328], "heavili": [317, 325, 327, 334], "lid": 318, "bc": 318, "abc": 318, "serv": 318, "qhullerror": 318, "pretend": [318, 323, 334], "container_s": 318, "component_s": 318, "lid_depth": 318, "container_thick": 318, "lid_posit": 318, "component_posit": 318, "grid_siz": 318, "component_grid_s": 318, "grid_inset": 318, "other_dimens": 318, "meshgrid_input": 318, "grid_0": 318, "grid_1": 318, "grid_2": 318, "this_posit": 318, "this_positions_opposit": 318, "exactli": [318, 323, 325, 327, 328], "max_condit": 318, "creation": [318, 328], "n_node": 318, "original_indic": 318, "face_indic": 318, "face_nod": 318, "face_el": 318, "atleast_1d": 318, "proce": [318, 323, 325, 334], "transmission_simulator_mod": 318, "system_ab": 318, "system_bc": 318, "system_b": 318, "geom": 318, "forget": 318, "connection_nod": 318, "connection_map_ab": 318, "connection_map_bc": 318, "connection_map_b": 318, "soften": 318, "connection_shapes_ab": 318, "connection_shapes_bc": 318, "connection_shapes_b": 318, "connection_shap": 318, "connection_dofs_ab": 318, "connection_dofs_bc": 318, "connection_dofs_b": 318, "constraint_matrix_ab_b": 318, "constraint_matrix_bc_b": 318, "constrained_system": [318, 334], "constrained_shap": [318, 334], "instrument": [319, 322, 329], "virtual": 319, "experi": [319, 328], "checkout": 319, "recommend": [320, 328, 334], "showcas": 320, "bibliographi": 320, "search": 320, "undamp": [321, 324, 334], "harmon": [321, 327, 335], "homework": [321, 326], "studi": 322, "oppos": [322, 324, 325], "boat": 322, "wind": 322, "turbin": 322, "bumpi": 322, "road": 322, "car": 322, "tire": 322, "utmost": 322, "surviv": 322, "failur": 322, "servic": 322, "differenti": [322, 323], "analogi": 322, "roof": 322, "ultim": 322, "strength": 322, "word": [322, 327], "depth": 322, "worri": [322, 328], "explan": 322, "subpackag": 322, "propel": 322, "load_loc": 322, "275z": 322, "load_sign": 322, "turbul": 322, "slowli": [322, 328], "nightmar": 322, "decod": 322, "responses_fft": [322, 324], "loads_fft": 322, "flat": [322, 323], "pretti": 322, "uniformli": 322, "peaki": 322, "big": [322, 334], "distinct": [322, 329], "preferenti": 322, "bias": 322, "imbalanc": 322, "spin": [322, 325], "imagin": [322, 328], "force_loc": 322, "response_loc": [322, 327], "die": [322, 323, 328], "amplifi": [322, 323], "attenu": [322, 328], "chirp_respons": 322, "chirp_load": 322, "swept": 322, "axessubplot": [322, 329], "ylabel": [322, 329], "gt": [322, 327, 329], "thought": 322, "add_subplot": [322, 323], "ax2": 322, "frame_on": 322, "c0": 322, "tick_param": 322, "c1": [322, 324, 325], "xaxi": 322, "tick_top": 322, "yaxi": 322, "tick_right": 322, "set_label_posit": 322, "amplif": [322, 323, 325], "surpris": 322, "pattern": 322, "cover": [322, 325, 327, 328, 334], "complic": [322, 324, 325, 334], "clearer": 322, "saw": [322, 323, 324, 325, 326, 334], "theori": [322, 323, 324, 326, 327], "behind": [322, 323, 327], "fundament": 323, "phenomenon": [323, 328], "primarili": [323, 325], "presenc": 323, "restor": [323, 325], "stretch": 323, "farther": 323, "atom": 323, "molecul": 323, "arriv": [323, 325], "suddenli": 323, "constantli": 323, "slow": [323, 327, 334], "travel": [323, 324], "overcom": [323, 325], "sai": [323, 324, 328, 334], "gridspec": 323, "funcanim": 323, "fa": 323, "def": 323, "draw_spring_mass": 323, "mass_siz": 323, "mass_to_ground_length": 323, "num_wind": 323, "spring_width": 323, "arrow_s": 323, "arrow_label": 323, "arrow_color": 323, "arrow_offset": 323, "fontsiz": 323, "spring_length": 323, "ground_posit": 323, "mass_x": 323, "mass_i": 323, "va": 323, "num_arrow": 323, "els": 323, "arrow_posit": 323, "mean_posit": 323, "quiver": 323, "xy": [323, 327], "scale_unit": 323, "kx": 323, "ddot": [323, 324, 325, 329], "dof_nam": 323, "force_sign": [323, 324, 325], "plot_spring_mass_respons": 323, "displacement_index": 323, "drawing_axi": 323, "disp_axi": 323, "vel_axi": 323, "accel_axi": 323, "force_axi": 323, "constrained_layout": 323, "disp_siz": 323, "vel_siz": 323, "accel_s": 323, "force_s": 323, "axvlin": [323, 328], "signfic": [323, 327], "downward": 323, "acquir": [323, 328], "momentum": 323, "upward": [323, 324], "250": [323, 325], "325": 323, "indefinit": [323, 325, 328], "fortun": 323, "truli": 323, "loss": 323, "ball": 323, "bounc": 323, "never": [323, 324, 329, 334], "guitar": 323, "pluck": [323, 325], "di": 323, "damping_valu": 323, "oscil": 323, "think": [323, 324, 327, 334], "c_": 323, "cr": 323, "km": 323, "applic": [323, 334], "plug": [323, 325], "5000": [323, 334], "amplification_factor": 323, "amplfic": 323, "notabl": 323, "spike": 323, "unintuit": 323, "realist": [323, 325, 328, 334], "lag": 323, "x_1": [323, 324, 325], "x_2": [323, 324, 325], "compact": 323, "euler": 323, "former": [323, 334], "chain": [323, 325], "multiplicand": 323, "goe": [323, 324], "set_ytick": [323, 324], "infin": [323, 328], "transit": 323, "blunt": [323, 334], "span": [323, 334], "probabl": [323, 327], "sharper": [323, 334], "repons": 323, "practition": [323, 327, 328], "expos": 323, "laser": [323, 327], "vibromet": 323, "becom": [323, 324, 325, 327, 328], "accustom": 323, "derivative_label": 323, "reduction_label": 323, "ax_row": 323, "undergo": [323, 325], "opportun": [323, 328], "neglig": [323, 334], "ma": 323, "influenc": 323, "domin": 323, "inerti": 323, "undefin": 323, "swap": [323, 325], "infinit": [323, 325, 328, 334], "talk": 323, "unnecessari": 323, "huge": 323, "degree_of_freedom": 323, "strang": [323, 334], "600": 323, "frequency_lin": [323, 328, 334], "frf_valu": 323, "axhlin": 323, "hit": [323, 327], "agre": 323, "own": [323, 324], "15000": 323, "fine": 323, "medium": 323, "vast": 324, "major": [324, 328], "m_1": [324, 325, 327], "k_1": [324, 325, 327], "m_2": [324, 325, 327], "k_2": [324, 325, 327], "f_1": [324, 325], "_1": [324, 325, 327, 328], "f_2": [324, 325], "_2": [324, 325, 327], "rearrang": 324, "whenev": 324, "algebra": [324, 325, 334], "firstli": 324, "equval": 324, "newton": 324, "law": [324, 328], "m1": [324, 325], "m2": [324, 325], "k1": [324, 325], "k2": [324, 325], "1500": [324, 325, 327, 328], "sinusodi": 324, "superposit": 324, "c_1": [324, 325, 327], "c_2": [324, 325, 327], "induc": 324, "affect": [324, 327], "m_0": 324, "_0": 324, "c_0": 324, "k_0": 324, "c2": [324, 325], "interestingli": 324, "vdot": [324, 325], "f_i": 324, "x_i": [324, 325], "cancel": [324, 325, 327], "invert": [324, 325, 327, 328, 334, 335], "far": [324, 327, 334], "1001": [324, 325], "inv": 324, "response_nam": 324, "response_frf": 324, "axes_row": 324, "nphase": [324, 328], "phase_axi": 324, "phase_handl": 324, "mag_axi": 324, "twinx": 324, "magnitude_handl": 324, "input_nam": 324, "unlik": [324, 327, 334], "steep": 324, "vallei": [324, 327, 334], "anti": [324, 327, 328], "consecut": 324, "travers": 324, "360": 324, "circular": 324, "learn": [324, 327], "axis_ext": 324, "instruct": 324, "incred": 324, "input_force_loc": 324, "output_response_loc": 324, "2y": [324, 334], "excitation_frequ": [324, 327], "3000": [324, 328, 334], "revisit": [324, 329], "m_3": [324, 325, 327], "k_3": [324, 325, 327], "k_4": [324, 325, 327], "shuffl": 324, "unshuffl": 324, "manag": 325, "closer": 325, "asid": 325, "matter": [325, 328], "said": 325, "sympi": 325, "sp": 325, "x1": 325, "x2": 325, "lam": 325, "expr": 325, "sub": [325, 326, 334], "char_expr": 325, "det": 325, "eq": 325, "displaystyl": 325, "k_": 325, "m_": 325, "littl": [325, 334], "4500": 325, "1500000": 325, "evalf": 325, "406": 325, "9296691827464": 325, "1843": 325, "0703308172535": 325, "eval": 325, "2105527460540504": 325, "832680064485663": 325, "593": 325, "07033082": 325, "1686": 325, "14066163": 325, "6861406616345074x": 325, "843": 325, "1186": 325, "1861406616345072x": 325, "familiar": [325, 328, 334], "underdetermin": 325, "eachoth": 325, "arbitrarili": [325, 329], "answer": 325, "5930703308172536": 325, "8430703308172537": 325, "foremost": 325, "coeffic": 325, "extrapol": 325, "thankfulli": 325, "q_1": 325, "q_2": 325, "That": 325, "exact": [325, 328, 334], "premultipli": 325, "tild": [325, 329], "m_m": 325, "k_m": 325, "array2str": 325, "formatt": 325, "float_kind": 325, "5f": 325, "70346": 325, "00000": 325, "42154": 325, "693": 325, "19038": 325, "4463": 325, "05962": 325, "decoupl": 325, "4460": 325, "remark": 325, "wonder": 325, "scaled_eigenvector": 325, "92967": 325, "07033": 325, "omega_1": 325, "omega_2": 325, "76618": 325, "64262": 325, "45440": 325, "54177": 325, "ruler": 325, "clamp": 325, "desk": 325, "home": 325, "coupl": [325, 334], "incredibli": [325, 327], "beta": 325, "smear": 325, "benefit": 325, "diagonaliz": 325, "tyical": 325, "imposs": [325, 328], "proportion": 325, "over2": 325, "grow": 325, "critid": 325, "disapp": 325, "joint": 325, "energi": 325, "dissap": 325, "discret": [325, 328], "suspens": 325, "automobil": 325, "terribl": [325, 328], "reformul": 325, "c_m": 325, "63771245": 325, "15386436": 325, "48728755": 325, "insignific": [325, 327], "la": 325, "system_physical_damp": 325, "system_modal_damp": 325, "initial_state_mod": 325, "block_diag": 325, "responses_phys": 325, "response_phys": 325, "response_mod": 325, "drastic": 325, "signific": [325, 328], "insight": [325, 329], "involv": [325, 327], "zeta_1": 325, "zeta_2": 325, "compactli": 325, "ddots2": [325, 329], "zeta_n": [325, 329], "omega_n": [325, 329], "uncoupl": [325, 334], "summat": [325, 327], "sum_": [325, 327, 328], "phi_k": 325, "2i": 325, "zeta_k": 325, "omega_k": 325, "h_per_mod": 325, "2j": 325, "nforc": 325, "nfrf": 325, "counterintuit": 325, "preval": 325, "beam_plat": [325, 327, 328], "plate_system": 325, "plate_shap": 325, "270": 325, "0002": 325, "4788": 325, "0777": 325, "1884": 325, "214": 325, "7808": 325, "2875": 325, "311": 325, "9626": 325, "355": 325, "5867": 325, "361": 325, "3963": 325, "364": 325, "7936": 325, "370": 325, "0250": 325, "462": 325, "3216": 325, "539": 325, "8559": 325, "8296": 325, "594": 325, "6486": 325, "634": 325, "0691": 325, "643": 325, "6099": 325, "710": 325, "9058": 325, "746": 325, "4506": 325, "776": 325, "8982": 325, "809": 325, "6974": 325, "853": 325, "9038": 325, "857": 325, "0849": 325, "879": 325, "0950": 325, "00000000e": 325, "68587394e": 325, "74788054e": 325, "02077709e": 325, "85188450e": 325, "14780834e": 325, "32287546e": 325, "11962560e": 325, "55586672e": 325, "61396270e": 325, "64793564e": 325, "70025026e": 325, "62321608e": 325, "39855912e": 325, "93829573e": 325, "94648580e": 325, "34069147e": 325, "43609950e": 325, "10905806e": 325, "46450634e": 325, "76898214e": 325, "09697367e": 325, "53903834e": 325, "57084918e": 325, "79095024e": 325, "87845506e": 325, "09847824e": 325, "26589551e": 325, "38717885e": 325, "19171311e": 325, "29348485e": 325, "16437174e": 325, "74485641e": 325, "44773478e": 325, "90028325e": 325, "69589392e": 325, "67067932e": 325, "14736558e": 325, "97525145e": 325, "14529355e": 325, "18747047e": 325, "21629035e": 325, "16191482e": 325, "48712418e": 325, "68911588e": 325, "12167411e": 325, "07189408e": 325, "29814800e": 325, "82376881e": 325, "23884395e": 325, "25809218e": 325, "09546603e": 325, "85048039e": 325, "35203567e": 325, "70009100e": 325, "29780204e": 325, "19001068e": 325, "19373036e": 325, "01245326e": 325, "55525400e": 325, "88140699e": 325, "stiffnesss": 325, "interconnect": 325, "col": 325, "ration": 325, "imaging": 325, "math": 325, "plate_geometri": 325, "375": 325, "625": 325, "875": 325, "hard": 325, "preferr": 325, "wheel": 325, "pan": 325, "45rx": 325, "45ry": 325, "45rz": 325, "u5": [325, 334], "twist": 325, "clear": [325, 328], "simpler": 325, "framework": 325, "did": 325, "3x": [325, 334], "unfortun": [326, 328], "broadband": [326, 328], "consider": [326, 329], "discov": 327, "viabl": 327, "drawback": [327, 329], "quicker": 327, "realism": [327, 329], "fly": 327, "41z": 327, "excitation_amplitud": 327, "sample_length": 327, "excitation_sign": 327, "steady_state_respons": 327, "steady_state_refer": 327, "response_magnitud": 327, "response_phas": 327, "harmonic_mag_phas": 327, "response_complex": 327, "reference_magnitud": 327, "reference_phas": 327, "reference_complex": 327, "frf_line": 327, "subplot_kw": 327, "deflection_shap": 327, "0x1b17302cca0": 327, "120": [327, 334], "frf_coordin": 327, "outer_product": 327, "frf_sine": 327, "dsplot": 327, "disadvantag": [327, 328], "rand": 327, "excitation_signal_fft": 327, "excitation_signal_freq": 327, "tile": 327, "frf_broadband": 327, "narrow": [327, 334], "broad": 327, "adventag": 327, "accommod": 327, "bartlett": 327, "welch": 327, "conjug": 327, "xf": [327, 328], "xx": 327, "sequenti": 327, "_i": [327, 328], "ff": [327, 328], "situat": [327, 334], "mental": 327, "harder": [327, 328, 334], "hammer": [327, 328], "rare": 327, "floor": [327, 328, 329, 334], "juxtapos": 327, "antireson": [327, 328], "optic": 327, "vibrometeri": 327, "transduc": 327, "underestim": 327, "overestim": [327, 328], "p_": 327, "commonli": 327, "understim": 327, "implic": 327, "restrict": 327, "greatli": 327, "seldom": 327, "somewher": [327, 334], "_3": 327, "partial": 327, "choleski": 327, "cd": 327, "fz": 327, "zf": 327, "xz": 327, "zz": 327, "hermetian": 327, "unmeasur": 327, "gamma": 327, "mcoh": 327, "wingtip": 327, "241": 327, "999": 327, "frf_truth": 327, "wait": [327, 328], "response_sign": 327, "reference_sign": 327, "gaussian": 327, "deviat": 327, "noisi": [327, 328], "response_signals_nois": 327, "randn": 327, "reference_noise_level": 327, "reference_signals_nois": 327, "frf_no_nois": 327, "frf_ref_nois": 327, "frf_res_nois": 327, "frf_both_nois": 327, "precis": [327, 328, 329, 334], "outperform": 327, "significatli": 327, "margin": 327, "win": 327, "dreadfulli": 327, "hundr": 327, "thousand": 327, "build": 327, "analog": 327, "difficulti": 327, "inabl": 327, "popular": [327, 328, 329, 334], "favor": 327, "xxx": 327, "tradition": 328, "flavor": 328, "blur": 328, "therefrom": 328, "suppos": 328, "signal_fft": 328, "inclin": 328, "hat": 328, "xi": 328, "int_": 328, "infti": 328, "afford": 328, "stand": 328, "meant": 328, "discontinu": [328, 334], "knowledg": 328, "believ": 328, "someth": 328, "assumed_sign": 328, "resampl": 328, "leak": 328, "lesson": 328, "teach": 328, "isol": 328, "rank": 328, "defici": 328, "unabl": 328, "mind": 328, "reference_dof": [328, 334], "response_random_mimo": 328, "reference_random_mimo": 328, "xlim": 328, "all_sign": 328, "spgui": [328, 334], "unattenu": 328, "degred": 328, "inher": [328, 329], "response_pr_mimo": 328, "reference_pr_mimo": 328, "inexperienc": 328, "claim": 328, "game": 328, "chanc": 328, "response_pr_simo": 328, "reference_pr_simo": 328, "minor": 328, "repeatedli": 328, "suit": 328, "response_chirp_simo": 328, "reference_chirp_simo": 328, "first_fram": 328, "first_frame_fft": 328, "nmagnitud": 328, "lesser": 328, "tailor": 328, "didn": 328, "mutlipl": 328, "idea": [328, 329, 334], "randomli": 328, "hour": 328, "dai": 328, "minut": 328, "price": 328, "pai": 328, "response_burst_mimo": 328, "reference_burst_mimo": 328, "nor": 328, "effort": [328, 334], "cut": 328, "keenli": 328, "modern": 328, "unwis": 328, "especi": [328, 334], "response_impact": 328, "reference_impact": 328, "1e1": 328, "roll": 328, "decid": 328, "evolv": 328, "year": 328, "100x": 328, "advent": 328, "rippl": 328, "transmit": 329, "coordinate_indic": 329, "0076": 329, "0864": 329, "7694": 329, "286": 329, "0446": 329, "560": 329, "7624": 329, "926": 329, "9713": 329, "frf_tip": 329, "symmetr": 329, "min_dof_loc": 329, "min_dof": 329, "frf_middl": 329, "lost": [329, 334], "midpoint": 329, "challeng": 329, "propos": 329, "optimum": 329, "odp_i": 329, "prod_": 329, "n_": 329, "phi_": 329, "odp": 329, "xlabel": 329, "midspan": 329, "instrumen": 329, "fisher": 329, "fim": 329, "kept_indic": 329, "cluster": 329, "maxim": 329, "emphasi": 329, "by_condition_numb": 329, "alia": 334, "somewhat": 334, "classic": 334, "academ": 334, "010": 334, "020": 334, "030": 334, "040": 334, "050": 334, "060": 334, "070": 334, "080": 334, "090": 334, "110": 334, "130": 334, "150": 334, "160": 334, "170": 334, "190": 334, "resum": 334, "mimg": 334, "dimg": 334, "simg": 334, "tight": 334, "timg": 334, "1rx": 334, "1ry": 334, "1rz": 334, "2z": 334, "2rx": 334, "2ry": 334, "2rz": 334, "3y": 334, "3z": 334, "3rx": 334, "3ry": 334, "3rz": 334, "4y": 334, "4z": 334, "4rx": 334, "4ry": 334, "4rz": 334, "5y": 334, "5z": 334, "5rx": 334, "5ry": 334, "5rz": 334, "6x": 334, "6y": 334, "6z": 334, "6rx": 334, "6ry": 334, "6rz": 334, "7x": 334, "7y": 334, "7z": 334, "7rx": 334, "7ry": 334, "7rz": 334, "8y": 334, "8z": 334, "8rx": 334, "8ry": 334, "8rz": 334, "9x": 334, "9y": 334, "9z": 334, "9rx": 334, "9ry": 334, "9rz": 334, "10y": 334, "10z": 334, "10rx": 334, "10ry": 334, "10rz": 334, "11x": 334, "11y": 334, "11z": 334, "11rx": 334, "11ry": 334, "11rz": 334, "12x": 334, "12y": 334, "12z": 334, "12rx": 334, "12ry": 334, "12rz": 334, "13x": 334, "13y": 334, "13z": 334, "13rx": 334, "13ry": 334, "13rz": 334, "14x": 334, "14y": 334, "14z": 334, "14rx": 334, "14ry": 334, "14rz": 334, "15x": 334, "15y": 334, "15z": 334, "15rx": 334, "15ry": 334, "15rz": 334, "16x": 334, "16y": 334, "16z": 334, "16rx": 334, "16ry": 334, "16rz": 334, "17x": 334, "17y": 334, "17z": 334, "17rx": 334, "17ry": 334, "17rz": 334, "18x": 334, "18y": 334, "18z": 334, "18rx": 334, "18ry": 334, "18rz": 334, "19x": 334, "19y": 334, "19z": 334, "19rx": 334, "19ry": 334, "19rz": 334, "20x": 334, "20y": 334, "20z": 334, "20rx": 334, "20ry": 334, "20rz": 334, "21x": 334, "21y": 334, "21z": 334, "21rx": 334, "21ry": 334, "21rz": 334, "0153": 334, "648": 334, "5603": 334, "1297": 334, "1207": 334, "1787": 334, "8068": 334, "3504": 334, "9762": 334, "3575": 334, "6135": 334, "intut": 334, "action": 334, "widget": 334, "toggl": 334, "perspect": 334, "hidden": 334, "unintend": 334, "unintention": 334, "treatment": 334, "ramif": 334, "first_shap": 334, "becam": 334, "indexed_shap": 334, "indexed_frequ": 334, "overwritten": 334, "redefinit": 334, "reassign": 334, "ten": 334, "logical_arrai": 334, "redefin": 334, "link": 334, "naiv": 334, "afterward": 334, "interpret": 334, "unus": 334, "unmodifi": 334, "integer_arrai": 334, "propog": 334, "cost": 334, "why": 334, "impos": 334, "burst_random": 334, "signal_bandwidth": 334, "total_sampl": 334, "rms_level": 334, "num_sign": 334, "transvers": 334, "excitation_dof": 334, "argu": 334, "8000": 334, "80000": 334, "wari": 334, "suffici": 334, "60000": 334, "unsatisfactori": 334, "sdynpy_data": 334, "0xxxxxxxxxxxx": 334, "nonetheless": 334, "valuabl": 334, "003": 334, "forth": 334, "cursor": 334, "plan": 334, "revers": 334, "frfs_system": 334, "frfs_modal_system": 334, "frfs_shape": 334, "frfs_time": 334, "drive_frfs_system": 334, "drive_frfs_modal_system": 334, "drive_frfs_shap": 334, "drive_frfs_tim": 334, "hear": 334, "all_time_data": 334, "han": 334, "functino": 334, "directori": 334, "frfs_signalprocessinggui": 334, "frfs_spgui": 334, "deflectionshapeplott": 334, "viewer": 334, "reconstruct": 334, "matur": 334, "progress": 334, "promin": 334, "whatev": 334, "delet": 334, "recomput": 334, "contaimin": 334, "uncheck": 334, "2340": 334, "pure": 334, "synthet": 334, "2200": 334, "stabilizi": 334, "2265": 334, "2076": 334, "strong": 334, "shapes_polypi": 334, "polish": 334, "simlar": 334, "ofth": 334, "stage": 334, "260": 334, "guess": 334, "priori": 334, "rootlist": 334, "confirm": 334, "tighten": 334, "loosen": 334, "likewis": 334, "dialog": 334, "unintut": 334, "essenc": 334, "lighter": 334, "fifth": 334, "3550": 334, "3600": 334, "swath": 334, "998": 334, "487": 334, "pin": 334, "rough": 334, "shapes_smac": 334, "mac_polypi": 334, "mac_smac": 334, "tabul": 334, "polypy_correspond": 334, "smac_correspond": 334, "decim": 334, "024": 334, "064": 334, "1296": 334, "014": 334, "307": 334, "008": 334, "028": 334, "3505": 334, "672": 334, "3576": 334, "198": 334, "564": 334, "overlaid_geometri": 334, "overlaid_shap": 334, "system_2": 334, "node_id_offset": 334, "damped_system": 334, "damped_system_2": 334, "combined_frf": 334, "211z": 334, "coincid": 334, "constrained_geometri": 334, "fewer": 334, "186": 334, "interface_dof": 334, "unconstrain": 334, "201ry": 334, "201rx": 334, "201rz": 334, "constrained_frf_ss": 334, "book": 334, "compare_coordin": 334, "constrained_frf_compar": 334, "pip": 335, "analy": 335, "23rz": 335, "inner": 335, "1858": 335, "2400": 335, "uff_dict": 335, "readuff": 335, "vic": 335, "read_vic3d_mat_fil": 335, "glob": 335, "suitabl": 335, "beamkm_2d": 335, "electro": 335, "routin": 335, "microsoft": 335, "geometry_fit": 335, "frf_invers": 335}, "objects": {"": [[0, 0, 0, "-", "sdynpy"]], "sdynpy": [[1, 0, 0, "-", "core"], [90, 0, 0, "-", "demo"], [95, 0, 0, "-", "doc"], [108, 0, 0, "-", "fem"], [127, 0, 0, "-", "fileio"], [187, 0, 0, "-", "modal"], [209, 0, 0, "-", "signal_processing"]], "sdynpy.core": [[2, 0, 0, "-", "sdynpy_array"], [4, 0, 0, "-", "sdynpy_colors"], [5, 0, 0, "-", "sdynpy_coordinate"], [13, 0, 0, "-", "sdynpy_data"], [46, 0, 0, "-", "sdynpy_geometry"], [70, 0, 0, "-", "sdynpy_matrix"], [73, 0, 0, "-", "sdynpy_shape"], [87, 0, 0, "-", "sdynpy_system"]], "sdynpy.core.sdynpy_array": [[3, 1, 1, "", "SdynpyArray"]], "sdynpy.core.sdynpy_array.SdynpyArray": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "assemble_mat_dict"], [3, 3, 1, "", "fields"], [3, 2, 1, "", "load"], [3, 2, 1, "", "ndenumerate"], [3, 2, 1, "", "save"], [3, 2, 1, "", "savemat"]], "sdynpy.core.sdynpy_coordinate": [[6, 1, 1, "", "CoordinateArray"], [7, 5, 1, "", "coordinate_array"], [8, 5, 1, "", "create_coordinate_string"], [9, 5, 1, "", "from_matlab_cellstr"], [10, 5, 1, "", "from_nodelist"], [11, 5, 1, "", "outer_product"], [12, 5, 1, "", "parse_coordinate_string"]], "sdynpy.core.sdynpy_coordinate.CoordinateArray": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "abs"], [6, 4, 1, "", "data_dtype"], [6, 2, 1, "", "direction_string_array"], [6, 2, 1, "", "from_matlab_cellstr"], [6, 2, 1, "", "from_nodelist"], [6, 2, 1, "", "local_direction"], [6, 2, 1, "", "sign"], [6, 2, 1, "", "string_array"]], "sdynpy.core.sdynpy_data": [[14, 1, 1, "", "AbscissaIndexExtractor"], [15, 1, 1, "", "AbscissaValueExtractor"], [16, 1, 1, "", "CPSDPlot"], [17, 1, 1, "", "CoherenceArray"], [18, 1, 1, "", "ComplexType"], [19, 1, 1, "", "CorrelationArray"], [20, 1, 1, "", "DecayedSineTable"], [21, 1, 1, "", "FunctionTypes"], [22, 1, 1, "", "GUIPlot"], [23, 1, 1, "", "ImpulseResponseFunctionArray"], [24, 1, 1, "", "MPLCanvas"], [25, 1, 1, "", "MPLMultiCanvas"], [26, 1, 1, "", "ModeIndicatorFunctionArray"], [27, 1, 1, "", "MultipleCoherenceArray"], [28, 1, 1, "", "NDDataArray"], [29, 1, 1, "", "PowerSpectralDensityArray"], [30, 1, 1, "", "PowerSpectrumArray"], [31, 1, 1, "", "ShockResponseSpectrumArray"], [32, 1, 1, "", "SpecificDataType"], [33, 1, 1, "", "SpectrumArray"], [34, 1, 1, "", "TimeHistoryArray"], [35, 1, 1, "", "TransferFunctionArray"], [36, 1, 1, "", "TransmissibilityArray"], [37, 1, 1, "", "TypeQual"], [38, 5, 1, "", "data_array"], [39, 5, 1, "", "decayed_sine_table"], [40, 5, 1, "", "frf_from_time_data"], [41, 5, 1, "", "from_imat_struct"], [42, 5, 1, "", "from_uff"], [43, 5, 1, "", "from_unv"], [44, 5, 1, "", "join"], [45, 5, 1, "", "load"]], "sdynpy.core.sdynpy_data.AbscissaIndexExtractor": [[14, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.AbscissaValueExtractor": [[15, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.CPSDPlot": [[16, 1, 1, "", "DataType"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "clear_selection"], [16, 2, 1, "", "coherence_state"], [16, 2, 1, "", "connectUI"], [16, 2, 1, "", "deselect_diagonal"], [16, 2, 1, "", "deselect_lower_triangular"], [16, 2, 1, "", "deselect_upper_triangular"], [16, 2, 1, "", "extend_selection_matrix"], [16, 2, 1, "", "find_function_types"], [16, 2, 1, "", "imaginary_state"], [16, 2, 1, "", "initUI"], [16, 2, 1, "", "init_matrix_plot"], [16, 2, 1, "", "invert_selection"], [16, 2, 1, "", "magnitude_state"], [16, 2, 1, "", "phase_state"], [16, 2, 1, "", "plot"], [16, 2, 1, "", "plot_selected_function"], [16, 2, 1, "", "real_state"], [16, 2, 1, "", "select_diagonal"], [16, 2, 1, "", "select_lower_triangular"], [16, 2, 1, "", "select_plotted"], [16, 2, 1, "", "select_upper_triangular"], [16, 2, 1, "", "selector_click"], [16, 2, 1, "", "selector_unclick"], [16, 2, 1, "", "settext"], [16, 2, 1, "", "state_changed"], [16, 2, 1, "", "update_selection"]], "sdynpy.core.sdynpy_data.CPSDPlot.DataType": [[16, 4, 1, "", "COHERENCE"], [16, 4, 1, "", "IMAGINARY"], [16, 4, 1, "", "MAGNITUDE"], [16, 4, 1, "", "PHASE"], [16, 4, 1, "", "REAL"]], "sdynpy.core.sdynpy_data.CoherenceArray": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.ComplexType": [[18, 4, 1, "", "IMAGINARY"], [18, 4, 1, "", "MAGNITUDE"], [18, 4, 1, "", "MAGPHASE"], [18, 4, 1, "", "PHASE"], [18, 4, 1, "", "REAL"], [18, 4, 1, "", "REALIMAG"], [18, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.CorrelationArray": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.DecayedSineTable": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "construct_displacement"], [20, 2, 1, "", "construct_signal"], [20, 2, 1, "", "construct_velocity"]], "sdynpy.core.sdynpy_data.FunctionTypes": [[21, 4, 1, "", "AUTOCORRELATION"], [21, 4, 1, "", "AUTOSPECTRUM"], [21, 4, 1, "", "COHERENCE"], [21, 4, 1, "", "CROSSCORRELATION"], [21, 4, 1, "", "CROSSSPECTRUM"], [21, 4, 1, "", "CUMULATIVE_FREQUENCY_DISTRIBUTION"], [21, 4, 1, "", "EIGENVALUE"], [21, 4, 1, "", "EIGENVECTOR"], [21, 4, 1, "", "ENERGY_SPECTRAL_DENSITY"], [21, 4, 1, "", "FINITE_IMPULSE_RESPONSE_FILTER"], [21, 4, 1, "", "FORCE_PATTERN"], [21, 4, 1, "", "FREQUENCY_RESPONSE_FUNCTION"], [21, 4, 1, "", "GENERAL"], [21, 4, 1, "", "IMPULSE_RESPONSE_FUNCTION"], [21, 4, 1, "", "MODE_INDICATOR_FUNCTION"], [21, 4, 1, "", "MULTIPLE_COHERENCE"], [21, 4, 1, "", "ORBIT"], [21, 4, 1, "", "ORDER_FUNCTION"], [21, 4, 1, "", "PARTIAL_COHERENCE"], [21, 4, 1, "", "PARTIAL_POWER"], [21, 4, 1, "", "PEAKS_VALLEY"], [21, 4, 1, "", "PHASE_COMPENSATION"], [21, 4, 1, "", "POWER_SPECTRAL_DENSITY"], [21, 4, 1, "", "PROBABILITY_DENSITY_FUNCTION"], [21, 4, 1, "", "SHOCK_RESPONSE_SPECTRUM"], [21, 4, 1, "", "SPECTRUM"], [21, 4, 1, "", "STRAIN_PER_CYCLE"], [21, 4, 1, "", "STRESS_PER_CYCLE"], [21, 4, 1, "", "TIME_RESPONSE"], [21, 4, 1, "", "TRANSMISIBILITY"], [21, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.GUIPlot": [[22, 2, 1, "", "__init__"], [22, 2, 1, "", "connect_callbacks"], [22, 2, 1, "", "deselect_all_complex_types_except"], [22, 2, 1, "", "selection_changed"], [22, 2, 1, "", "set_imaginary"], [22, 2, 1, "", "set_magnitude"], [22, 2, 1, "", "set_magnitude_phase"], [22, 2, 1, "", "set_phase"], [22, 2, 1, "", "set_real"], [22, 2, 1, "", "set_real_imag"], [22, 2, 1, "", "update"], [22, 2, 1, "", "update_abscissa_log"], [22, 2, 1, "", "update_checkbox"], [22, 2, 1, "", "update_data"], [22, 2, 1, "", "update_ordinate_log"]], "sdynpy.core.sdynpy_data.ImpulseResponseFunctionArray": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "enforce_causality"], [23, 2, 1, "", "fft"], [23, 2, 1, "", "find_end_of_ringdown"], [23, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.MPLCanvas": [[24, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.MPLMultiCanvas": [[25, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.MultipleCoherenceArray": [[27, 2, 1, "", "__init__"], [27, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.NDDataArray": [[28, 2, 1, "", "__init__"], [28, 3, 1, "", "abscissa_spacing"], [28, 2, 1, "", "argmax"], [28, 2, 1, "", "argmin"], [28, 3, 1, "", "data_dimension"], [28, 2, 1, "", "downsample"], [28, 2, 1, "", "extract_elements"], [28, 2, 1, "", "extract_elements_by_abscissa"], [28, 2, 1, "", "from_uff"], [28, 2, 1, "", "from_unv"], [28, 3, 1, "", "function_type"], [28, 3, 1, "", "idx_by_ab"], [28, 3, 1, "", "idx_by_el"], [28, 2, 1, "", "interpolate"], [28, 2, 1, "", "join"], [28, 2, 1, "", "load"], [28, 2, 1, "", "max"], [28, 2, 1, "", "min"], [28, 3, 1, "", "num_coordinates"], [28, 3, 1, "", "num_elements"], [28, 2, 1, "", "plot"], [28, 3, 1, "", "reference_coordinate"], [28, 2, 1, "", "reshape_to_matrix"], [28, 3, 1, "", "response_coordinate"], [28, 2, 1, "", "save"], [28, 2, 1, "", "to_imat_struct"], [28, 2, 1, "", "to_imat_struct_array"], [28, 2, 1, "", "to_shape_array"], [28, 2, 1, "", "transform_coordinate_system"], [28, 2, 1, "", "validate_common_abscissa"], [28, 2, 1, "", "zero_pad"]], "sdynpy.core.sdynpy_data.PowerSpectralDensityArray": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "angle"], [29, 2, 1, "", "coherence"], [29, 2, 1, "", "compare_asds"], [29, 2, 1, "", "error_summary"], [29, 2, 1, "", "eye"], [29, 3, 1, "", "function_type"], [29, 2, 1, "", "generate_time_history"], [29, 2, 1, "", "get_asd"], [29, 2, 1, "", "mimo_forward"], [29, 2, 1, "", "mimo_inverse"], [29, 2, 1, "", "plot_asds"], [29, 2, 1, "", "plot_magnitude_coherence_phase"], [29, 2, 1, "", "plot_singular_values"], [29, 2, 1, "", "rms"], [29, 2, 1, "", "set_coherence_phase"], [29, 2, 1, "", "svd"], [29, 2, 1, "", "to_rattlesnake_specification"]], "sdynpy.core.sdynpy_data.PowerSpectrumArray": [[30, 2, 1, "", "__init__"], [30, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.ShockResponseSpectrumArray": [[31, 2, 1, "", "__init__"], [31, 3, 1, "", "function_type"], [31, 2, 1, "", "plot"], [31, 2, 1, "", "sum_decayed_sines"]], "sdynpy.core.sdynpy_data.SpecificDataType": [[32, 4, 1, "", "ACCELERATION"], [32, 4, 1, "", "DISPLACEMENT"], [32, 4, 1, "", "EXCITATION_FORCE"], [32, 4, 1, "", "FREQUENCY"], [32, 4, 1, "", "GENERAL"], [32, 4, 1, "", "HEAT_FLUX"], [32, 4, 1, "", "MASS"], [32, 4, 1, "", "ORDER"], [32, 4, 1, "", "PRESSURE"], [32, 4, 1, "", "REACTION_FORCE"], [32, 4, 1, "", "RPM"], [32, 4, 1, "", "SOUND_INTENSITY"], [32, 4, 1, "", "SOUND_POWER"], [32, 4, 1, "", "SOUND_PRESSURE"], [32, 4, 1, "", "STRAIN"], [32, 4, 1, "", "STRESS"], [32, 4, 1, "", "TEMPERATURE"], [32, 4, 1, "", "TIME"], [32, 4, 1, "", "UNKNOWN"], [32, 4, 1, "", "VELOCITY"], [32, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_data.SpectrumArray": [[33, 2, 1, "", "__init__"], [33, 3, 1, "", "function_type"], [33, 2, 1, "", "ifft"], [33, 2, 1, "", "interpolate_by_zero_pad"], [33, 2, 1, "", "plot"], [33, 2, 1, "", "plot_spectrogram"]], "sdynpy.core.sdynpy_data.TimeHistoryArray": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "burst_random_signal"], [34, 2, 1, "", "chirp_signal"], [34, 2, 1, "", "cpsd"], [34, 2, 1, "", "fft"], [34, 2, 1, "", "find_signal_shift"], [34, 2, 1, "", "from_exodus"], [34, 3, 1, "", "function_type"], [34, 2, 1, "", "haversine_signal"], [34, 2, 1, "", "mimo_forward"], [34, 2, 1, "", "mimo_inverse"], [34, 2, 1, "", "overlap_and_add"], [34, 2, 1, "", "pseudorandom_signal"], [34, 2, 1, "", "pulse_signal"], [34, 2, 1, "", "random_signal"], [34, 2, 1, "", "remove_rigid_body_motion"], [34, 2, 1, "", "rms"], [34, 2, 1, "", "shift_signal"], [34, 2, 1, "", "sine_signal"], [34, 2, 1, "", "split_into_frames"], [34, 2, 1, "", "srs"], [34, 2, 1, "", "stft"], [34, 2, 1, "", "to_rattlesnake_specification"]], "sdynpy.core.sdynpy_data.TransferFunctionArray": [[35, 2, 1, "", "__init__"], [35, 2, 1, "", "compute_cmif"], [35, 2, 1, "", "compute_mif"], [35, 2, 1, "", "compute_mmif"], [35, 2, 1, "", "compute_nmif"], [35, 2, 1, "", "delay_response"], [35, 2, 1, "", "enforce_causality"], [35, 2, 1, "", "from_time_data"], [35, 3, 1, "", "function_type"], [35, 2, 1, "", "ifft"], [35, 2, 1, "", "interpolate_by_zero_pad"], [35, 2, 1, "", "plot"], [35, 2, 1, "", "plot_cond_num"], [35, 2, 1, "", "plot_singular_values"], [35, 2, 1, "", "substructure_by_constraint_matrix"], [35, 2, 1, "", "substructure_by_coordinate"], [35, 2, 1, "", "svd"]], "sdynpy.core.sdynpy_data.TransmissibilityArray": [[36, 2, 1, "", "__init__"], [36, 3, 1, "", "function_type"]], "sdynpy.core.sdynpy_data.TypeQual": [[37, 4, 1, "", "ROTATION"], [37, 4, 1, "", "TRANSLATION"], [37, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_geometry": [[47, 1, 1, "", "CoordinateSystemArray"], [48, 1, 1, "", "DeflectionShapePlotter"], [49, 1, 1, "", "ElementArray"], [50, 1, 1, "", "Geometry"], [51, 1, 1, "", "GeometryPlotter"], [52, 1, 1, "", "NodeArray"], [53, 1, 1, "", "ShapePlotter"], [54, 1, 1, "", "TracelineArray"], [55, 1, 1, "", "TransientPlotter"], [56, 5, 1, "", "coordinate_system_array"], [57, 5, 1, "", "element_array"], [58, 5, 1, "", "from_exodus"], [59, 5, 1, "", "from_imat_struct"], [60, 5, 1, "", "from_uff"], [61, 5, 1, "", "from_unv"], [62, 5, 1, "", "global_coord"], [63, 5, 1, "", "global_deflection"], [64, 1, 1, "", "id_map"], [65, 5, 1, "", "load"], [66, 5, 1, "", "local_coord"], [67, 5, 1, "", "node_array"], [68, 5, 1, "", "split_list"], [69, 5, 1, "", "traceline_array"]], "sdynpy.core.sdynpy_geometry.CoordinateSystemArray": [[47, 2, 1, "", "__init__"], [47, 4, 1, "", "data_dtype"], [47, 2, 1, "", "from_unv"]], "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "modify_abscissa"], [48, 2, 1, "", "save_multiline_animation"]], "sdynpy.core.sdynpy_geometry.ElementArray": [[49, 2, 1, "", "__init__"], [49, 4, 1, "", "data_dtype"], [49, 2, 1, "", "from_unv"], [49, 2, 1, "", "reduce"]], "sdynpy.core.sdynpy_geometry.Geometry": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "add_element"], [50, 2, 1, "", "add_traceline"], [50, 2, 1, "", "camera_visualization"], [50, 2, 1, "", "compress_ids"], [50, 2, 1, "", "copy"], [50, 2, 1, "", "from_exodus"], [50, 2, 1, "", "from_imat_struct"], [50, 2, 1, "", "from_uff"], [50, 2, 1, "", "from_unv"], [50, 2, 1, "", "global_deflection"], [50, 2, 1, "", "global_node_coordinate"], [50, 2, 1, "", "load"], [50, 2, 1, "", "map_ids"], [50, 2, 1, "", "modify_ids"], [50, 2, 1, "", "node_by_global_position"], [50, 2, 1, "", "overlay_geometries"], [50, 2, 1, "", "plot"], [50, 2, 1, "", "plot_coordinate"], [50, 2, 1, "", "plot_deflection_shape"], [50, 2, 1, "", "plot_shape"], [50, 2, 1, "", "plot_transient"], [50, 2, 1, "", "reduce"], [50, 2, 1, "", "rigid_body_shapes"], [50, 2, 1, "", "save"], [50, 2, 1, "", "write_to_unv"]], "sdynpy.core.sdynpy_geometry.GeometryPlotter": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "save_rotation_animation"]], "sdynpy.core.sdynpy_geometry.NodeArray": [[52, 2, 1, "", "__init__"], [52, 2, 1, "", "by_grid"], [52, 2, 1, "", "by_position"], [52, 4, 1, "", "data_dtype"], [52, 2, 1, "", "from_unv"], [52, 2, 1, "", "global_coordinate"], [52, 2, 1, "", "project_to_minimum_plane"], [52, 2, 1, "", "reduce"], [52, 2, 1, "", "triangulate"]], "sdynpy.core.sdynpy_geometry.ShapePlotter": [[53, 2, 1, "", "__init__"], [53, 2, 1, "", "add_menu_bar"], [53, 2, 1, "", "add_toolbars"], [53, 2, 1, "", "compute_displacements"], [53, 2, 1, "", "next_shape"], [53, 2, 1, "", "play_animation"], [53, 2, 1, "", "prev_shape"], [53, 2, 1, "", "save_animation"], [53, 2, 1, "", "save_animation_all_shapes"], [53, 2, 1, "", "save_animation_from_action"], [53, 2, 1, "", "select_complex"], [53, 2, 1, "", "select_loop"], [53, 2, 1, "", "select_scaling_0p25"], [53, 2, 1, "", "select_scaling_0p5"], [53, 2, 1, "", "select_scaling_0p8"], [53, 2, 1, "", "select_scaling_1"], [53, 2, 1, "", "select_scaling_1p25"], [53, 2, 1, "", "select_scaling_2p0"], [53, 2, 1, "", "select_scaling_4p0"], [53, 2, 1, "", "select_shape"], [53, 2, 1, "", "select_speed_0p8"], [53, 2, 1, "", "select_speed_1"], [53, 2, 1, "", "select_speed_1p25"], [53, 2, 1, "", "show_comment"], [53, 2, 1, "", "stop_animation"], [53, 2, 1, "", "toggle_undeformed"], [53, 2, 1, "", "update_shape"], [53, 2, 1, "", "update_shape_mode"]], "sdynpy.core.sdynpy_geometry.TracelineArray": [[54, 2, 1, "", "__init__"], [54, 4, 1, "", "data_dtype"], [54, 2, 1, "", "from_unv"], [54, 2, 1, "", "reduce"]], "sdynpy.core.sdynpy_geometry.TransientPlotter": [[55, 2, 1, "", "__init__"], [55, 2, 1, "", "add_menu_bar"], [55, 2, 1, "", "add_toolbars"], [55, 2, 1, "", "go_to_first_step"], [55, 2, 1, "", "go_to_last_step"], [55, 2, 1, "", "go_to_next_step"], [55, 2, 1, "", "go_to_previous_step"], [55, 2, 1, "", "modify_abscissa"], [55, 2, 1, "", "play_animation"], [55, 2, 1, "", "play_animation_reverse"], [55, 2, 1, "", "save_animation"], [55, 2, 1, "", "select_scaling_0p25"], [55, 2, 1, "", "select_scaling_0p5"], [55, 2, 1, "", "select_scaling_0p8"], [55, 2, 1, "", "select_scaling_1"], [55, 2, 1, "", "select_scaling_1p25"], [55, 2, 1, "", "select_scaling_2p0"], [55, 2, 1, "", "select_scaling_4p0"], [55, 2, 1, "", "select_speed_0p8"], [55, 2, 1, "", "select_speed_1"], [55, 2, 1, "", "select_speed_1p25"], [55, 2, 1, "", "stop_animation"], [55, 2, 1, "", "update_abscissa"], [55, 2, 1, "", "update_abscissa_reverse"], [55, 2, 1, "", "update_displacement"]], "sdynpy.core.sdynpy_geometry.id_map": [[64, 2, 1, "", "__init__"]], "sdynpy.core.sdynpy_matrix": [[71, 1, 1, "", "Matrix"], [72, 5, 1, "", "matrix"]], "sdynpy.core.sdynpy_matrix.Matrix": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "argsort_coordinate"], [71, 3, 1, "", "coordinate"], [71, 2, 1, "", "data_dtype"], [71, 2, 1, "", "eye"], [71, 3, 1, "", "num_coordinate_columns"], [71, 3, 1, "", "num_coordinate_rows"], [71, 2, 1, "", "plot"], [71, 2, 1, "", "sort_coordinate"]], "sdynpy.core.sdynpy_shape": [[74, 1, 1, "", "ShapeArray"], [75, 5, 1, "", "concatenate_dofs"], [76, 5, 1, "", "from_exodus"], [77, 5, 1, "", "from_imat_struct"], [78, 5, 1, "", "from_unv"], [79, 5, 1, "", "mac"], [80, 5, 1, "", "overlay_shapes"], [81, 5, 1, "", "rigid_body_check"], [82, 5, 1, "", "rigid_body_error"], [83, 5, 1, "", "rigid_body_fix_node_orientation"], [84, 5, 1, "", "shape_alignment"], [85, 5, 1, "", "shape_array"], [86, 5, 1, "", "shape_comparison_table"]], "sdynpy.core.sdynpy_shape.ShapeArray": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "complex_data_dtype"], [74, 2, 1, "", "compute_frf"], [74, 2, 1, "", "concatenate_dofs"], [74, 2, 1, "", "expand"], [74, 2, 1, "", "from_exodus"], [74, 2, 1, "", "from_imat_struct"], [74, 2, 1, "", "from_uff"], [74, 2, 1, "", "from_unv"], [74, 2, 1, "", "is_complex"], [74, 2, 1, "", "mode_table"], [74, 3, 1, "", "modeshape"], [74, 3, 1, "", "ndof"], [74, 2, 1, "", "optimize_degrees_of_freedom"], [74, 2, 1, "", "overlay_shapes"], [74, 2, 1, "", "plot_frequency"], [74, 2, 1, "", "real_data_dtype"], [74, 2, 1, "", "reduce"], [74, 2, 1, "", "reduce_for_comparison"], [74, 2, 1, "", "repack"], [74, 2, 1, "", "shape_alignment"], [74, 2, 1, "", "system"], [74, 2, 1, "", "time_integrate"], [74, 2, 1, "", "to_real"], [74, 2, 1, "", "transform_coordinate_system"], [74, 2, 1, "", "write_to_unv"]], "sdynpy.core.sdynpy_system": [[88, 1, 1, "", "System"], [89, 5, 1, "", "substructure_by_position"]], "sdynpy.core.sdynpy_system.System": [[88, 3, 1, "", "C"], [88, 3, 1, "", "K"], [88, 3, 1, "", "M"], [88, 2, 1, "", "__init__"], [88, 2, 1, "", "assign_modal_damping"], [88, 2, 1, "", "beam"], [88, 2, 1, "", "concatenate"], [88, 2, 1, "", "constrain"], [88, 3, 1, "", "coordinate"], [88, 2, 1, "", "copy"], [88, 3, 1, "", "damping"], [88, 2, 1, "", "eigensolution"], [88, 2, 1, "", "frequency_response"], [88, 2, 1, "", "from_exodus_superelement"], [88, 2, 1, "", "get_indices_by_coordinate"], [88, 2, 1, "", "load"], [88, 3, 1, "", "mass"], [88, 3, 1, "", "ndof"], [88, 3, 1, "", "ndof_transformed"], [88, 2, 1, "", "reduce"], [88, 2, 1, "", "reduce_craig_bampton"], [88, 2, 1, "", "reduce_dynamic"], [88, 2, 1, "", "reduce_guyan"], [88, 2, 1, "", "save"], [88, 2, 1, "", "set_proportional_damping"], [88, 2, 1, "", "simulate_test"], [88, 2, 1, "", "spy"], [88, 3, 1, "", "stiffness"], [88, 2, 1, "", "substructure_by_coordinate"], [88, 2, 1, "", "substructure_by_position"], [88, 2, 1, "", "substructure_by_shape"], [88, 2, 1, "", "time_integrate"], [88, 2, 1, "", "to_state_space"], [88, 3, 1, "", "transformation"], [88, 2, 1, "", "transformation_matrix_at_coordinates"], [88, 2, 1, "", "transformation_shapes"]], "sdynpy.demo": [[91, 0, 0, "-", "beam_airplane"], [93, 0, 0, "-", "beam_plate"]], "sdynpy.demo.beam_airplane": [[92, 5, 1, "", "create_models"]], "sdynpy.demo.beam_plate": [[94, 5, 1, "", "create_models"]], "sdynpy.doc": [[96, 0, 0, "-", "sdynpy_latex"], [98, 0, 0, "-", "sdynpy_ppt"]], "sdynpy.doc.sdynpy_latex": [[97, 5, 1, "", "create_latex_summary"]], "sdynpy.doc.sdynpy_ppt": [[99, 5, 1, "", "add_geometry_overview_slide"], [100, 5, 1, "", "add_section_header_slide"], [101, 5, 1, "", "add_shape_animation_slides"], [102, 5, 1, "", "add_shape_comparison_animation_slides"], [103, 5, 1, "", "add_shape_comparison_overview_slide"], [104, 5, 1, "", "add_shape_overview_slide"], [105, 5, 1, "", "add_title_slide"], [106, 5, 1, "", "create_summary_pptx"], [107, 5, 1, "", "position_placeholder"]], "sdynpy.fem": [[109, 0, 0, "-", "sdynpy_beam"], [113, 0, 0, "-", "sdynpy_dof"], [116, 0, 0, "-", "sdynpy_exodus"], [125, 0, 0, "-", "sdynpy_shaker"]], "sdynpy.fem.sdynpy_beam": [[110, 5, 1, "", "beamkm"], [111, 5, 1, "", "beamkm_2d"], [112, 5, 1, "", "rect_beam_props"]], "sdynpy.fem.sdynpy_dof": [[114, 5, 1, "", "by_condition_number"], [115, 5, 1, "", "by_effective_independence"]], "sdynpy.fem.sdynpy_exodus": [[117, 1, 1, "", "Exodus"], [118, 6, 1, "", "ExodusError"], [119, 1, 1, "", "ExodusInMemory"], [120, 5, 1, "", "extract_sharp_edges"], [121, 5, 1, "", "face_connectivity"], [122, 5, 1, "", "mesh_triangulation_array"], [123, 5, 1, "", "reduce_exodus_to_surfaces"], [124, 1, 1, "", "subfield"]], "sdynpy.fem.sdynpy_exodus.Exodus": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "close"], [117, 2, 1, "", "extract_sharp_edges"], [117, 2, 1, "", "get_block_surface"], [117, 2, 1, "", "get_coord"], [117, 2, 1, "", "get_coord_names"], [117, 2, 1, "", "get_coords"], [117, 2, 1, "", "get_displacements"], [117, 2, 1, "", "get_elem_attr"], [117, 2, 1, "", "get_elem_blk_ids"], [117, 2, 1, "", "get_elem_blk_info"], [117, 2, 1, "", "get_elem_connectivity"], [117, 2, 1, "", "get_elem_num_map"], [117, 2, 1, "", "get_elem_type"], [117, 2, 1, "", "get_elem_variable_names"], [117, 2, 1, "", "get_elem_variable_table"], [117, 2, 1, "", "get_elem_variable_value"], [117, 2, 1, "", "get_elem_variable_values"], [117, 2, 1, "", "get_element_property_names"], [117, 2, 1, "", "get_element_property_value"], [117, 2, 1, "", "get_global_variable_names"], [117, 2, 1, "", "get_global_variable_values"], [117, 2, 1, "", "get_info_records"], [117, 2, 1, "", "get_node_num_map"], [117, 2, 1, "", "get_node_set_dist_factors"], [117, 2, 1, "", "get_node_set_ids"], [117, 2, 1, "", "get_node_set_names"], [117, 2, 1, "", "get_node_set_nodes"], [117, 2, 1, "", "get_node_set_num_nodes"], [117, 2, 1, "", "get_node_variable_names"], [117, 2, 1, "", "get_node_variable_value"], [117, 2, 1, "", "get_node_variable_values"], [117, 2, 1, "", "get_qa_records"], [117, 2, 1, "", "get_side_set_dist_factors"], [117, 2, 1, "", "get_side_set_faces"], [117, 2, 1, "", "get_side_set_ids"], [117, 2, 1, "", "get_side_set_names"], [117, 2, 1, "", "get_side_set_node_list"], [117, 2, 1, "", "get_side_set_num_faces"], [117, 2, 1, "", "get_times"], [117, 2, 1, "", "load_into_memory"], [117, 2, 1, "", "num_attr"], [117, 3, 1, "", "num_blks"], [117, 3, 1, "", "num_dimensions"], [117, 3, 1, "", "num_elem_variables"], [117, 3, 1, "", "num_elems"], [117, 2, 1, "", "num_elems_in_blk"], [117, 3, 1, "", "num_global_variables"], [117, 3, 1, "", "num_node_sets"], [117, 3, 1, "", "num_node_variables"], [117, 3, 1, "", "num_nodes"], [117, 2, 1, "", "num_nodes_per_elem"], [117, 3, 1, "", "num_side_sets"], [117, 3, 1, "", "num_times"], [117, 2, 1, "", "put_coord_names"], [117, 2, 1, "", "put_coords"], [117, 2, 1, "", "put_elem_blk_ids"], [117, 2, 1, "", "put_elem_blk_info"], [117, 2, 1, "", "put_elem_num_map"], [117, 2, 1, "", "put_elem_variable_names"], [117, 2, 1, "", "put_element_property_names"], [117, 2, 1, "", "put_element_property_value"], [117, 2, 1, "", "put_global_variable_names"], [117, 2, 1, "", "put_info_records"], [117, 2, 1, "", "put_node_num_map"], [117, 2, 1, "", "put_node_set_ids"], [117, 2, 1, "", "put_node_set_info"], [117, 2, 1, "", "put_node_set_names"], [117, 2, 1, "", "put_node_variable_names"], [117, 2, 1, "", "put_qa_records"], [117, 2, 1, "", "put_side_set_ids"], [117, 2, 1, "", "put_side_set_info"], [117, 2, 1, "", "put_side_set_names"], [117, 2, 1, "", "reduce_to_surfaces"], [117, 2, 1, "", "set_elem_attr"], [117, 2, 1, "", "set_elem_connectivity"], [117, 2, 1, "", "set_elem_variable_value"], [117, 2, 1, "", "set_elem_variable_values"], [117, 2, 1, "", "set_global_variable_values"], [117, 2, 1, "", "set_node_variable_value"], [117, 2, 1, "", "set_node_variable_values"], [117, 2, 1, "", "set_time"], [117, 2, 1, "", "set_times"], [117, 3, 1, "", "title"], [117, 2, 1, "", "triangulate_surface_mesh"]], "sdynpy.fem.sdynpy_exodus.ExodusInMemory": [[119, 2, 1, "", "__init__"], [119, 2, 1, "", "from_sdynpy"], [119, 2, 1, "", "get_block_surface"], [119, 2, 1, "", "load_from_exodus"], [119, 2, 1, "", "repack"], [119, 2, 1, "", "triangulate_surface_mesh"], [119, 2, 1, "", "write_to_file"]], "sdynpy.fem.sdynpy_exodus.subfield": [[124, 2, 1, "", "__init__"]], "sdynpy.fem.sdynpy_shaker": [[126, 1, 1, "", "Shaker4DoF"]], "sdynpy.fem.sdynpy_shaker.Shaker4DoF": [[126, 2, 1, "", "MCK"], [126, 2, 1, "", "__init__"], [126, 2, 1, "", "modal_shop_100lbf"], [126, 2, 1, "", "plot_electrical_impedance"], [126, 2, 1, "", "state_space"], [126, 2, 1, "", "transfer_function"]], "sdynpy.fileio": [[128, 0, 0, "-", "sdynpy_rattlesnake"], [135, 0, 0, "-", "sdynpy_tshaker"], [140, 0, 0, "-", "sdynpy_uff"], [147, 0, 0, "-", "sdynpy_uff_datasets"], [180, 0, 0, "-", "sdynpy_vic"]], "sdynpy.fileio.sdynpy_rattlesnake": [[129, 5, 1, "", "create_synthetic_test"], [130, 5, 1, "", "read_modal_data"], [131, 5, 1, "", "read_random_spectral_data"], [132, 5, 1, "", "read_rattlesnake_output"], [133, 5, 1, "", "read_system_id_data"], [134, 5, 1, "", "read_transient_control_data"]], "sdynpy.fileio.sdynpy_tshaker": [[136, 5, 1, "", "read_mat_random"], [137, 5, 1, "", "read_mat_shock"], [138, 5, 1, "", "read_mat_time_history"], [139, 5, 1, "", "read_tdms"]], "sdynpy.fileio.sdynpy_uff": [[141, 6, 1, "", "UFFReadError"], [142, 5, 1, "", "parse_uff_line"], [143, 5, 1, "", "parse_uff_lines"], [144, 5, 1, "", "readuff"], [145, 5, 1, "", "readunv"], [146, 5, 1, "", "write_uff_line"]], "sdynpy.fileio.sdynpy_uff_datasets": [[148, 0, 0, "-", "sdynpy_uff_dataset_151"], [151, 0, 0, "-", "sdynpy_uff_dataset_164"], [154, 0, 0, "-", "sdynpy_uff_dataset_1858"], [158, 0, 0, "-", "sdynpy_uff_dataset_2400"], [161, 0, 0, "-", "sdynpy_uff_dataset_2411"], [164, 0, 0, "-", "sdynpy_uff_dataset_2412"], [167, 0, 0, "-", "sdynpy_uff_dataset_2420"], [170, 0, 0, "-", "sdynpy_uff_dataset_55"], [173, 0, 0, "-", "sdynpy_uff_dataset_58"], [177, 0, 0, "-", "sdynpy_uff_dataset_82"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151": [[149, 1, 1, "", "Sdynpy_UFF_Dataset_151"], [150, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151": [[149, 2, 1, "", "__init__"], [149, 3, 1, "", "dataset_number"], [149, 2, 1, "", "from_uff_data_array"], [149, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164": [[152, 1, 1, "", "Sdynpy_UFF_Dataset_164"], [153, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164": [[152, 2, 1, "", "__init__"], [152, 3, 1, "", "dataset_number"], [152, 2, 1, "", "from_uff_data_array"], [152, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858": [[155, 1, 1, "", "Sdynpy_UFF_Dataset_1858"], [156, 5, 1, "", "is_abscissa_even"], [157, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858": [[155, 2, 1, "", "__init__"], [155, 3, 1, "", "dataset_number"], [155, 2, 1, "", "from_uff_data_array"], [155, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400": [[159, 1, 1, "", "Sdynpy_UFF_Dataset_2400"], [160, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400": [[159, 2, 1, "", "__init__"], [159, 3, 1, "", "dataset_number"], [159, 2, 1, "", "from_uff_data_array"], [159, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411": [[162, 1, 1, "", "Sdynpy_UFF_Dataset_2411"], [163, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411": [[162, 2, 1, "", "__init__"], [162, 3, 1, "", "dataset_number"], [162, 2, 1, "", "from_uff_data_array"], [162, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412": [[165, 1, 1, "", "Sdynpy_UFF_Dataset_2412"], [166, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412": [[165, 2, 1, "", "__init__"], [165, 3, 1, "", "dataset_number"], [165, 2, 1, "", "from_uff_data_array"], [165, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420": [[168, 1, 1, "", "Sdynpy_UFF_Dataset_2420"], [169, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420": [[168, 2, 1, "", "__init__"], [168, 3, 1, "", "dataset_number"], [168, 2, 1, "", "from_uff_data_array"], [168, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55": [[171, 1, 1, "", "Sdynpy_UFF_Dataset_55"], [172, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55": [[171, 2, 1, "", "__init__"], [171, 3, 1, "", "buckling_eigenvalue"], [171, 3, 1, "", "dataset_number"], [171, 3, 1, "", "frequency"], [171, 3, 1, "", "frequency_step_number"], [171, 2, 1, "", "from_uff_data_array"], [171, 3, 1, "", "id_number"], [171, 3, 1, "", "imaginary_eigenvalue"], [171, 3, 1, "", "imaginary_modal_a"], [171, 3, 1, "", "imaginary_modal_b"], [171, 3, 1, "", "load_case_number"], [171, 3, 1, "", "modal_hysteretic_damping"], [171, 3, 1, "", "modal_mass"], [171, 3, 1, "", "modal_viscous_damping"], [171, 3, 1, "", "mode_number"], [171, 3, 1, "", "real_eigenvalue"], [171, 3, 1, "", "real_modal_a"], [171, 3, 1, "", "real_modal_b"], [171, 3, 1, "", "time"], [171, 3, 1, "", "time_step_number"], [171, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58": [[174, 1, 1, "", "Sdynpy_UFF_Dataset_58"], [175, 5, 1, "", "is_abscissa_even"], [176, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58": [[174, 2, 1, "", "__init__"], [174, 3, 1, "", "dataset_number"], [174, 2, 1, "", "from_uff_data_array"], [174, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82": [[178, 1, 1, "", "Sdynpy_UFF_Dataset_82"], [179, 5, 1, "", "read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82": [[178, 2, 1, "", "__init__"], [178, 3, 1, "", "dataset_number"], [178, 2, 1, "", "from_uff_data_array"], [178, 2, 1, "", "write_string"]], "sdynpy.fileio.sdynpy_vic": [[181, 5, 1, "", "camera_matrix_from_vic_parameters"], [182, 5, 1, "", "extract_vic_cal_parameters"], [183, 5, 1, "", "get_vic_camera_parameters"], [184, 5, 1, "", "matrix_from_bryant_angles"], [185, 5, 1, "", "read_vic3D_mat_files"], [186, 5, 1, "", "vic_angles_from_matrix"]], "sdynpy.modal": [[188, 0, 0, "-", "sdynpy_ccmif"], [191, 0, 0, "-", "sdynpy_modeshape"], [196, 0, 0, "-", "sdynpy_polypy"], [200, 0, 0, "-", "sdynpy_signal_processing_gui"], [202, 0, 0, "-", "sdynpy_smac"]], "sdynpy.modal.sdynpy_ccmif": [[189, 1, 1, "", "ColoredCMIF"], [190, 1, 1, "", "PropertiesDialog"]], "sdynpy.modal.sdynpy_ccmif.ColoredCMIF": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "clear_plot"], [189, 2, 1, "", "clicked_point"], [189, 2, 1, "", "cluster_modes"], [189, 2, 1, "", "collect_shapes"], [189, 2, 1, "", "compute_and_plot_ccmif"], [189, 2, 1, "", "compute_ccmif"], [189, 2, 1, "", "connect_callbacks"], [189, 2, 1, "", "disable_file"], [189, 2, 1, "", "enable_file"], [189, 3, 1, "", "enabled_selected_modes"], [189, 3, 1, "", "enabled_shape_array"], [189, 2, 1, "", "export_figure"], [189, 2, 1, "", "export_mode_table"], [189, 2, 1, "", "load_file"], [189, 2, 1, "", "load_geometry"], [189, 2, 1, "", "load_progress"], [189, 2, 1, "", "plot_ccmif"], [189, 2, 1, "", "plot_cmifs"], [189, 2, 1, "", "plot_frfs"], [189, 2, 1, "", "plot_shapes"], [189, 2, 1, "", "remove_file"], [189, 2, 1, "", "replace_file"], [189, 2, 1, "", "resynthesize"], [189, 2, 1, "", "save_progress"], [189, 2, 1, "", "save_shapes"], [189, 2, 1, "", "set_mode_properties"], [189, 2, 1, "", "set_properties"], [189, 2, 1, "", "toggle_auto_resynth"], [189, 2, 1, "", "update_line_width"], [189, 2, 1, "", "update_selection"], [189, 2, 1, "", "update_shape_list"]], "sdynpy.modal.sdynpy_ccmif.PropertiesDialog": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "show"]], "sdynpy.modal.sdynpy_modeshape": [[192, 1, 1, "", "ShapeSelection"], [193, 5, 1, "", "compute_residues"], [194, 5, 1, "", "compute_shapes"], [195, 5, 1, "", "compute_shapes_multireference"]], "sdynpy.modal.sdynpy_modeshape.ShapeSelection": [[192, 4, 1, "", "ALL"], [192, 4, 1, "", "DRIVE_POINT_COEFFICIENT"], [192, 4, 1, "", "PARTICIPATION_FACTOR"], [192, 2, 1, "", "__init__"]], "sdynpy.modal.sdynpy_polypy": [[197, 1, 1, "", "PolyPy"], [198, 1, 1, "", "PolyPy_GUI"], [199, 1, 1, "", "PolyPy_Stability"]], "sdynpy.modal.sdynpy_polypy.PolyPy": [[197, 2, 1, "", "__init__"], [197, 2, 1, "", "analyze_pole_convergence"], [197, 3, 1, "", "angular_frequencies"], [197, 2, 1, "", "compute_poles"], [197, 2, 1, "", "compute_shapes"], [197, 3, 1, "", "frequencies"], [197, 3, 1, "", "frequency_spacing"], [197, 2, 1, "", "plot_stability"], [197, 2, 1, "", "pole_list_from_indices"]], "sdynpy.modal.sdynpy_polypy.PolyPy_GUI": [[198, 2, 1, "", "__init__"], [198, 2, 1, "", "compute_shapes"], [198, 2, 1, "", "compute_stabilization"], [198, 2, 1, "", "connect_callbacks"], [198, 2, 1, "", "create_cmif_window"], [198, 2, 1, "", "create_frf_window"], [198, 2, 1, "", "create_mmif_window"], [198, 2, 1, "", "create_nmif_window"], [198, 2, 1, "", "create_qmif_window"], [198, 2, 1, "", "export_fit_data"], [198, 3, 1, "", "frequencies"], [198, 3, 1, "", "frequency_slice"], [198, 2, 1, "", "load_geometry"], [198, 3, 1, "", "max_frequency"], [198, 3, 1, "", "min_frequency"], [198, 2, 1, "", "plot_shapes"], [198, 2, 1, "", "pole_selection_changed"], [198, 2, 1, "", "save_shapes"], [198, 2, 1, "", "set_geometry"], [198, 2, 1, "", "show_line_selectors"], [198, 2, 1, "", "update_data_plot"], [198, 2, 1, "", "update_frequency_from_region"], [198, 2, 1, "", "update_max_frequency"], [198, 2, 1, "", "update_min_frequency"], [198, 2, 1, "", "update_resynthesis"]], "sdynpy.modal.sdynpy_polypy.PolyPy_Stability": [[199, 2, 1, "", "__init__"], [199, 2, 1, "", "connect_callbacks"], [199, 2, 1, "", "discard"], [199, 2, 1, "", "mouseClicked"], [199, 2, 1, "", "mouseMoved"], [199, 2, 1, "", "plot_poles"], [199, 2, 1, "", "update_stability_plot_views"], [199, 2, 1, "", "update_stabilization_plot"]], "sdynpy.modal.sdynpy_signal_processing_gui": [[201, 1, 1, "", "SignalProcessingGUI"]], "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "acceptanceChanged"], [201, 2, 1, "", "analyzePolyPy"], [201, 2, 1, "", "analyzeSMAC"], [201, 2, 1, "", "block_averaging_signals"], [201, 2, 1, "", "block_data_range_signals"], [201, 2, 1, "", "block_sampling_signals"], [201, 2, 1, "", "compute"], [201, 2, 1, "", "compute_triggers"], [201, 2, 1, "", "connect_callbacks"], [201, 2, 1, "", "create_rois"], [201, 2, 1, "", "endTimeChanged"], [201, 2, 1, "", "frameSizeChanged"], [201, 2, 1, "", "frameTimeChanged"], [201, 2, 1, "", "framesChanged"], [201, 2, 1, "", "frequencyLinesChanged"], [201, 2, 1, "", "frequencySpacingChanged"], [201, 2, 1, "", "get_abscissa_index_range"], [201, 2, 1, "", "hysteresisChanged"], [201, 2, 1, "", "initialize_ui"], [201, 2, 1, "", "levelChanged"], [201, 2, 1, "", "loadData"], [201, 2, 1, "", "loadGeometry"], [201, 2, 1, "", "overlapChanged"], [201, 2, 1, "", "overlapSamplesChanged"], [201, 2, 1, "", "plotDeflection"], [201, 2, 1, "", "plotTransient"], [201, 2, 1, "", "pretriggerChanged"], [201, 2, 1, "", "referenceViewChanged"], [201, 2, 1, "", "referencesChanged"], [201, 2, 1, "", "reset_ui"], [201, 2, 1, "", "responseViewChanged"], [201, 2, 1, "", "responsesChanged"], [201, 2, 1, "", "saveAutospectra"], [201, 2, 1, "", "saveCoherence"], [201, 2, 1, "", "saveCrossspectra"], [201, 2, 1, "", "saveFRF"], [201, 2, 1, "", "saveWindowedTimeHistory"], [201, 2, 1, "", "sendToReference"], [201, 2, 1, "", "sendToResponse"], [201, 2, 1, "", "showAutospectra"], [201, 2, 1, "", "showCoherence"], [201, 2, 1, "", "showCrossspectra"], [201, 2, 1, "", "showFRF"], [201, 2, 1, "", "showWindowedTimeHistory"], [201, 2, 1, "", "startTimeChanged"], [201, 2, 1, "", "toggleROI"], [201, 2, 1, "", "typeChanged"], [201, 2, 1, "", "updateHysteresisFromReference"], [201, 2, 1, "", "updateHysteresisFromResponse"], [201, 2, 1, "", "updateTimeFromReference"], [201, 2, 1, "", "updateTimeFromResponse"], [201, 2, 1, "", "updateTriggerFromReference"], [201, 2, 1, "", "updateTriggerFromResponse"], [201, 2, 1, "", "windowChanged"]], "sdynpy.modal.sdynpy_smac": [[203, 1, 1, "", "AddRootDialog"], [204, 1, 1, "", "AutoFitTypes"], [205, 6, 1, "", "ConvergenceException"], [206, 1, 1, "", "SMAC"], [207, 1, 1, "", "SMAC_GUI"], [208, 5, 1, "", "correlation_coefficient"]], "sdynpy.modal.sdynpy_smac.AddRootDialog": [[203, 2, 1, "", "__init__"], [203, 2, 1, "", "add_root"], [203, 2, 1, "", "connect_callbacks"], [203, 2, 1, "", "recompute_correlation"], [203, 2, 1, "", "switch_log_plot"], [203, 2, 1, "", "update_plot_range"], [203, 2, 1, "", "update_range_selectors"]], "sdynpy.modal.sdynpy_smac.AutoFitTypes": [[204, 4, 1, "", "ALTERNATE"], [204, 4, 1, "", "PARABOLOID"], [204, 2, 1, "", "__init__"]], "sdynpy.modal.sdynpy_smac.SMAC": [[206, 2, 1, "", "__init__"], [206, 3, 1, "", "angular_frequencies"], [206, 2, 1, "", "autofit_root_alternate"], [206, 2, 1, "", "autofit_root_paraboloid"], [206, 2, 1, "", "autofit_roots"], [206, 2, 1, "", "compute_correlation_matrix"], [206, 2, 1, "", "compute_initial_rootlist"], [206, 2, 1, "", "compute_pseudoinverse"], [206, 2, 1, "", "compute_residues"], [206, 2, 1, "", "compute_shapes"], [206, 2, 1, "", "find_peaks"], [206, 2, 1, "", "fit_damping"], [206, 2, 1, "", "fit_frequency"], [206, 2, 1, "", "fit_paraboloid"], [206, 3, 1, "", "frequencies"], [206, 3, 1, "", "frequency_spacing"], [206, 2, 1, "", "frf_sdof_complex"], [206, 2, 1, "", "frf_sdof_real"], [206, 2, 1, "", "get_num_roots"], [206, 3, 1, "", "reference_coordinates"], [206, 2, 1, "", "save"]], "sdynpy.modal.sdynpy_smac.SMAC_GUI": [[207, 2, 1, "", "__init__"], [207, 2, 1, "", "add_initial_root"], [207, 2, 1, "", "add_root"], [207, 2, 1, "", "autofit_roots"], [207, 2, 1, "", "compute_correlation_matrix"], [207, 2, 1, "", "compute_pseudoinverse"], [207, 2, 1, "", "compute_shapes"], [207, 2, 1, "", "confirm_initial_roots_for_autofit"], [207, 2, 1, "", "connect_callbacks"], [207, 2, 1, "", "delete_initial_roots"], [207, 2, 1, "", "delete_roots"], [207, 2, 1, "", "export_mode_table"], [207, 2, 1, "", "load_geometry"], [207, 2, 1, "", "load_shapes"], [207, 2, 1, "", "paint_markers"], [207, 2, 1, "", "plot_mac"], [207, 2, 1, "", "plot_shapes"], [207, 2, 1, "", "refind_peaks"], [207, 2, 1, "", "save_shapes"], [207, 2, 1, "", "update_coefficient_and_refind"], [207, 2, 1, "", "update_crosshairs"], [207, 2, 1, "", "update_frequency_line_label"], [207, 2, 1, "", "update_initial_rootlist_tab"], [207, 2, 1, "", "update_rootlist_table"], [207, 2, 1, "", "update_selector_and_refind"]], "sdynpy.signal_processing": [[210, 0, 0, "-", "sdynpy_camera"], [223, 0, 0, "-", "sdynpy_complex"], [225, 0, 0, "-", "sdynpy_correlation"], [232, 0, 0, "-", "sdynpy_cpsd"], [248, 0, 0, "-", "sdynpy_frf"], [255, 0, 0, "-", "sdynpy_frf_inverse"], [260, 0, 0, "-", "sdynpy_generator"], [268, 0, 0, "-", "sdynpy_geometry_fitting"], [279, 0, 0, "-", "sdynpy_harmonic"], [281, 0, 0, "-", "sdynpy_integration"], [288, 0, 0, "-", "sdynpy_rotation"], [296, 0, 0, "-", "sdynpy_srs"]], "sdynpy.signal_processing.sdynpy_camera": [[211, 5, 1, "", "calibration_linear_estimate"], [212, 5, 1, "", "camera_derivative_matrix"], [213, 5, 1, "", "camera_matrix_from_image"], [214, 5, 1, "", "compute_pixel_displacement"], [215, 5, 1, "", "compute_pixel_position"], [216, 5, 1, "", "decomposeP"], [217, 5, 1, "", "distort_points"], [218, 5, 1, "", "homogeneous_coordinates"], [219, 5, 1, "", "optimize_calibration"], [220, 5, 1, "", "point_on_pixel"], [221, 5, 1, "", "reconstruct_scene_from_calibration_parameters"], [222, 5, 1, "", "unhomogeneous_coordinates"]], "sdynpy.signal_processing.sdynpy_complex": [[224, 5, 1, "", "collapse_complex_to_real"]], "sdynpy.signal_processing.sdynpy_correlation": [[226, 5, 1, "", "frac"], [227, 5, 1, "", "mac"], [228, 5, 1, "", "matrix_plot"], [229, 5, 1, "", "msf"], [230, 5, 1, "", "orthog"], [231, 5, 1, "", "trac"]], "sdynpy.signal_processing.sdynpy_cpsd": [[233, 5, 1, "", "cpsd"], [234, 5, 1, "", "cpsd_autospectra"], [235, 5, 1, "", "cpsd_coherence"], [236, 5, 1, "", "cpsd_from_coh_phs"], [237, 5, 1, "", "cpsd_phase"], [238, 5, 1, "", "cpsd_to_time_history"], [239, 5, 1, "", "dB_pow"], [240, 5, 1, "", "db2scale"], [241, 5, 1, "", "match_coherence_phase"], [242, 5, 1, "", "plot_asds"], [243, 5, 1, "", "plot_cpsd_error"], [244, 5, 1, "", "rms"], [245, 5, 1, "", "rms_csd"], [246, 5, 1, "", "shaped_psd"], [247, 5, 1, "", "trace"]], "sdynpy.signal_processing.sdynpy_frf": [[249, 5, 1, "", "delay_signal"], [250, 5, 1, "", "fft2frf"], [251, 5, 1, "", "modes2frf"], [252, 5, 1, "", "plot"], [253, 5, 1, "", "sysmat2frf"], [254, 5, 1, "", "timedata2frf"]], "sdynpy.signal_processing.sdynpy_frf_inverse": [[256, 5, 1, "", "compute_tikhonov_modified_singular_values"], [257, 5, 1, "", "frf_inverse"], [258, 5, 1, "", "pinv_by_tikhonov"], [259, 5, 1, "", "pinv_by_truncation"]], "sdynpy.signal_processing.sdynpy_generator": [[261, 5, 1, "", "burst_random"], [262, 5, 1, "", "chirp"], [263, 5, 1, "", "pseudorandom"], [264, 5, 1, "", "pulse"], [265, 5, 1, "", "ramp_envelope"], [266, 5, 1, "", "random"], [267, 5, 1, "", "sine"]], "sdynpy.signal_processing.sdynpy_geometry_fitting": [[269, 5, 1, "", "cone_error_fn_fixed_angle"], [270, 5, 1, "", "cone_error_fn_free_angle"], [271, 5, 1, "", "cone_fit"], [272, 5, 1, "", "create_cone"], [273, 5, 1, "", "cylinder_fit"], [274, 5, 1, "", "distance_point_line"], [275, 5, 1, "", "distance_point_plane"], [276, 5, 1, "", "fit_cone_fixed_angle"], [277, 5, 1, "", "fit_cylinder"], [278, 5, 1, "", "fit_line_point_cloud"]], "sdynpy.signal_processing.sdynpy_harmonic": [[280, 5, 1, "", "harmonic_mag_phase"]], "sdynpy.signal_processing.sdynpy_integration": [[282, 5, 1, "", "MCK_incomplete_to_StateSpace"], [283, 5, 1, "", "MCK_to_StateSpace"], [284, 5, 1, "", "frequency_domain_differentiation"], [285, 5, 1, "", "integrate_MCK"], [286, 5, 1, "", "integrate_modes"], [287, 5, 1, "", "modal_parameters_to_MCK"]], "sdynpy.signal_processing.sdynpy_rotation": [[289, 5, 1, "", "R"], [290, 5, 1, "", "cross_mat"], [291, 5, 1, "", "cross_mat_vectorized"], [292, 5, 1, "", "lstsq_rigid_transform"], [293, 5, 1, "", "matrix_to_rodrigues"], [294, 5, 1, "", "quaternion_to_rotation_matrix"], [295, 5, 1, "", "rodrigues_to_matrix"]], "sdynpy.signal_processing.sdynpy_srs": [[297, 5, 1, "", "loginterp"], [298, 5, 1, "", "octspace"], [299, 5, 1, "", "optimization_callback"], [300, 5, 1, "", "optimization_error_function"], [301, 5, 1, "", "sdof_filter"], [302, 5, 1, "", "sdof_free_decay_peak_response"], [303, 5, 1, "", "sdof_ramp_invariant_filter_weights"], [304, 5, 1, "", "srs"], [305, 5, 1, "", "sum_decayed_sines"], [306, 5, 1, "", "sum_decayed_sines_compensating_pulse_parameters"], [307, 5, 1, "", "sum_decayed_sines_displacement_velocity"], [308, 5, 1, "", "sum_decayed_sines_minimize"], [309, 5, 1, "", "sum_decayed_sines_reconstruction"], [310, 5, 1, "", "sum_decayed_sines_reconstruction_with_compensation"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"sdynpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 318, 319, 320, 323, 324, 325, 327, 333, 334, 335], "core": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 335], "sdynpy_arrai": [2, 3], "sdynpyarrai": 3, "sdynpy_color": 4, "sdynpy_coordin": [5, 6, 7, 8, 9, 10, 11, 12], "coordinatearrai": 6, "coordinate_arrai": 7, "create_coordinate_str": 8, "from_matlab_cellstr": 9, "from_nodelist": 10, "outer_product": 11, "parse_coordinate_str": 12, "sdynpy_data": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "abscissaindexextractor": 14, "abscissavalueextractor": 15, "cpsdplot": 16, "coherencearrai": 17, "complextyp": 18, "correlationarrai": 19, "decayedsinet": 20, "functiontyp": 21, "guiplot": 22, "impulseresponsefunctionarrai": 23, "paramt": [23, 35], "mplcanva": 24, "mplmulticanva": 25, "modeindicatorfunctionarrai": 26, "multiplecoherencearrai": 27, "nddataarrai": 28, "powerspectraldensityarrai": 29, "powerspectrumarrai": 30, "shockresponsespectrumarrai": 31, "specificdatatyp": 32, "spectrumarrai": 33, "timehistoryarrai": 34, "transferfunctionarrai": 35, "transmissibilityarrai": 36, "typequ": 37, "data_arrai": 38, "decayed_sine_t": 39, "frf_from_time_data": 40, "from_imat_struct": [41, 59, 77], "from_uff": [42, 60], "from_unv": [43, 61, 78], "join": 44, "load": [45, 65, 312, 316, 318, 335], "sdynpy_geometri": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "coordinatesystemarrai": 47, "deflectionshapeplott": 48, "elementarrai": 49, "geometri": [50, 312, 316, 334], "geometryplott": 51, "nodearrai": 52, "shapeplott": 53, "tracelinearrai": 54, "transientplott": 55, "coordinate_system_arrai": 56, "element_arrai": 57, "from_exodu": [58, 76], "global_coord": 62, "global_deflect": 63, "id_map": 64, "local_coord": 66, "node_arrai": 67, "split_list": 68, "traceline_arrai": 69, "sdynpy_matrix": [70, 71, 72], "matrix": [71, 72, 324, 325], "sdynpy_shap": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "shapearrai": 74, "concatenate_dof": 75, "mac": [79, 227], "overlay_shap": 80, "rigid_body_check": 81, "rigid_body_error": 82, "rigid_body_fix_node_orient": 83, "shape_align": 84, "shape_arrai": 85, "shape_comparison_t": 86, "sdynpy_system": [87, 88, 89], "system": [88, 312, 322, 323, 324, 325, 334], "substructure_by_posit": 89, "demo": [90, 91, 92, 93, 94], "beam_airplan": [91, 92], "create_model": [92, 94], "beam_plat": [93, 94], "doc": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "sdynpy_latex": [96, 97], "create_latex_summari": 97, "sdynpy_ppt": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "add_geometry_overview_slid": 99, "add_section_header_slid": 100, "add_shape_animation_slid": 101, "add_shape_comparison_animation_slid": 102, "add_shape_comparison_overview_slid": 103, "add_shape_overview_slid": 104, "add_title_slid": 105, "create_summary_pptx": 106, "position_placehold": 107, "fem": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "sdynpy_beam": [109, 110, 111, 112], "beamkm": 110, "beamkm_2d": 111, "rect_beam_prop": 112, "sdynpy_dof": [113, 114, 115], "by_condition_numb": 114, "by_effective_independ": 115, "sdynpy_exodu": [116, 117, 118, 119, 120, 121, 122, 123, 124], "exodu": [117, 312, 316], "exoduserror": 118, "exodusinmemori": 119, "extract_sharp_edg": 120, "face_connect": 121, "mesh_triangulation_arrai": 122, "reduce_exodus_to_surfac": 123, "subfield": 124, "sdynpy_shak": [125, 126], "shaker4dof": 126, "fileio": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "sdynpy_rattlesnak": [128, 129, 130, 131, 132, 133, 134], "create_synthetic_test": 129, "read_modal_data": 130, "read_random_spectral_data": 131, "read_rattlesnake_output": 132, "read_system_id_data": 133, "read_transient_control_data": 134, "sdynpy_tshak": [135, 136, 137, 138, 139], "read_mat_random": 136, "read_mat_shock": 137, "read_mat_time_histori": 138, "read_tdm": 139, "sdynpy_uff": [140, 141, 142, 143, 144, 145, 146], "uffreaderror": 141, "parse_uff_lin": [142, 143], "readuff": 144, "readunv": 145, "write_uff_lin": 146, "sdynpy_uff_dataset": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "sdynpy_uff_dataset_151": [148, 149, 150], "read": [150, 153, 157, 160, 163, 166, 169, 172, 176, 179], "sdynpy_uff_dataset_164": [151, 152, 153], "sdynpy_uff_dataset_1858": [154, 155, 156, 157], "is_abscissa_even": [156, 175], "sdynpy_uff_dataset_2400": [158, 159, 160], "sdynpy_uff_dataset_2411": [161, 162, 163], "sdynpy_uff_dataset_2412": [164, 165, 166], "sdynpy_uff_dataset_2420": [167, 168, 169], "sdynpy_uff_dataset_55": [170, 171, 172], "sdynpy_uff_dataset_58": [173, 174, 175, 176], "sdynpy_uff_dataset_82": [177, 178, 179], "sdynpy_v": [180, 181, 182, 183, 184, 185, 186], "camera_matrix_from_vic_paramet": 181, "extract_vic_cal_paramet": 182, "get_vic_camera_paramet": 183, "matrix_from_bryant_angl": 184, "read_vic3d_mat_fil": 185, "vic_angles_from_matrix": 186, "modal": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 312, 316, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335], "sdynpy_ccmif": [188, 189, 190], "coloredcmif": 189, "propertiesdialog": 190, "sdynpy_modeshap": [191, 192, 193, 194, 195], "shapeselect": 192, "compute_residu": 193, "compute_shap": 194, "compute_shapes_multirefer": 195, "sdynpy_polypi": [196, 197, 198, 199], "polypi": [197, 334], "polypy_gui": 198, "polypy_st": 199, "sdynpy_signal_processing_gui": [200, 201], "signalprocessinggui": [201, 327], "sdynpy_smac": [202, 203, 204, 205, 206, 207, 208], "addrootdialog": 203, "autofittyp": 204, "convergenceexcept": 205, "smac": [206, 334], "smac_gui": 207, "correlation_coeffici": 208, "signal_process": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "sdynpy_camera": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "calibration_linear_estim": 211, "camera_derivative_matrix": 212, "camera_matrix_from_imag": 213, "compute_pixel_displac": 214, "compute_pixel_posit": 215, "decomposep": 216, "distort_point": 217, "homogeneous_coordin": 218, "optimize_calibr": 219, "point_on_pixel": 220, "reconstruct_scene_from_calibration_paramet": 221, "unhomogeneous_coordin": 222, "sdynpy_complex": [223, 224], "collapse_complex_to_r": 224, "sdynpy_correl": [225, 226, 227, 228, 229, 230, 231], "frac": 226, "matrix_plot": 228, "msf": 229, "orthog": 230, "trac": 231, "sdynpy_cpsd": [232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "cpsd": 233, "cpsd_autospectra": 234, "cpsd_coher": 235, "cpsd_from_coh_ph": 236, "cpsd_phase": 237, "cpsd_to_time_histori": 238, "db_pow": 239, "db2scale": 240, "match_coherence_phas": 241, "plot_asd": 242, "plot_cpsd_error": 243, "rm": 244, "rms_csd": 245, "shaped_psd": 246, "trace": 247, "sdynpy_frf": [248, 249, 250, 251, 252, 253, 254], "delay_sign": 249, "fft2frf": 250, "modes2frf": 251, "plot": [252, 312, 315, 325, 334], "sysmat2frf": 253, "timedata2frf": 254, "sdynpy_frf_invers": [255, 256, 257, 258, 259], "compute_tikhonov_modified_singular_valu": 256, "frf_invers": 257, "pinv_by_tikhonov": 258, "pinv_by_trunc": 259, "sdynpy_gener": [260, 261, 262, 263, 264, 265, 266, 267], "burst_random": 261, "chirp": [262, 328], "pseudorandom": [263, 317, 328], "puls": 264, "ramp_envelop": 265, "random": [266, 314, 317, 328], "sine": 267, "sdynpy_geometry_fit": [268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "cone_error_fn_fixed_angl": 269, "cone_error_fn_free_angl": 270, "cone_fit": 271, "create_con": 272, "cylinder_fit": 273, "distance_point_lin": 274, "distance_point_plan": 275, "fit_cone_fixed_angl": 276, "fit_cylind": 277, "fit_line_point_cloud": 278, "sdynpy_harmon": [279, 280], "harmonic_mag_phas": 280, "sdynpy_integr": [281, 282, 283, 284, 285, 286, 287], "mck_incomplete_to_statespac": 282, "mck_to_statespac": 283, "frequency_domain_differenti": 284, "integrate_mck": 285, "integrate_mod": 286, "modal_parameters_to_mck": 287, "sdynpy_rot": [288, 289, 290, 291, 292, 293, 294, 295], "r": 289, "cross_mat": 290, "cross_mat_vector": 291, "lstsq_rigid_transform": 292, "matrix_to_rodrigu": 293, "quaternion_to_rotation_matrix": 294, "rodrigues_to_matrix": 295, "sdynpy_sr": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "loginterp": 297, "octspac": 298, "optimization_callback": 299, "optimization_error_funct": 300, "sdof_filt": 301, "sdof_free_decay_peak_respons": 302, "sdof_ramp_invariant_filter_weight": 303, "sr": 304, "sum_decayed_sin": 305, "sum_decayed_sines_compensating_pulse_paramet": 306, "sum_decayed_sines_displacement_veloc": 307, "sum_decayed_sines_minim": 308, "sum_decayed_sines_reconstruct": 309, "sum_decayed_sines_reconstruction_with_compens": 310, "bibliographi": 311, "airplan": 312, "test": [312, 314, 316, 318, 327, 332, 335], "content": [312, 313, 314, 316, 317, 318, 319, 320, 321, 326, 334], "import": [312, 314, 315, 316, 334], "default": 312, "option": 312, "finit": [312, 317, 335], "element": [312, 317, 334, 335], "model": [312, 313, 315, 317, 334, 335], "convert": 312, "object": [312, 335], "creat": [312, 315, 316, 334], "from": [312, 313, 325, 327], "an": [312, 314, 334], "file": 312, "explor": 312, "node": [312, 334], "coordin": [312, 334], "tracelin": [312, 334], "visual": 312, "degre": [312, 315, 318, 323, 324, 325, 329], "freedom": [312, 315, 318, 323, 324, 325, 329], "shape": [312, 325, 334], "correct": 312, "neg": 312, "frequenc": [312, 323, 324, 327, 334], "arrai": [312, 334], "view": [312, 334], "versu": [312, 334], "copi": [312, 334], "transform": 312, "optim": [312, 314, 329], "instrument": [312, 314], "oop": 312, "error": 312, "run": [312, 314], "virtual": 312, "experi": 312, "rigid": 312, "bodi": 312, "checkout": 312, "integr": [312, 334], "set": [312, 313, 315, 317, 318, 323], "up": [312, 313, 315, 317, 318, 323], "forc": 312, "function": [312, 323, 324, 327, 334], "gener": [312, 316, 325, 327, 334], "synthet": 312, "data": [312, 315, 316, 327, 330, 331, 334, 335], "time": [312, 327, 334], "identifi": [312, 324], "bad": 312, "fit": [312, 316, 331, 334], "mode": [312, 315, 316, 322, 325, 331, 334], "us": [312, 313, 314, 318, 327, 334], "polymax": 312, "compar": [312, 332, 334], "serep": 312, "expans": 312, "substructur": [313, 315, 318, 334], "craig": [313, 315], "bampton": [313, 315], "superel": 313, "sierra": 313, "sd": 313, "problem": [313, 317, 318, 323, 324, 325, 327, 328], "analyz": [313, 316, 317], "combin": 313, "compon": [313, 315], "summari": [313, 314, 317, 318, 322, 323, 324, 325, 327], "mimo": 314, "vibrat": [314, 323, 324, 328], "simul": [314, 318, 327], "environ": 314, "select": [314, 315, 329], "shaker": 314, "excit": [314, 317, 323, 324, 325, 327, 328, 329, 334], "locat": [314, 329], "perform": [314, 315, 325, 334], "control": 314, "simpl": [314, 323, 334], "pseudoinvers": 314, "tikhonov": 314, "regular": 314, "weight": 314, "respons": [314, 317, 323, 324, 325, 327, 329, 334], "buzz": 314, "method": [314, 318], "reduct": 315, "3d": 315, "collect": 315, "truth": 315, "guyan": 315, "dynam": 315, "synthesi": 315, "comparison": [315, 317, 323], "result": [315, 317, 318], "rattlesnak": 316, "demonstr": 316, "comput": [316, 323, 324, 325, 327, 329, 334], "frf": [316, 325, 327], "paramet": 316, "document": [316, 320, 335], "export": 316, "analysi": [317, 322, 325, 326, 328, 332, 335], "transient": 317, "techniqu": [317, 327], "transmiss": 318, "reduc": 318, "exampl": 319, "welcom": 320, "": 320, "inform": 320, "indic": [320, 334], "tabl": 320, "tutori": [321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "01": 322, "what": [322, 325], "i": 322, "so": 322, "how": 322, "do": 322, "we": 322, "find": 322, "02": 323, "basic": 323, "A": [323, 324, 325, 327], "undamp": 323, "spring": [323, 324, 325], "mass": [323, 324, 325], "ad": [323, 324, 334], "damp": [323, 324, 325], "singl": [323, 325, 334], "harmon": [323, 324, 325], "between": 323, "displac": 323, "veloc": 323, "acceler": 323, "work": [323, 324], "homework": [323, 324, 325, 327, 328], "1": [323, 324, 325, 327], "2": [323, 324, 325, 327], "3": [323, 324, 325], "investig": 323, "design": 323, "chang": 323, "4": [323, 325], "03": 324, "multipl": [324, 328], "free": 324, "write": 324, "equat": [324, 334], "motion": [324, 334], "drive": 324, "point": 324, "04": 325, "solv": 325, "eigenvalu": 325, "eigenvector": 325, "more": 325, "about": 325, "seri": 325, "rayleigh": 325, "matric": 325, "construct": 325, "characterist": 325, "polynomi": 325, "same": 325, "oper": 325, "5": 325, "quantiti": 325, "05": [326, 327, 328, 329, 330, 331, 332], "experiment": [326, 328, 335], "part": [327, 328, 329, 330, 331, 332], "sinusoid": 327, "broadband": 327, "fft": [327, 328], "power": 327, "spectra": 327, "The": 327, "h1": 327, "h2": 327, "h3": 327, "hcd": 327, "hv": 327, "coher": 327, "histori": 327, "b": 328, "type": 328, "requir": 328, "consider": 328, "input": 328, "burst": 328, "impuls": 328, "c": 329, "theori": 329, "d": 330, "qualiti": 330, "check": 330, "e": 331, "f": 332, "program": 333, "interfac": 333, "showcas": 334, "beam": 334, "assign": 334, "field": 334, "index": 334, "integ": 334, "slice": 334, "logic": 334, "produc": 334, "signal": [334, 335], "code": 334, "base": 334, "graphic": 334, "deflect": 334, "synthes": 334, "correl": 334, "anoth": 334, "appli": 334, "constraint": 334, "usag": 335, "instal": 335, "overview": 335, "process": 335}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"sdynpy": [[0, "module-sdynpy"]], "sdynpy.core": [[1, "module-sdynpy.core"]], "sdynpy.core.sdynpy_array": [[2, "module-sdynpy.core.sdynpy_array"]], "sdynpy.core.sdynpy_array.SdynpyArray": [[3, "sdynpy-core-sdynpy-array-sdynpyarray"]], "sdynpy.core.sdynpy_colors": [[4, "module-sdynpy.core.sdynpy_colors"]], "sdynpy.core.sdynpy_coordinate": [[5, "module-sdynpy.core.sdynpy_coordinate"]], "sdynpy.core.sdynpy_coordinate.CoordinateArray": [[6, "sdynpy-core-sdynpy-coordinate-coordinatearray"]], "sdynpy.core.sdynpy_coordinate.coordinate_array": [[7, "sdynpy-core-sdynpy-coordinate-coordinate-array"]], "sdynpy.core.sdynpy_coordinate.create_coordinate_string": [[8, "sdynpy-core-sdynpy-coordinate-create-coordinate-string"]], "sdynpy.core.sdynpy_coordinate.from_matlab_cellstr": [[9, "sdynpy-core-sdynpy-coordinate-from-matlab-cellstr"]], "sdynpy.core.sdynpy_coordinate.from_nodelist": [[10, "sdynpy-core-sdynpy-coordinate-from-nodelist"]], "sdynpy.core.sdynpy_coordinate.outer_product": [[11, "sdynpy-core-sdynpy-coordinate-outer-product"]], "sdynpy.core.sdynpy_coordinate.parse_coordinate_string": [[12, "sdynpy-core-sdynpy-coordinate-parse-coordinate-string"]], "sdynpy.core.sdynpy_data": [[13, "module-sdynpy.core.sdynpy_data"]], "sdynpy.core.sdynpy_data.AbscissaIndexExtractor": [[14, "sdynpy-core-sdynpy-data-abscissaindexextractor"]], "sdynpy.core.sdynpy_data.AbscissaValueExtractor": [[15, "sdynpy-core-sdynpy-data-abscissavalueextractor"]], "sdynpy.core.sdynpy_data.CPSDPlot": [[16, "sdynpy-core-sdynpy-data-cpsdplot"]], "sdynpy.core.sdynpy_data.CoherenceArray": [[17, "sdynpy-core-sdynpy-data-coherencearray"]], "sdynpy.core.sdynpy_data.ComplexType": [[18, "sdynpy-core-sdynpy-data-complextype"]], "sdynpy.core.sdynpy_data.CorrelationArray": [[19, "sdynpy-core-sdynpy-data-correlationarray"]], "sdynpy.core.sdynpy_data.DecayedSineTable": [[20, "sdynpy-core-sdynpy-data-decayedsinetable"]], "sdynpy.core.sdynpy_data.FunctionTypes": [[21, "sdynpy-core-sdynpy-data-functiontypes"]], "sdynpy.core.sdynpy_data.GUIPlot": [[22, "sdynpy-core-sdynpy-data-guiplot"]], "sdynpy.core.sdynpy_data.ImpulseResponseFunctionArray": [[23, "sdynpy-core-sdynpy-data-impulseresponsefunctionarray"]], "Paramters": [[23, "paramters"], [35, "paramters"]], "sdynpy.core.sdynpy_data.MPLCanvas": [[24, "sdynpy-core-sdynpy-data-mplcanvas"]], "sdynpy.core.sdynpy_data.MPLMultiCanvas": [[25, "sdynpy-core-sdynpy-data-mplmulticanvas"]], "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray": [[26, "sdynpy-core-sdynpy-data-modeindicatorfunctionarray"]], "sdynpy.core.sdynpy_data.MultipleCoherenceArray": [[27, "sdynpy-core-sdynpy-data-multiplecoherencearray"]], "sdynpy.core.sdynpy_data.NDDataArray": [[28, "sdynpy-core-sdynpy-data-nddataarray"]], "sdynpy.core.sdynpy_data.PowerSpectralDensityArray": [[29, "sdynpy-core-sdynpy-data-powerspectraldensityarray"]], "sdynpy.core.sdynpy_data.PowerSpectrumArray": [[30, "sdynpy-core-sdynpy-data-powerspectrumarray"]], "sdynpy.core.sdynpy_data.ShockResponseSpectrumArray": [[31, "sdynpy-core-sdynpy-data-shockresponsespectrumarray"]], "sdynpy.core.sdynpy_data.SpecificDataType": [[32, "sdynpy-core-sdynpy-data-specificdatatype"]], "sdynpy.core.sdynpy_data.SpectrumArray": [[33, "sdynpy-core-sdynpy-data-spectrumarray"]], "sdynpy.core.sdynpy_data.TimeHistoryArray": [[34, "sdynpy-core-sdynpy-data-timehistoryarray"]], "sdynpy.core.sdynpy_data.TransferFunctionArray": [[35, "sdynpy-core-sdynpy-data-transferfunctionarray"]], "sdynpy.core.sdynpy_data.TransmissibilityArray": [[36, "sdynpy-core-sdynpy-data-transmissibilityarray"]], "sdynpy.core.sdynpy_data.TypeQual": [[37, "sdynpy-core-sdynpy-data-typequal"]], "sdynpy.core.sdynpy_data.data_array": [[38, "sdynpy-core-sdynpy-data-data-array"]], "sdynpy.core.sdynpy_data.decayed_sine_table": [[39, "sdynpy-core-sdynpy-data-decayed-sine-table"]], "sdynpy.core.sdynpy_data.frf_from_time_data": [[40, "sdynpy-core-sdynpy-data-frf-from-time-data"]], "sdynpy.core.sdynpy_data.from_imat_struct": [[41, "sdynpy-core-sdynpy-data-from-imat-struct"]], "sdynpy.core.sdynpy_data.from_uff": [[42, "sdynpy-core-sdynpy-data-from-uff"]], "sdynpy.core.sdynpy_data.from_unv": [[43, "sdynpy-core-sdynpy-data-from-unv"]], "sdynpy.core.sdynpy_data.join": [[44, "sdynpy-core-sdynpy-data-join"]], "sdynpy.core.sdynpy_data.load": [[45, "sdynpy-core-sdynpy-data-load"]], "sdynpy.core.sdynpy_geometry": [[46, "module-sdynpy.core.sdynpy_geometry"]], "sdynpy.core.sdynpy_geometry.CoordinateSystemArray": [[47, "sdynpy-core-sdynpy-geometry-coordinatesystemarray"]], "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter": [[48, "sdynpy-core-sdynpy-geometry-deflectionshapeplotter"]], "sdynpy.core.sdynpy_geometry.ElementArray": [[49, "sdynpy-core-sdynpy-geometry-elementarray"]], "sdynpy.core.sdynpy_geometry.Geometry": [[50, "sdynpy-core-sdynpy-geometry-geometry"]], "sdynpy.core.sdynpy_geometry.GeometryPlotter": [[51, "sdynpy-core-sdynpy-geometry-geometryplotter"]], "sdynpy.core.sdynpy_geometry.NodeArray": [[52, "sdynpy-core-sdynpy-geometry-nodearray"]], "sdynpy.core.sdynpy_geometry.ShapePlotter": [[53, "sdynpy-core-sdynpy-geometry-shapeplotter"]], "sdynpy.core.sdynpy_geometry.TracelineArray": [[54, "sdynpy-core-sdynpy-geometry-tracelinearray"]], "sdynpy.core.sdynpy_geometry.TransientPlotter": [[55, "sdynpy-core-sdynpy-geometry-transientplotter"]], "sdynpy.core.sdynpy_geometry.coordinate_system_array": [[56, "sdynpy-core-sdynpy-geometry-coordinate-system-array"]], "sdynpy.core.sdynpy_geometry.element_array": [[57, "sdynpy-core-sdynpy-geometry-element-array"]], "sdynpy.core.sdynpy_geometry.from_exodus": [[58, "sdynpy-core-sdynpy-geometry-from-exodus"]], "sdynpy.core.sdynpy_geometry.from_imat_struct": [[59, "sdynpy-core-sdynpy-geometry-from-imat-struct"]], "sdynpy.core.sdynpy_geometry.from_uff": [[60, "sdynpy-core-sdynpy-geometry-from-uff"]], "sdynpy.core.sdynpy_geometry.from_unv": [[61, "sdynpy-core-sdynpy-geometry-from-unv"]], "sdynpy.core.sdynpy_geometry.global_coord": [[62, "sdynpy-core-sdynpy-geometry-global-coord"]], "sdynpy.core.sdynpy_geometry.global_deflection": [[63, "sdynpy-core-sdynpy-geometry-global-deflection"]], "sdynpy.core.sdynpy_geometry.id_map": [[64, "sdynpy-core-sdynpy-geometry-id-map"]], "sdynpy.core.sdynpy_geometry.load": [[65, "sdynpy-core-sdynpy-geometry-load"]], "sdynpy.core.sdynpy_geometry.local_coord": [[66, "sdynpy-core-sdynpy-geometry-local-coord"]], "sdynpy.core.sdynpy_geometry.node_array": [[67, "sdynpy-core-sdynpy-geometry-node-array"]], "sdynpy.core.sdynpy_geometry.split_list": [[68, "sdynpy-core-sdynpy-geometry-split-list"]], "sdynpy.core.sdynpy_geometry.traceline_array": [[69, "sdynpy-core-sdynpy-geometry-traceline-array"]], "sdynpy.core.sdynpy_matrix": [[70, "module-sdynpy.core.sdynpy_matrix"]], "sdynpy.core.sdynpy_matrix.Matrix": [[71, "sdynpy-core-sdynpy-matrix-matrix"]], "sdynpy.core.sdynpy_matrix.matrix": [[72, "sdynpy-core-sdynpy-matrix-matrix"]], "sdynpy.core.sdynpy_shape": [[73, "module-sdynpy.core.sdynpy_shape"]], "sdynpy.core.sdynpy_shape.ShapeArray": [[74, "sdynpy-core-sdynpy-shape-shapearray"]], "sdynpy.core.sdynpy_shape.concatenate_dofs": [[75, "sdynpy-core-sdynpy-shape-concatenate-dofs"]], "sdynpy.core.sdynpy_shape.from_exodus": [[76, "sdynpy-core-sdynpy-shape-from-exodus"]], "sdynpy.core.sdynpy_shape.from_imat_struct": [[77, "sdynpy-core-sdynpy-shape-from-imat-struct"]], "sdynpy.core.sdynpy_shape.from_unv": [[78, "sdynpy-core-sdynpy-shape-from-unv"]], "sdynpy.core.sdynpy_shape.mac": [[79, "sdynpy-core-sdynpy-shape-mac"]], "sdynpy.core.sdynpy_shape.overlay_shapes": [[80, "sdynpy-core-sdynpy-shape-overlay-shapes"]], "sdynpy.core.sdynpy_shape.rigid_body_check": [[81, "sdynpy-core-sdynpy-shape-rigid-body-check"]], "sdynpy.core.sdynpy_shape.rigid_body_error": [[82, "sdynpy-core-sdynpy-shape-rigid-body-error"]], "sdynpy.core.sdynpy_shape.rigid_body_fix_node_orientation": [[83, "sdynpy-core-sdynpy-shape-rigid-body-fix-node-orientation"]], "sdynpy.core.sdynpy_shape.shape_alignment": [[84, "sdynpy-core-sdynpy-shape-shape-alignment"]], "sdynpy.core.sdynpy_shape.shape_array": [[85, "sdynpy-core-sdynpy-shape-shape-array"]], "sdynpy.core.sdynpy_shape.shape_comparison_table": [[86, "sdynpy-core-sdynpy-shape-shape-comparison-table"]], "sdynpy.core.sdynpy_system": [[87, "module-sdynpy.core.sdynpy_system"]], "sdynpy.core.sdynpy_system.System": [[88, "sdynpy-core-sdynpy-system-system"]], "sdynpy.core.sdynpy_system.substructure_by_position": [[89, "sdynpy-core-sdynpy-system-substructure-by-position"]], "sdynpy.demo": [[90, "module-sdynpy.demo"]], "sdynpy.demo.beam_airplane": [[91, "module-sdynpy.demo.beam_airplane"]], "sdynpy.demo.beam_airplane.create_models": [[92, "sdynpy-demo-beam-airplane-create-models"]], "sdynpy.demo.beam_plate": [[93, "module-sdynpy.demo.beam_plate"]], "sdynpy.demo.beam_plate.create_models": [[94, "sdynpy-demo-beam-plate-create-models"]], "sdynpy.doc": [[95, "module-sdynpy.doc"]], "sdynpy.doc.sdynpy_latex": [[96, "module-sdynpy.doc.sdynpy_latex"]], "sdynpy.doc.sdynpy_latex.create_latex_summary": [[97, "sdynpy-doc-sdynpy-latex-create-latex-summary"]], "sdynpy.doc.sdynpy_ppt": [[98, "module-sdynpy.doc.sdynpy_ppt"]], "sdynpy.doc.sdynpy_ppt.add_geometry_overview_slide": [[99, "sdynpy-doc-sdynpy-ppt-add-geometry-overview-slide"]], "sdynpy.doc.sdynpy_ppt.add_section_header_slide": [[100, "sdynpy-doc-sdynpy-ppt-add-section-header-slide"]], "sdynpy.doc.sdynpy_ppt.add_shape_animation_slides": [[101, "sdynpy-doc-sdynpy-ppt-add-shape-animation-slides"]], "sdynpy.doc.sdynpy_ppt.add_shape_comparison_animation_slides": [[102, "sdynpy-doc-sdynpy-ppt-add-shape-comparison-animation-slides"]], "sdynpy.doc.sdynpy_ppt.add_shape_comparison_overview_slide": [[103, "sdynpy-doc-sdynpy-ppt-add-shape-comparison-overview-slide"]], "sdynpy.doc.sdynpy_ppt.add_shape_overview_slide": [[104, "sdynpy-doc-sdynpy-ppt-add-shape-overview-slide"]], "sdynpy.doc.sdynpy_ppt.add_title_slide": [[105, "sdynpy-doc-sdynpy-ppt-add-title-slide"]], "sdynpy.doc.sdynpy_ppt.create_summary_pptx": [[106, "sdynpy-doc-sdynpy-ppt-create-summary-pptx"]], "sdynpy.doc.sdynpy_ppt.position_placeholder": [[107, "sdynpy-doc-sdynpy-ppt-position-placeholder"]], "sdynpy.fem": [[108, "module-sdynpy.fem"]], "sdynpy.fem.sdynpy_beam": [[109, "module-sdynpy.fem.sdynpy_beam"]], "sdynpy.fem.sdynpy_beam.beamkm": [[110, "sdynpy-fem-sdynpy-beam-beamkm"]], "sdynpy.fem.sdynpy_beam.beamkm_2d": [[111, "sdynpy-fem-sdynpy-beam-beamkm-2d"]], "sdynpy.fem.sdynpy_beam.rect_beam_props": [[112, "sdynpy-fem-sdynpy-beam-rect-beam-props"]], "sdynpy.fem.sdynpy_dof": [[113, "module-sdynpy.fem.sdynpy_dof"]], "sdynpy.fem.sdynpy_dof.by_condition_number": [[114, "sdynpy-fem-sdynpy-dof-by-condition-number"]], "sdynpy.fem.sdynpy_dof.by_effective_independence": [[115, "sdynpy-fem-sdynpy-dof-by-effective-independence"]], "sdynpy.fem.sdynpy_exodus": [[116, "module-sdynpy.fem.sdynpy_exodus"]], "sdynpy.fem.sdynpy_exodus.Exodus": [[117, "sdynpy-fem-sdynpy-exodus-exodus"]], "sdynpy.fem.sdynpy_exodus.ExodusError": [[118, "sdynpy-fem-sdynpy-exodus-exoduserror"]], "sdynpy.fem.sdynpy_exodus.ExodusInMemory": [[119, "sdynpy-fem-sdynpy-exodus-exodusinmemory"]], "sdynpy.fem.sdynpy_exodus.extract_sharp_edges": [[120, "sdynpy-fem-sdynpy-exodus-extract-sharp-edges"]], "sdynpy.fem.sdynpy_exodus.face_connectivity": [[121, "sdynpy-fem-sdynpy-exodus-face-connectivity"]], "sdynpy.fem.sdynpy_exodus.mesh_triangulation_array": [[122, "sdynpy-fem-sdynpy-exodus-mesh-triangulation-array"]], "sdynpy.fem.sdynpy_exodus.reduce_exodus_to_surfaces": [[123, "sdynpy-fem-sdynpy-exodus-reduce-exodus-to-surfaces"]], "sdynpy.fem.sdynpy_exodus.subfield": [[124, "sdynpy-fem-sdynpy-exodus-subfield"]], "sdynpy.fem.sdynpy_shaker": [[125, "module-sdynpy.fem.sdynpy_shaker"]], "sdynpy.fem.sdynpy_shaker.Shaker4DoF": [[126, "sdynpy-fem-sdynpy-shaker-shaker4dof"]], "sdynpy.fileio": [[127, "module-sdynpy.fileio"]], "sdynpy.fileio.sdynpy_rattlesnake": [[128, "module-sdynpy.fileio.sdynpy_rattlesnake"]], "sdynpy.fileio.sdynpy_rattlesnake.create_synthetic_test": [[129, "sdynpy-fileio-sdynpy-rattlesnake-create-synthetic-test"]], "sdynpy.fileio.sdynpy_rattlesnake.read_modal_data": [[130, "sdynpy-fileio-sdynpy-rattlesnake-read-modal-data"]], "sdynpy.fileio.sdynpy_rattlesnake.read_random_spectral_data": [[131, "sdynpy-fileio-sdynpy-rattlesnake-read-random-spectral-data"]], "sdynpy.fileio.sdynpy_rattlesnake.read_rattlesnake_output": [[132, "sdynpy-fileio-sdynpy-rattlesnake-read-rattlesnake-output"]], "sdynpy.fileio.sdynpy_rattlesnake.read_system_id_data": [[133, "sdynpy-fileio-sdynpy-rattlesnake-read-system-id-data"]], "sdynpy.fileio.sdynpy_rattlesnake.read_transient_control_data": [[134, "sdynpy-fileio-sdynpy-rattlesnake-read-transient-control-data"]], "sdynpy.fileio.sdynpy_tshaker": [[135, "module-sdynpy.fileio.sdynpy_tshaker"]], "sdynpy.fileio.sdynpy_tshaker.read_mat_random": [[136, "sdynpy-fileio-sdynpy-tshaker-read-mat-random"]], "sdynpy.fileio.sdynpy_tshaker.read_mat_shock": [[137, "sdynpy-fileio-sdynpy-tshaker-read-mat-shock"]], "sdynpy.fileio.sdynpy_tshaker.read_mat_time_history": [[138, "sdynpy-fileio-sdynpy-tshaker-read-mat-time-history"]], "sdynpy.fileio.sdynpy_tshaker.read_tdms": [[139, "sdynpy-fileio-sdynpy-tshaker-read-tdms"]], "sdynpy.fileio.sdynpy_uff": [[140, "module-sdynpy.fileio.sdynpy_uff"]], "sdynpy.fileio.sdynpy_uff.UFFReadError": [[141, "sdynpy-fileio-sdynpy-uff-uffreaderror"]], "sdynpy.fileio.sdynpy_uff.parse_uff_line": [[142, "sdynpy-fileio-sdynpy-uff-parse-uff-line"]], "sdynpy.fileio.sdynpy_uff.parse_uff_lines": [[143, "sdynpy-fileio-sdynpy-uff-parse-uff-lines"]], "sdynpy.fileio.sdynpy_uff.readuff": [[144, "sdynpy-fileio-sdynpy-uff-readuff"]], "sdynpy.fileio.sdynpy_uff.readunv": [[145, "sdynpy-fileio-sdynpy-uff-readunv"]], "sdynpy.fileio.sdynpy_uff.write_uff_line": [[146, "sdynpy-fileio-sdynpy-uff-write-uff-line"]], "sdynpy.fileio.sdynpy_uff_datasets": [[147, "module-sdynpy.fileio.sdynpy_uff_datasets"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151": [[148, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151": [[149, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-151-sdynpy-uff-dataset-151"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.read": [[150, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-151-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164": [[151, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164": [[152, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-164-sdynpy-uff-dataset-164"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.read": [[153, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-164-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858": [[154, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858": [[155, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-1858-sdynpy-uff-dataset-1858"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.is_abscissa_even": [[156, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-1858-is-abscissa-even"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.read": [[157, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-1858-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400": [[158, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400": [[159, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2400-sdynpy-uff-dataset-2400"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.read": [[160, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2400-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411": [[161, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411": [[162, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2411-sdynpy-uff-dataset-2411"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.read": [[163, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2411-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412": [[164, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412": [[165, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2412-sdynpy-uff-dataset-2412"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.read": [[166, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2412-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420": [[167, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420": [[168, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2420-sdynpy-uff-dataset-2420"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.read": [[169, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-2420-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55": [[170, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55": [[171, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-55-sdynpy-uff-dataset-55"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.read": [[172, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-55-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58": [[173, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58": [[174, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-58-sdynpy-uff-dataset-58"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.is_abscissa_even": [[175, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-58-is-abscissa-even"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.read": [[176, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-58-read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82": [[177, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82": [[178, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-82-sdynpy-uff-dataset-82"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.read": [[179, "sdynpy-fileio-sdynpy-uff-datasets-sdynpy-uff-dataset-82-read"]], "sdynpy.fileio.sdynpy_vic": [[180, "module-sdynpy.fileio.sdynpy_vic"]], "sdynpy.fileio.sdynpy_vic.camera_matrix_from_vic_parameters": [[181, "sdynpy-fileio-sdynpy-vic-camera-matrix-from-vic-parameters"]], "sdynpy.fileio.sdynpy_vic.extract_vic_cal_parameters": [[182, "sdynpy-fileio-sdynpy-vic-extract-vic-cal-parameters"]], "sdynpy.fileio.sdynpy_vic.get_vic_camera_parameters": [[183, "sdynpy-fileio-sdynpy-vic-get-vic-camera-parameters"]], "sdynpy.fileio.sdynpy_vic.matrix_from_bryant_angles": [[184, "sdynpy-fileio-sdynpy-vic-matrix-from-bryant-angles"]], "sdynpy.fileio.sdynpy_vic.read_vic3D_mat_files": [[185, "sdynpy-fileio-sdynpy-vic-read-vic3d-mat-files"]], "sdynpy.fileio.sdynpy_vic.vic_angles_from_matrix": [[186, "sdynpy-fileio-sdynpy-vic-vic-angles-from-matrix"]], "sdynpy.modal": [[187, "module-sdynpy.modal"]], "sdynpy.modal.sdynpy_ccmif": [[188, "module-sdynpy.modal.sdynpy_ccmif"]], "sdynpy.modal.sdynpy_ccmif.ColoredCMIF": [[189, "sdynpy-modal-sdynpy-ccmif-coloredcmif"]], "sdynpy.modal.sdynpy_ccmif.PropertiesDialog": [[190, "sdynpy-modal-sdynpy-ccmif-propertiesdialog"]], "sdynpy.modal.sdynpy_modeshape": [[191, "module-sdynpy.modal.sdynpy_modeshape"]], "sdynpy.modal.sdynpy_modeshape.ShapeSelection": [[192, "sdynpy-modal-sdynpy-modeshape-shapeselection"]], "sdynpy.modal.sdynpy_modeshape.compute_residues": [[193, "sdynpy-modal-sdynpy-modeshape-compute-residues"]], "sdynpy.modal.sdynpy_modeshape.compute_shapes": [[194, "sdynpy-modal-sdynpy-modeshape-compute-shapes"]], "sdynpy.modal.sdynpy_modeshape.compute_shapes_multireference": [[195, "sdynpy-modal-sdynpy-modeshape-compute-shapes-multireference"]], "sdynpy.modal.sdynpy_polypy": [[196, "module-sdynpy.modal.sdynpy_polypy"]], "sdynpy.modal.sdynpy_polypy.PolyPy": [[197, "sdynpy-modal-sdynpy-polypy-polypy"]], "sdynpy.modal.sdynpy_polypy.PolyPy_GUI": [[198, "sdynpy-modal-sdynpy-polypy-polypy-gui"]], "sdynpy.modal.sdynpy_polypy.PolyPy_Stability": [[199, "sdynpy-modal-sdynpy-polypy-polypy-stability"]], "sdynpy.modal.sdynpy_signal_processing_gui": [[200, "module-sdynpy.modal.sdynpy_signal_processing_gui"]], "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI": [[201, "sdynpy-modal-sdynpy-signal-processing-gui-signalprocessinggui"]], "sdynpy.modal.sdynpy_smac": [[202, "module-sdynpy.modal.sdynpy_smac"]], "sdynpy.modal.sdynpy_smac.AddRootDialog": [[203, "sdynpy-modal-sdynpy-smac-addrootdialog"]], "sdynpy.modal.sdynpy_smac.AutoFitTypes": [[204, "sdynpy-modal-sdynpy-smac-autofittypes"]], "sdynpy.modal.sdynpy_smac.ConvergenceException": [[205, "sdynpy-modal-sdynpy-smac-convergenceexception"]], "sdynpy.modal.sdynpy_smac.SMAC": [[206, "sdynpy-modal-sdynpy-smac-smac"]], "sdynpy.modal.sdynpy_smac.SMAC_GUI": [[207, "sdynpy-modal-sdynpy-smac-smac-gui"]], "sdynpy.modal.sdynpy_smac.correlation_coefficient": [[208, "sdynpy-modal-sdynpy-smac-correlation-coefficient"]], "sdynpy.signal_processing": [[209, "module-sdynpy.signal_processing"]], "sdynpy.signal_processing.sdynpy_camera": [[210, "module-sdynpy.signal_processing.sdynpy_camera"]], "sdynpy.signal_processing.sdynpy_camera.calibration_linear_estimate": [[211, "sdynpy-signal-processing-sdynpy-camera-calibration-linear-estimate"]], "sdynpy.signal_processing.sdynpy_camera.camera_derivative_matrix": [[212, "sdynpy-signal-processing-sdynpy-camera-camera-derivative-matrix"]], "sdynpy.signal_processing.sdynpy_camera.camera_matrix_from_image": [[213, "sdynpy-signal-processing-sdynpy-camera-camera-matrix-from-image"]], "sdynpy.signal_processing.sdynpy_camera.compute_pixel_displacement": [[214, "sdynpy-signal-processing-sdynpy-camera-compute-pixel-displacement"]], "sdynpy.signal_processing.sdynpy_camera.compute_pixel_position": [[215, "sdynpy-signal-processing-sdynpy-camera-compute-pixel-position"]], "sdynpy.signal_processing.sdynpy_camera.decomposeP": [[216, "sdynpy-signal-processing-sdynpy-camera-decomposep"]], "sdynpy.signal_processing.sdynpy_camera.distort_points": [[217, "sdynpy-signal-processing-sdynpy-camera-distort-points"]], "sdynpy.signal_processing.sdynpy_camera.homogeneous_coordinates": [[218, "sdynpy-signal-processing-sdynpy-camera-homogeneous-coordinates"]], "sdynpy.signal_processing.sdynpy_camera.optimize_calibration": [[219, "sdynpy-signal-processing-sdynpy-camera-optimize-calibration"]], "sdynpy.signal_processing.sdynpy_camera.point_on_pixel": [[220, "sdynpy-signal-processing-sdynpy-camera-point-on-pixel"]], "sdynpy.signal_processing.sdynpy_camera.reconstruct_scene_from_calibration_parameters": [[221, "sdynpy-signal-processing-sdynpy-camera-reconstruct-scene-from-calibration-parameters"]], "sdynpy.signal_processing.sdynpy_camera.unhomogeneous_coordinates": [[222, "sdynpy-signal-processing-sdynpy-camera-unhomogeneous-coordinates"]], "sdynpy.signal_processing.sdynpy_complex": [[223, "module-sdynpy.signal_processing.sdynpy_complex"]], "sdynpy.signal_processing.sdynpy_complex.collapse_complex_to_real": [[224, "sdynpy-signal-processing-sdynpy-complex-collapse-complex-to-real"]], "sdynpy.signal_processing.sdynpy_correlation": [[225, "module-sdynpy.signal_processing.sdynpy_correlation"]], "sdynpy.signal_processing.sdynpy_correlation.frac": [[226, "sdynpy-signal-processing-sdynpy-correlation-frac"]], "sdynpy.signal_processing.sdynpy_correlation.mac": [[227, "sdynpy-signal-processing-sdynpy-correlation-mac"]], "sdynpy.signal_processing.sdynpy_correlation.matrix_plot": [[228, "sdynpy-signal-processing-sdynpy-correlation-matrix-plot"]], "sdynpy.signal_processing.sdynpy_correlation.msf": [[229, "sdynpy-signal-processing-sdynpy-correlation-msf"]], "sdynpy.signal_processing.sdynpy_correlation.orthog": [[230, "sdynpy-signal-processing-sdynpy-correlation-orthog"]], "sdynpy.signal_processing.sdynpy_correlation.trac": [[231, "sdynpy-signal-processing-sdynpy-correlation-trac"]], "sdynpy.signal_processing.sdynpy_cpsd": [[232, "module-sdynpy.signal_processing.sdynpy_cpsd"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd": [[233, "sdynpy-signal-processing-sdynpy-cpsd-cpsd"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd_autospectra": [[234, "sdynpy-signal-processing-sdynpy-cpsd-cpsd-autospectra"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd_coherence": [[235, "sdynpy-signal-processing-sdynpy-cpsd-cpsd-coherence"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd_from_coh_phs": [[236, "sdynpy-signal-processing-sdynpy-cpsd-cpsd-from-coh-phs"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd_phase": [[237, "sdynpy-signal-processing-sdynpy-cpsd-cpsd-phase"]], "sdynpy.signal_processing.sdynpy_cpsd.cpsd_to_time_history": [[238, "sdynpy-signal-processing-sdynpy-cpsd-cpsd-to-time-history"]], "sdynpy.signal_processing.sdynpy_cpsd.dB_pow": [[239, "sdynpy-signal-processing-sdynpy-cpsd-db-pow"]], "sdynpy.signal_processing.sdynpy_cpsd.db2scale": [[240, "sdynpy-signal-processing-sdynpy-cpsd-db2scale"]], "sdynpy.signal_processing.sdynpy_cpsd.match_coherence_phase": [[241, "sdynpy-signal-processing-sdynpy-cpsd-match-coherence-phase"]], "sdynpy.signal_processing.sdynpy_cpsd.plot_asds": [[242, "sdynpy-signal-processing-sdynpy-cpsd-plot-asds"]], "sdynpy.signal_processing.sdynpy_cpsd.plot_cpsd_error": [[243, "sdynpy-signal-processing-sdynpy-cpsd-plot-cpsd-error"]], "sdynpy.signal_processing.sdynpy_cpsd.rms": [[244, "sdynpy-signal-processing-sdynpy-cpsd-rms"]], "sdynpy.signal_processing.sdynpy_cpsd.rms_csd": [[245, "sdynpy-signal-processing-sdynpy-cpsd-rms-csd"]], "sdynpy.signal_processing.sdynpy_cpsd.shaped_psd": [[246, "sdynpy-signal-processing-sdynpy-cpsd-shaped-psd"]], "sdynpy.signal_processing.sdynpy_cpsd.trace": [[247, "sdynpy-signal-processing-sdynpy-cpsd-trace"]], "sdynpy.signal_processing.sdynpy_frf": [[248, "module-sdynpy.signal_processing.sdynpy_frf"]], "sdynpy.signal_processing.sdynpy_frf.delay_signal": [[249, "sdynpy-signal-processing-sdynpy-frf-delay-signal"]], "sdynpy.signal_processing.sdynpy_frf.fft2frf": [[250, "sdynpy-signal-processing-sdynpy-frf-fft2frf"]], "sdynpy.signal_processing.sdynpy_frf.modes2frf": [[251, "sdynpy-signal-processing-sdynpy-frf-modes2frf"]], "sdynpy.signal_processing.sdynpy_frf.plot": [[252, "sdynpy-signal-processing-sdynpy-frf-plot"]], "sdynpy.signal_processing.sdynpy_frf.sysmat2frf": [[253, "sdynpy-signal-processing-sdynpy-frf-sysmat2frf"]], "sdynpy.signal_processing.sdynpy_frf.timedata2frf": [[254, "sdynpy-signal-processing-sdynpy-frf-timedata2frf"]], "sdynpy.signal_processing.sdynpy_frf_inverse": [[255, "module-sdynpy.signal_processing.sdynpy_frf_inverse"]], "sdynpy.signal_processing.sdynpy_frf_inverse.compute_tikhonov_modified_singular_values": [[256, "sdynpy-signal-processing-sdynpy-frf-inverse-compute-tikhonov-modified-singular-values"]], "sdynpy.signal_processing.sdynpy_frf_inverse.frf_inverse": [[257, "sdynpy-signal-processing-sdynpy-frf-inverse-frf-inverse"]], "sdynpy.signal_processing.sdynpy_frf_inverse.pinv_by_tikhonov": [[258, "sdynpy-signal-processing-sdynpy-frf-inverse-pinv-by-tikhonov"]], "sdynpy.signal_processing.sdynpy_frf_inverse.pinv_by_truncation": [[259, "sdynpy-signal-processing-sdynpy-frf-inverse-pinv-by-truncation"]], "sdynpy.signal_processing.sdynpy_generator": [[260, "module-sdynpy.signal_processing.sdynpy_generator"]], "sdynpy.signal_processing.sdynpy_generator.burst_random": [[261, "sdynpy-signal-processing-sdynpy-generator-burst-random"]], "sdynpy.signal_processing.sdynpy_generator.chirp": [[262, "sdynpy-signal-processing-sdynpy-generator-chirp"]], "sdynpy.signal_processing.sdynpy_generator.pseudorandom": [[263, "sdynpy-signal-processing-sdynpy-generator-pseudorandom"]], "sdynpy.signal_processing.sdynpy_generator.pulse": [[264, "sdynpy-signal-processing-sdynpy-generator-pulse"]], "sdynpy.signal_processing.sdynpy_generator.ramp_envelope": [[265, "sdynpy-signal-processing-sdynpy-generator-ramp-envelope"]], "sdynpy.signal_processing.sdynpy_generator.random": [[266, "sdynpy-signal-processing-sdynpy-generator-random"]], "sdynpy.signal_processing.sdynpy_generator.sine": [[267, "sdynpy-signal-processing-sdynpy-generator-sine"]], "sdynpy.signal_processing.sdynpy_geometry_fitting": [[268, "module-sdynpy.signal_processing.sdynpy_geometry_fitting"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_fixed_angle": [[269, "sdynpy-signal-processing-sdynpy-geometry-fitting-cone-error-fn-fixed-angle"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_free_angle": [[270, "sdynpy-signal-processing-sdynpy-geometry-fitting-cone-error-fn-free-angle"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_fit": [[271, "sdynpy-signal-processing-sdynpy-geometry-fitting-cone-fit"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.create_cone": [[272, "sdynpy-signal-processing-sdynpy-geometry-fitting-create-cone"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.cylinder_fit": [[273, "sdynpy-signal-processing-sdynpy-geometry-fitting-cylinder-fit"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_line": [[274, "sdynpy-signal-processing-sdynpy-geometry-fitting-distance-point-line"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_plane": [[275, "sdynpy-signal-processing-sdynpy-geometry-fitting-distance-point-plane"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cone_fixed_angle": [[276, "sdynpy-signal-processing-sdynpy-geometry-fitting-fit-cone-fixed-angle"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cylinder": [[277, "sdynpy-signal-processing-sdynpy-geometry-fitting-fit-cylinder"]], "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_line_point_cloud": [[278, "sdynpy-signal-processing-sdynpy-geometry-fitting-fit-line-point-cloud"]], "sdynpy.signal_processing.sdynpy_harmonic": [[279, "module-sdynpy.signal_processing.sdynpy_harmonic"]], "sdynpy.signal_processing.sdynpy_harmonic.harmonic_mag_phase": [[280, "sdynpy-signal-processing-sdynpy-harmonic-harmonic-mag-phase"]], "sdynpy.signal_processing.sdynpy_integration": [[281, "module-sdynpy.signal_processing.sdynpy_integration"]], "sdynpy.signal_processing.sdynpy_integration.MCK_incomplete_to_StateSpace": [[282, "sdynpy-signal-processing-sdynpy-integration-mck-incomplete-to-statespace"]], "sdynpy.signal_processing.sdynpy_integration.MCK_to_StateSpace": [[283, "sdynpy-signal-processing-sdynpy-integration-mck-to-statespace"]], "sdynpy.signal_processing.sdynpy_integration.frequency_domain_differentiation": [[284, "sdynpy-signal-processing-sdynpy-integration-frequency-domain-differentiation"]], "sdynpy.signal_processing.sdynpy_integration.integrate_MCK": [[285, "sdynpy-signal-processing-sdynpy-integration-integrate-mck"]], "sdynpy.signal_processing.sdynpy_integration.integrate_modes": [[286, "sdynpy-signal-processing-sdynpy-integration-integrate-modes"]], "sdynpy.signal_processing.sdynpy_integration.modal_parameters_to_MCK": [[287, "sdynpy-signal-processing-sdynpy-integration-modal-parameters-to-mck"]], "sdynpy.signal_processing.sdynpy_rotation": [[288, "module-sdynpy.signal_processing.sdynpy_rotation"]], "sdynpy.signal_processing.sdynpy_rotation.R": [[289, "sdynpy-signal-processing-sdynpy-rotation-r"]], "sdynpy.signal_processing.sdynpy_rotation.cross_mat": [[290, "sdynpy-signal-processing-sdynpy-rotation-cross-mat"]], "sdynpy.signal_processing.sdynpy_rotation.cross_mat_vectorized": [[291, "sdynpy-signal-processing-sdynpy-rotation-cross-mat-vectorized"]], "sdynpy.signal_processing.sdynpy_rotation.lstsq_rigid_transform": [[292, "sdynpy-signal-processing-sdynpy-rotation-lstsq-rigid-transform"]], "sdynpy.signal_processing.sdynpy_rotation.matrix_to_rodrigues": [[293, "sdynpy-signal-processing-sdynpy-rotation-matrix-to-rodrigues"]], "sdynpy.signal_processing.sdynpy_rotation.quaternion_to_rotation_matrix": [[294, "sdynpy-signal-processing-sdynpy-rotation-quaternion-to-rotation-matrix"]], "sdynpy.signal_processing.sdynpy_rotation.rodrigues_to_matrix": [[295, "sdynpy-signal-processing-sdynpy-rotation-rodrigues-to-matrix"]], "sdynpy.signal_processing.sdynpy_srs": [[296, "module-sdynpy.signal_processing.sdynpy_srs"]], "sdynpy.signal_processing.sdynpy_srs.loginterp": [[297, "sdynpy-signal-processing-sdynpy-srs-loginterp"]], "sdynpy.signal_processing.sdynpy_srs.octspace": [[298, "sdynpy-signal-processing-sdynpy-srs-octspace"]], "sdynpy.signal_processing.sdynpy_srs.optimization_callback": [[299, "sdynpy-signal-processing-sdynpy-srs-optimization-callback"]], "sdynpy.signal_processing.sdynpy_srs.optimization_error_function": [[300, "sdynpy-signal-processing-sdynpy-srs-optimization-error-function"]], "sdynpy.signal_processing.sdynpy_srs.sdof_filter": [[301, "sdynpy-signal-processing-sdynpy-srs-sdof-filter"]], "sdynpy.signal_processing.sdynpy_srs.sdof_free_decay_peak_response": [[302, "sdynpy-signal-processing-sdynpy-srs-sdof-free-decay-peak-response"]], "sdynpy.signal_processing.sdynpy_srs.sdof_ramp_invariant_filter_weights": [[303, "sdynpy-signal-processing-sdynpy-srs-sdof-ramp-invariant-filter-weights"]], "sdynpy.signal_processing.sdynpy_srs.srs": [[304, "sdynpy-signal-processing-sdynpy-srs-srs"]], "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines": [[305, "sdynpy-signal-processing-sdynpy-srs-sum-decayed-sines"]], "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_compensating_pulse_parameters": [[306, "sdynpy-signal-processing-sdynpy-srs-sum-decayed-sines-compensating-pulse-parameters"]], "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_displacement_velocity": [[307, "sdynpy-signal-processing-sdynpy-srs-sum-decayed-sines-displacement-velocity"]], "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_minimize": [[308, "sdynpy-signal-processing-sdynpy-srs-sum-decayed-sines-minimize"]], "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_reconstruction": [[309, "sdynpy-signal-processing-sdynpy-srs-sum-decayed-sines-reconstruction"]], "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_reconstruction_with_compensation": [[310, "sdynpy-signal-processing-sdynpy-srs-sum-decayed-sines-reconstruction-with-compensation"]], "Bibliography": [[311, "bibliography"]], "Airplane Modal Test": [[312, "airplane-modal-test"]], "Contents": [[312, "contents"], [313, "contents"], [314, "contents"], [316, "contents"], [317, "contents"], [318, "contents"], [334, "contents"]], "Imports": [[312, "imports"], [314, "imports"], [315, "Imports"], [316, "imports"], [334, "imports"]], "Default Plotting Options": [[312, "default-plotting-options"]], "Load the Finite Element Model": [[312, "load-the-finite-element-model"]], "Convert Finite Element Model to SDynPy Objects": [[312, "convert-finite-element-model-to-sdynpy-objects"]], "Creating a Geometry from an Exodus file": [[312, "creating-a-geometry-from-an-exodus-file"]], "Exploring the Geometry object": [[312, "exploring-the-geometry-object"]], "Nodes": [[312, "nodes"], [334, "nodes"]], "Coordinate Systems": [[312, "coordinate-systems"], [334, "coordinate-systems"]], "Elements": [[312, "elements"], [334, "elements"]], "Tracelines": [[312, "tracelines"], [334, "tracelines"]], "Visualizing Degrees of Freedom on a Geometry": [[312, "visualizing-degrees-of-freedom-on-a-geometry"]], "Coordinates": [[312, "coordinates"], [334, "coordinates"]], "Plotting Coordinates": [[312, "plotting-coordinates"], [334, "plotting-coordinates"]], "Creating Shapes from an Exodus File": [[312, "creating-shapes-from-an-exodus-file"]], "Shapes": [[312, "shapes"], [334, "shapes"]], "Correcting Negative Frequencies and Array Views versus Copies": [[312, "correcting-negative-frequencies-and-array-views-versus-copies"]], "Transforming Shape Coordinate Systems": [[312, "transforming-shape-coordinate-systems"]], "Optimizing Instrumentation for Test": [[312, "optimizing-instrumentation-for-test"], [314, "optimizing-instrumentation-for-test"]], "Creating a Test Geometry": [[312, "creating-a-test-geometry"], [316, "creating-a-test-geometry"]], "OOPS! An Instrumentation Error!": [[312, "oops-an-instrumentation-error"]], "Running a Virtual Experiment: Rigid Body Checkouts": [[312, "running-a-virtual-experiment-rigid-body-checkouts"]], "Creating a System Object to Integrate": [[312, "creating-a-system-object-to-integrate"]], "Exploring the System Object": [[312, "exploring-the-system-object"]], "Setting up the Integration and Forcing Function": [[312, "setting-up-the-integration-and-forcing-function"]], "Running the Integration to Generate Synthetic Test Data": [[312, "running-the-integration-to-generate-synthetic-test-data"]], "Exploring Time Data Objects": [[312, "exploring-time-data-objects"]], "Identifying Bad Geometry with Rigid Body Checkouts in SDynPy": [[312, "identifying-bad-geometry-with-rigid-body-checkouts-in-sdynpy"]], "Running a Virtual Experiment: Modal Testing": [[312, "running-a-virtual-experiment-modal-testing"]], "Fitting Modes using PolyMax": [[312, "fitting-modes-using-polymax"]], "Running PolyMax": [[312, "running-polymax"]], "Comparing Test and Finite Element Modes": [[312, "comparing-test-and-finite-element-modes"]], "SEREP Expansion": [[312, "serep-expansion"]], "Substructuring using Craig-Bampton Superelements from Sierra/SD": [[313, "substructuring-using-craig-bampton-superelements-from-sierra-sd"]], "Setting up the Problem": [[313, "setting-up-the-problem"], [318, "setting-up-the-problem"]], "Analyzing Superelements in SDynPy": [[313, "analyzing-superelements-in-sdynpy"]], "Combining Component Models": [[313, "combining-component-models"]], "Summary": [[313, "summary"], [314, "summary"], [317, "summary"], [318, "summary"], [322, "Summary"], [323, "Summary"], [324, "Summary"], [325, "Summary"], [327, "Summary"]], "MIMO Random Vibration": [[314, "mimo-random-vibration"]], "Simulating an Environment": [[314, "simulating-an-environment"]], "Selecting Shaker Excitation Locations": [[314, "selecting-shaker-excitation-locations"]], "Performing Vibration Control": [[314, "performing-vibration-control"]], "Simple Vibration Control using the Pseudoinverse": [[314, "simple-vibration-control-using-the-pseudoinverse"]], "Tikhonov Regularization": [[314, "tikhonov-regularization"]], "Weighting the Shakers": [[314, "weighting-the-shakers"]], "Response Weighting": [[314, "response-weighting"]], "Buzz Test Method": [[314, "buzz-test-method"]], "Running a Test": [[314, "running-a-test"]], "Model Reduction": [[315, "Model-Reduction"]], "Set up 3D Plots": [[315, "Set-up-3D-Plots"]], "Collect and Set Up Models": [[315, "Collect-and-Set-Up-Models"]], "Creating Truth Data": [[315, "Creating-Truth-Data"]], "Selecting Degrees of Freedom for Reduction and Substructuring": [[315, "Selecting-Degrees-of-Freedom-for-Reduction-and-Substructuring"]], "Perform the model reductions": [[315, "Perform-the-model-reductions"]], "Guyan Reduction": [[315, "Guyan-Reduction"]], "Dynamic Reduction": [[315, "Dynamic-Reduction"]], "Craig-Bampton Reduction": [[315, "Craig-Bampton-Reduction"]], "Component Mode Synthesis": [[315, "Component-Mode-Synthesis"]], "Comparison of Results": [[315, "Comparison-of-Results"]], "Rattlesnake Demonstration": [[316, "rattlesnake-demonstration"]], "Load in Test Data": [[316, "load-in-test-data"]], "Computing FRFs": [[316, "computing-frfs"]], "Fitting Modes to the FRFs": [[316, "fitting-modes-to-the-frfs"]], "Analyzing Modal Parameters": [[316, "analyzing-modal-parameters"]], "Documentation Generation": [[316, "documentation-generation"]], "Exporting to Exodus": [[316, "exporting-to-exodus"]], "Analysis of Transient Finite Element Results": [[317, "analysis-of-transient-finite-element-results"]], "Problem Set Up": [[317, "problem-set-up"]], "Analyzing Model Responses": [[317, "analyzing-model-responses"]], "Pseudorandom Analysis": [[317, "pseudorandom-analysis"]], "Random Analysis": [[317, "random-analysis"]], "Comparison of Excitation Techniques": [[317, "comparison-of-excitation-techniques"]], "Substructuring using the Transmission Simulator Method": [[318, "substructuring-using-the-transmission-simulator-method"], [318, "id1"]], "Loading the results into SDynPy": [[318, "loading-the-results-into-sdynpy"]], "Reducing to Test Degrees of Freedom": [[318, "reducing-to-test-degrees-of-freedom"]], "SDynpy Examples": [[319, "sdynpy-examples"]], "Contents:": [[319, null], [320, null], [321, null], [326, null]], "Welcome to SDynPy\u2019s documentation!": [[320, "welcome-to-sdynpy-s-documentation"]], "Information": [[320, "information"]], "Indices and tables": [[320, "indices-and-tables"]], "Modal Tutorials": [[321, "modal-tutorials"]], "Modal Tutorial 01: What is modal analysis?": [[322, "Modal-Tutorial-01:-What-is-modal-analysis?"]], "So what is Modal Analysis?": [[322, "So-what-is-Modal-Analysis?"]], "How do we find the modes of the system?": [[322, "How-do-we-find-the-modes-of-the-system?"]], "Modal Tutorial 02: Basics of Vibrations": [[323, "Modal-Tutorial-02:-Basics-of-Vibrations"]], "A Simple Undamped Spring-Mass System": [[323, "A-Simple-Undamped-Spring-Mass-System"]], "Adding Damping": [[323, "Adding-Damping"], [324, "Adding-Damping"]], "Response of Single Degree of Freedom Systems to Harmonic Excitation": [[323, "Response-of-Single-Degree-of-Freedom-Systems-to-Harmonic-Excitation"]], "Undamped Response to Harmonic Excitation": [[323, "Undamped-Response-to-Harmonic-Excitation"]], "Damped Response to Harmonic Excitation": [[323, "Damped-Response-to-Harmonic-Excitation"]], "Comparison between Displacement, Velocity, and Acceleration Frequency Response Functions": [[323, "Comparison-between-Displacement,-Velocity,-and-Acceleration-Frequency-Response-Functions"]], "Working with Single Degree of Freedom Systems in SDynPy": [[323, "Working-with-Single-Degree-of-Freedom-Systems-in-SDynPy"]], "Homework Problems": [[323, "Homework-Problems"], [324, "Homework-Problems"], [325, "Homework-Problems"], [327, "Homework-Problems"], [328, "Homework-Problems"]], "1. Set up a System": [[323, "1.-Set-up-a-System"]], "2. Compute the Frequency Response Function": [[323, "2.-Compute-the-Frequency-Response-Function"]], "3. Investigate Design Changes": [[323, "3.-Investigate-Design-Changes"]], "4. Investigate Damping Changes": [[323, "4.-Investigate-Damping-Changes"]], "Modal Tutorial 03: Vibrations of Systems with Multiple Degrees of Freedom": [[324, "Modal-Tutorial-03:-Vibrations-of-Systems-with-Multiple-Degrees-of-Freedom"]], "A Spring Mass System with 2 Degrees of Freedom": [[324, "A-Spring-Mass-System-with-2-Degrees-of-Freedom"], [325, "A-Spring-Mass-System-with-2-Degrees-of-Freedom"]], "Free Response of Multiple Degree of Freedom Systems": [[324, "Free-Response-of-Multiple-Degree-of-Freedom-Systems"]], "Multiple Degree of Freedom Response to Harmonic Excitation": [[324, "Multiple-Degree-of-Freedom-Response-to-Harmonic-Excitation"]], "Working with Multiple Degree of Freedom Systems in SDynPy": [[324, "Working-with-Multiple-Degree-of-Freedom-Systems-in-SDynPy"]], "1. Writing Equations of Motion": [[324, "1.-Writing-Equations-of-Motion"]], "2. Compute the Frequency Response Function Matrix": [[324, "2.-Compute-the-Frequency-Response-Function-Matrix"]], "3. Identifying Drive Points": [[324, "3.-Identifying-Drive-Points"]], "Modal Tutorial 04: Modal Analysis": [[325, "Modal-Tutorial-04:-Modal-Analysis"]], "Solving for the Eigenvalues": [[325, "Solving-for-the-Eigenvalues"]], "Solving for the Eigenvectors": [[325, "Solving-for-the-Eigenvectors"]], "More about Modes": [[325, "More-about-Modes"]], "A series of Single Degree of Freedom Systems": [[325, "A-series-of-Single-Degree-of-Freedom-Systems"]], "What About Damping?": [[325, "What-About-Damping?"]], "Rayleigh Damping": [[325, "Rayleigh-Damping"]], "Modal Damping": [[325, "Modal-Damping"]], "General Damping Matrices": [[325, "General-Damping-Matrices"]], "Response to Harmonic Excitation": [[325, "Response-to-Harmonic-Excitation"]], "Modal Analysis in SDynPy": [[325, "Modal-Analysis-in-SDynPy"]], "1. Construct the generalized eigenvalue problem": [[325, "1.-Construct-the-generalized-eigenvalue-problem"]], "2. Compute and solve the characteristic polynomial": [[325, "2.-Compute-and-solve-the-characteristic-polynomial"]], "3. Compute eigenvector": [[325, "3.-Compute-eigenvector"]], "4. Perform the same operations in SDynPy and plot the mode shapes": [[325, "4.-Perform-the-same-operations-in-SDynPy-and-plot-the-mode-shapes"]], "5. Compute the FRF matrix from modal quantities": [[325, "5.-Compute-the-FRF-matrix-from-modal-quantities"]], "Modal Tutorial 05: Experimental Modal Analysis": [[326, "modal-tutorial-05-experimental-modal-analysis"]], "Modal Tutorial 05 Part A: Computing Frequency Response from Time Data": [[327, "Modal-Tutorial-05-Part-A:-Computing-Frequency-Response-from-Time-Data"]], "Sinusoidal Excitation": [[327, "Sinusoidal-Excitation"]], "Broadband Excitation": [[327, "Broadband-Excitation"]], "Computing FRFs using FFTs": [[327, "Computing-FRFs-using-FFTs"]], "Computing FRFs with Power Spectra": [[327, "Computing-FRFs-with-Power-Spectra"]], "Computing Power Spectra": [[327, "Computing-Power-Spectra"]], "The H1 Technique": [[327, "The-H1-Technique"]], "The H2 Technique": [[327, "The-H2-Technique"]], "The H3 Technique": [[327, "The-H3-Technique"]], "The HCD Technique": [[327, "The-HCD-Technique"]], "The Hv Technique": [[327, "The-Hv-Technique"]], "Coherence": [[327, "Coherence"]], "Computing Frequency Response Functions using SDynPy": [[327, "Computing-Frequency-Response-Functions-using-SDynPy"]], "SignalProcessingGUI": [[327, "SignalProcessingGUI"]], "1. Simulate a Test to Generate Time Histories": [[327, "1.-Simulate-a-Test-to-Generate-Time-Histories"]], "2. Compute Frequency Response Functions": [[327, "2.-Compute-Frequency-Response-Functions"]], "Modal Tutorial 05 Part B: Types of Excitation for Experimental Modal Analysis": [[328, "Modal-Tutorial-05-Part-B:-Types-of-Excitation-for-Experimental-Modal-Analysis"]], "Requirements for the FFT": [[328, "Requirements-for-the-FFT"]], "Considerations for Multiple-Input Excitation": [[328, "Considerations-for-Multiple-Input-Excitation"]], "Types of Modal Excitation": [[328, "Types-of-Modal-Excitation"]], "Random Vibration": [[328, "Random-Vibration"]], "Pseudorandom Excitation": [[328, "Pseudorandom-Excitation"]], "Chirp Excitation": [[328, "Chirp-Excitation"]], "Burst Random Excitation": [[328, "Burst-Random-Excitation"]], "Impulse Excitation": [[328, "Impulse-Excitation"]], "Modal Tutorial 05 Part C: Selecting Excitation and Response Degrees of Freedom": [[329, "Modal-Tutorial-05-Part-C:-Selecting-Excitation-and-Response-Degrees-of-Freedom"]], "Optimal Excitation Theory": [[329, "Optimal-Excitation-Theory"]], "Computing Optimal Excitation Locations": [[329, "Computing-Optimal-Excitation-Locations"]], "Optimal Response Theory": [[329, "Optimal-Response-Theory"]], "Computing Optimal Responses": [[329, "Computing-Optimal-Responses"]], "Modal Tutorial 05 Part D: Data Quality Checks": [[330, "Modal-Tutorial-05-Part-D:-Data-Quality-Checks"]], "Modal Tutorial 05 Part E: Fitting Modes to Data": [[331, "Modal-Tutorial-05-Part-E:-Fitting-Modes-to-Data"]], "Modal Tutorial 05 Part F: Comparing Test and Analysis": [[332, "Modal-Tutorial-05-Part-F:-Comparing-Test-and-Analysis"]], "SDynPy Programming Interface": [[333, "sdynpy-programming-interface"]], "SDynPy Showcase": [[334, "sdynpy-showcase"]], "Creating a Simple Beam Model": [[334, "creating-a-simple-beam-model"]], "Geometry in SDynPy": [[334, "geometry-in-sdynpy"]], "Plotting Geometry": [[334, "plotting-geometry"]], "Systems in SDynPy": [[334, "systems-in-sdynpy"]], "Computing Modes of the System": [[334, "computing-modes-of-the-system"]], "Plotting Shapes": [[334, "plotting-shapes"]], "Assigning to SDynpy Array Fields and Array Views versus Copies": [[334, "assigning-to-sdynpy-array-fields-and-array-views-versus-copies"]], "Indexing using a Single Integer Index": [[334, "indexing-using-a-single-integer-index"]], "Indexing using a Slice": [[334, "indexing-using-a-slice"]], "Indexing with Logical Arrays": [[334, "indexing-with-logical-arrays"]], "Indexing with Integer Arrays": [[334, "indexing-with-integer-arrays"]], "Computing a Modal System": [[334, "computing-a-modal-system"]], "Data in SDynPy": [[334, "data-in-sdynpy"]], "Integrating Equations of Motion to Produce Time Data": [[334, "integrating-equations-of-motion-to-produce-time-data"]], "Generating an Excitation Signal": [[334, "generating-an-excitation-signal"]], "Performing the Time Integration": [[334, "performing-the-time-integration"]], "Computing Frequency Response Functions": [[334, "computing-frequency-response-functions"]], "Code-based Frequency Response Function Computations": [[334, "code-based-frequency-response-function-computations"]], "Mode Indicator Functions": [[334, "mode-indicator-functions"]], "Graphical Frequency Response Function Computation": [[334, "graphical-frequency-response-function-computation"]], "Plotting Deflection Shapes": [[334, "plotting-deflection-shapes"]], "Fitting Modes to Frequency Response Functions": [[334, "fitting-modes-to-frequency-response-functions"]], "PolyPy": [[334, "polypy"]], "Synthesize Modes and Correlate (SMAC)": [[334, "synthesize-modes-and-correlate-smac"]], "Comparing Modes": [[334, "comparing-modes"]], "Adding Another Beam": [[334, "adding-another-beam"]], "Applying Constraints to the System": [[334, "applying-constraints-to-the-system"]], "Frequency-Based Substructuring": [[334, "frequency-based-substructuring"]], "Usage": [[335, "usage"]], "Installation": [[335, "installation"]], "SDynPy Overview": [[335, "sdynpy-overview"]], "SDynPy Core Data Objects": [[335, "sdynpy-core-data-objects"]], "Loading Test Data": [[335, "loading-test-data"]], "Finite Element Models": [[335, "finite-element-models"]], "Experimental Modal Analysis": [[335, "experimental-modal-analysis"]], "Documentation": [[335, "documentation"]], "Signal Processing": [[335, "signal-processing"]]}, "indexentries": {"module": [[0, "module-sdynpy"], [1, "module-sdynpy.core"], [2, "module-sdynpy.core.sdynpy_array"], [4, "module-sdynpy.core.sdynpy_colors"], [5, "module-sdynpy.core.sdynpy_coordinate"], [13, "module-sdynpy.core.sdynpy_data"], [46, "module-sdynpy.core.sdynpy_geometry"], [70, "module-sdynpy.core.sdynpy_matrix"], [73, "module-sdynpy.core.sdynpy_shape"], [87, "module-sdynpy.core.sdynpy_system"], [90, "module-sdynpy.demo"], [91, "module-sdynpy.demo.beam_airplane"], [93, "module-sdynpy.demo.beam_plate"], [95, "module-sdynpy.doc"], [96, "module-sdynpy.doc.sdynpy_latex"], [98, "module-sdynpy.doc.sdynpy_ppt"], [108, "module-sdynpy.fem"], [109, "module-sdynpy.fem.sdynpy_beam"], [113, "module-sdynpy.fem.sdynpy_dof"], [116, "module-sdynpy.fem.sdynpy_exodus"], [125, "module-sdynpy.fem.sdynpy_shaker"], [127, "module-sdynpy.fileio"], [128, "module-sdynpy.fileio.sdynpy_rattlesnake"], [135, "module-sdynpy.fileio.sdynpy_tshaker"], [140, "module-sdynpy.fileio.sdynpy_uff"], [147, "module-sdynpy.fileio.sdynpy_uff_datasets"], [148, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151"], [151, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164"], [154, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858"], [158, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400"], [161, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411"], [164, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412"], [167, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420"], [170, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55"], [173, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58"], [177, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82"], [180, "module-sdynpy.fileio.sdynpy_vic"], [187, "module-sdynpy.modal"], [188, "module-sdynpy.modal.sdynpy_ccmif"], [191, "module-sdynpy.modal.sdynpy_modeshape"], [196, "module-sdynpy.modal.sdynpy_polypy"], [200, "module-sdynpy.modal.sdynpy_signal_processing_gui"], [202, "module-sdynpy.modal.sdynpy_smac"], [209, "module-sdynpy.signal_processing"], [210, "module-sdynpy.signal_processing.sdynpy_camera"], [223, "module-sdynpy.signal_processing.sdynpy_complex"], [225, "module-sdynpy.signal_processing.sdynpy_correlation"], [232, "module-sdynpy.signal_processing.sdynpy_cpsd"], [248, "module-sdynpy.signal_processing.sdynpy_frf"], [255, "module-sdynpy.signal_processing.sdynpy_frf_inverse"], [260, "module-sdynpy.signal_processing.sdynpy_generator"], [268, "module-sdynpy.signal_processing.sdynpy_geometry_fitting"], [279, "module-sdynpy.signal_processing.sdynpy_harmonic"], [281, "module-sdynpy.signal_processing.sdynpy_integration"], [288, "module-sdynpy.signal_processing.sdynpy_rotation"], [296, "module-sdynpy.signal_processing.sdynpy_srs"]], "sdynpy": [[0, "module-sdynpy"]], "sdynpy.core": [[1, "module-sdynpy.core"]], "sdynpy.core.sdynpy_array": [[2, "module-sdynpy.core.sdynpy_array"]], "sdynpyarray (class in sdynpy.core.sdynpy_array)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray"]], "__init__() (sdynpyarray method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.__init__"]], "assemble_mat_dict() (sdynpyarray method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.assemble_mat_dict"]], "fields (sdynpyarray property)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.fields"]], "load() (sdynpyarray class method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.load"]], "ndenumerate() (sdynpyarray method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.ndenumerate"]], "save() (sdynpyarray method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.save"]], "savemat() (sdynpyarray method)": [[3, "sdynpy.core.sdynpy_array.SdynpyArray.savemat"]], "sdynpy.core.sdynpy_colors": [[4, "module-sdynpy.core.sdynpy_colors"]], "sdynpy.core.sdynpy_coordinate": [[5, "module-sdynpy.core.sdynpy_coordinate"]], "coordinatearray (class in sdynpy.core.sdynpy_coordinate)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray"]], "__init__() (coordinatearray method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.__init__"]], "abs() (coordinatearray method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.abs"]], "data_dtype (coordinatearray attribute)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.data_dtype"]], "direction_string_array() (coordinatearray method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.direction_string_array"]], "from_matlab_cellstr() (coordinatearray class method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.from_matlab_cellstr"]], "from_nodelist() (coordinatearray class method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.from_nodelist"]], "local_direction() (coordinatearray method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.local_direction"]], "sign() (coordinatearray method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.sign"]], "string_array() (coordinatearray method)": [[6, "sdynpy.core.sdynpy_coordinate.CoordinateArray.string_array"]], "coordinate_array() (in module sdynpy.core.sdynpy_coordinate)": [[7, "sdynpy.core.sdynpy_coordinate.coordinate_array"]], "create_coordinate_string() (in module sdynpy.core.sdynpy_coordinate)": [[8, "sdynpy.core.sdynpy_coordinate.create_coordinate_string"]], "from_matlab_cellstr() (in module sdynpy.core.sdynpy_coordinate)": [[9, "sdynpy.core.sdynpy_coordinate.from_matlab_cellstr"]], "from_nodelist() (in module sdynpy.core.sdynpy_coordinate)": [[10, "sdynpy.core.sdynpy_coordinate.from_nodelist"]], "outer_product() (in module sdynpy.core.sdynpy_coordinate)": [[11, "sdynpy.core.sdynpy_coordinate.outer_product"]], "parse_coordinate_string() (in module sdynpy.core.sdynpy_coordinate)": [[12, "sdynpy.core.sdynpy_coordinate.parse_coordinate_string"]], "sdynpy.core.sdynpy_data": [[13, "module-sdynpy.core.sdynpy_data"]], "abscissaindexextractor (class in sdynpy.core.sdynpy_data)": [[14, "sdynpy.core.sdynpy_data.AbscissaIndexExtractor"]], "__init__() (abscissaindexextractor method)": [[14, "sdynpy.core.sdynpy_data.AbscissaIndexExtractor.__init__"]], "abscissavalueextractor (class in sdynpy.core.sdynpy_data)": [[15, "sdynpy.core.sdynpy_data.AbscissaValueExtractor"]], "__init__() (abscissavalueextractor method)": [[15, "sdynpy.core.sdynpy_data.AbscissaValueExtractor.__init__"]], "coherence (cpsdplot.datatype attribute)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.DataType.COHERENCE"]], "cpsdplot (class in sdynpy.core.sdynpy_data)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot"]], "cpsdplot.datatype (class in sdynpy.core.sdynpy_data)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.DataType"]], "imaginary (cpsdplot.datatype attribute)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.DataType.IMAGINARY"]], "magnitude (cpsdplot.datatype attribute)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.DataType.MAGNITUDE"]], "phase (cpsdplot.datatype attribute)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.DataType.PHASE"]], "real (cpsdplot.datatype attribute)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.DataType.REAL"]], "__init__() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.__init__"]], "clear_selection() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.clear_selection"]], "coherence_state() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.coherence_state"]], "connectui() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.connectUI"]], "deselect_diagonal() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.deselect_diagonal"]], "deselect_lower_triangular() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.deselect_lower_triangular"]], "deselect_upper_triangular() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.deselect_upper_triangular"]], "extend_selection_matrix() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.extend_selection_matrix"]], "find_function_types() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.find_function_types"]], "imaginary_state() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.imaginary_state"]], "initui() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.initUI"]], "init_matrix_plot() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.init_matrix_plot"]], "invert_selection() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.invert_selection"]], "magnitude_state() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.magnitude_state"]], "phase_state() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.phase_state"]], "plot() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.plot"]], "plot_selected_function() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.plot_selected_function"]], "real_state() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.real_state"]], "select_diagonal() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.select_diagonal"]], "select_lower_triangular() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.select_lower_triangular"]], "select_plotted() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.select_plotted"]], "select_upper_triangular() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.select_upper_triangular"]], "selector_click() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.selector_click"]], "selector_unclick() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.selector_unclick"]], "settext() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.settext"]], "state_changed() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.state_changed"]], "update_selection() (cpsdplot method)": [[16, "sdynpy.core.sdynpy_data.CPSDPlot.update_selection"]], "coherencearray (class in sdynpy.core.sdynpy_data)": [[17, "sdynpy.core.sdynpy_data.CoherenceArray"]], "__init__() (coherencearray method)": [[17, "sdynpy.core.sdynpy_data.CoherenceArray.__init__"]], "function_type (coherencearray property)": [[17, "sdynpy.core.sdynpy_data.CoherenceArray.function_type"]], "complextype (class in sdynpy.core.sdynpy_data)": [[18, "sdynpy.core.sdynpy_data.ComplexType"]], "imaginary (complextype attribute)": [[18, "sdynpy.core.sdynpy_data.ComplexType.IMAGINARY"]], "magnitude (complextype attribute)": [[18, "sdynpy.core.sdynpy_data.ComplexType.MAGNITUDE"]], "magphase (complextype attribute)": [[18, "sdynpy.core.sdynpy_data.ComplexType.MAGPHASE"]], "phase (complextype attribute)": [[18, "sdynpy.core.sdynpy_data.ComplexType.PHASE"]], "real (complextype attribute)": [[18, "sdynpy.core.sdynpy_data.ComplexType.REAL"]], "realimag (complextype attribute)": [[18, "sdynpy.core.sdynpy_data.ComplexType.REALIMAG"]], "__init__() (complextype method)": [[18, "sdynpy.core.sdynpy_data.ComplexType.__init__"]], "correlationarray (class in sdynpy.core.sdynpy_data)": [[19, "sdynpy.core.sdynpy_data.CorrelationArray"]], "__init__() (correlationarray method)": [[19, "sdynpy.core.sdynpy_data.CorrelationArray.__init__"]], "function_type (correlationarray property)": [[19, "sdynpy.core.sdynpy_data.CorrelationArray.function_type"]], "decayedsinetable (class in sdynpy.core.sdynpy_data)": [[20, "sdynpy.core.sdynpy_data.DecayedSineTable"]], "__init__() (decayedsinetable method)": [[20, "sdynpy.core.sdynpy_data.DecayedSineTable.__init__"]], "construct_displacement() (decayedsinetable method)": [[20, "sdynpy.core.sdynpy_data.DecayedSineTable.construct_displacement"]], "construct_signal() (decayedsinetable method)": [[20, "sdynpy.core.sdynpy_data.DecayedSineTable.construct_signal"]], "construct_velocity() (decayedsinetable method)": [[20, "sdynpy.core.sdynpy_data.DecayedSineTable.construct_velocity"]], "autocorrelation (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.AUTOCORRELATION"]], "autospectrum (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.AUTOSPECTRUM"]], "coherence (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.COHERENCE"]], "crosscorrelation (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.CROSSCORRELATION"]], "crossspectrum (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.CROSSSPECTRUM"]], "cumulative_frequency_distribution (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.CUMULATIVE_FREQUENCY_DISTRIBUTION"]], "eigenvalue (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.EIGENVALUE"]], "eigenvector (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.EIGENVECTOR"]], "energy_spectral_density (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.ENERGY_SPECTRAL_DENSITY"]], "finite_impulse_response_filter (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.FINITE_IMPULSE_RESPONSE_FILTER"]], "force_pattern (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.FORCE_PATTERN"]], "frequency_response_function (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.FREQUENCY_RESPONSE_FUNCTION"]], "functiontypes (class in sdynpy.core.sdynpy_data)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes"]], "general (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.GENERAL"]], "impulse_response_function (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.IMPULSE_RESPONSE_FUNCTION"]], "mode_indicator_function (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.MODE_INDICATOR_FUNCTION"]], "multiple_coherence (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.MULTIPLE_COHERENCE"]], "orbit (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.ORBIT"]], "order_function (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.ORDER_FUNCTION"]], "partial_coherence (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.PARTIAL_COHERENCE"]], "partial_power (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.PARTIAL_POWER"]], "peaks_valley (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.PEAKS_VALLEY"]], "phase_compensation (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.PHASE_COMPENSATION"]], "power_spectral_density (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.POWER_SPECTRAL_DENSITY"]], "probability_density_function (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.PROBABILITY_DENSITY_FUNCTION"]], "shock_response_spectrum (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.SHOCK_RESPONSE_SPECTRUM"]], "spectrum (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.SPECTRUM"]], "strain_per_cycle (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.STRAIN_PER_CYCLE"]], "stress_per_cycle (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.STRESS_PER_CYCLE"]], "time_response (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.TIME_RESPONSE"]], "transmisibility (functiontypes attribute)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.TRANSMISIBILITY"]], "__init__() (functiontypes method)": [[21, "sdynpy.core.sdynpy_data.FunctionTypes.__init__"]], "guiplot (class in sdynpy.core.sdynpy_data)": [[22, "sdynpy.core.sdynpy_data.GUIPlot"]], "__init__() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.__init__"]], "connect_callbacks() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.connect_callbacks"]], "deselect_all_complex_types_except() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.deselect_all_complex_types_except"]], "selection_changed() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.selection_changed"]], "set_imaginary() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.set_imaginary"]], "set_magnitude() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.set_magnitude"]], "set_magnitude_phase() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.set_magnitude_phase"]], "set_phase() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.set_phase"]], "set_real() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.set_real"]], "set_real_imag() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.set_real_imag"]], "update() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.update"]], "update_abscissa_log() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.update_abscissa_log"]], "update_checkbox() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.update_checkbox"]], "update_data() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.update_data"]], "update_ordinate_log() (guiplot method)": [[22, "sdynpy.core.sdynpy_data.GUIPlot.update_ordinate_log"]], "impulseresponsefunctionarray (class in sdynpy.core.sdynpy_data)": [[23, "sdynpy.core.sdynpy_data.ImpulseResponseFunctionArray"]], "__init__() (impulseresponsefunctionarray method)": [[23, "sdynpy.core.sdynpy_data.ImpulseResponseFunctionArray.__init__"]], "enforce_causality() (impulseresponsefunctionarray method)": [[23, "sdynpy.core.sdynpy_data.ImpulseResponseFunctionArray.enforce_causality"]], "fft() (impulseresponsefunctionarray method)": [[23, "sdynpy.core.sdynpy_data.ImpulseResponseFunctionArray.fft"]], "find_end_of_ringdown() (impulseresponsefunctionarray method)": [[23, "sdynpy.core.sdynpy_data.ImpulseResponseFunctionArray.find_end_of_ringdown"]], "function_type (impulseresponsefunctionarray property)": [[23, "sdynpy.core.sdynpy_data.ImpulseResponseFunctionArray.function_type"]], "mplcanvas (class in sdynpy.core.sdynpy_data)": [[24, "sdynpy.core.sdynpy_data.MPLCanvas"]], "__init__() (mplcanvas method)": [[24, "sdynpy.core.sdynpy_data.MPLCanvas.__init__"]], "mplmulticanvas (class in sdynpy.core.sdynpy_data)": [[25, "sdynpy.core.sdynpy_data.MPLMultiCanvas"]], "__init__() (mplmulticanvas method)": [[25, "sdynpy.core.sdynpy_data.MPLMultiCanvas.__init__"]], "modeindicatorfunctionarray (class in sdynpy.core.sdynpy_data)": [[26, "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray"]], "__init__() (modeindicatorfunctionarray method)": [[26, "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray.__init__"]], "function_type (modeindicatorfunctionarray property)": [[26, "sdynpy.core.sdynpy_data.ModeIndicatorFunctionArray.function_type"]], "multiplecoherencearray (class in sdynpy.core.sdynpy_data)": [[27, "sdynpy.core.sdynpy_data.MultipleCoherenceArray"]], "__init__() (multiplecoherencearray method)": [[27, "sdynpy.core.sdynpy_data.MultipleCoherenceArray.__init__"]], "function_type (multiplecoherencearray property)": [[27, "sdynpy.core.sdynpy_data.MultipleCoherenceArray.function_type"]], "nddataarray (class in sdynpy.core.sdynpy_data)": [[28, "sdynpy.core.sdynpy_data.NDDataArray"]], "__init__() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.__init__"]], "abscissa_spacing (nddataarray property)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.abscissa_spacing"]], "argmax() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.argmax"]], "argmin() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.argmin"]], "data_dimension (nddataarray property)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.data_dimension"]], "downsample() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.downsample"]], "extract_elements() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.extract_elements"]], "extract_elements_by_abscissa() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.extract_elements_by_abscissa"]], "from_uff() (nddataarray static method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.from_uff"]], "from_unv() (nddataarray static method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.from_unv"]], "function_type (nddataarray property)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.function_type"]], "idx_by_ab (nddataarray property)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.idx_by_ab"]], "idx_by_el (nddataarray property)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.idx_by_el"]], "interpolate() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.interpolate"]], "join() (nddataarray class method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.join"]], "load() (nddataarray class method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.load"]], "max() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.max"]], "min() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.min"]], "num_coordinates (nddataarray property)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.num_coordinates"]], "num_elements (nddataarray property)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.num_elements"]], "plot() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.plot"]], "reference_coordinate (nddataarray property)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.reference_coordinate"]], "reshape_to_matrix() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.reshape_to_matrix"]], "response_coordinate (nddataarray property)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.response_coordinate"]], "save() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.save"]], "to_imat_struct() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.to_imat_struct"]], "to_imat_struct_array() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.to_imat_struct_array"]], "to_shape_array() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.to_shape_array"]], "transform_coordinate_system() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.transform_coordinate_system"]], "validate_common_abscissa() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.validate_common_abscissa"]], "zero_pad() (nddataarray method)": [[28, "sdynpy.core.sdynpy_data.NDDataArray.zero_pad"]], "powerspectraldensityarray (class in sdynpy.core.sdynpy_data)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray"]], "__init__() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.__init__"]], "angle() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.angle"]], "coherence() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.coherence"]], "compare_asds() (powerspectraldensityarray static method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.compare_asds"]], "error_summary() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.error_summary"]], "eye() (powerspectraldensityarray class method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.eye"]], "function_type (powerspectraldensityarray property)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.function_type"]], "generate_time_history() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.generate_time_history"]], "get_asd() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.get_asd"]], "mimo_forward() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.mimo_forward"]], "mimo_inverse() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.mimo_inverse"]], "plot_asds() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.plot_asds"]], "plot_magnitude_coherence_phase() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.plot_magnitude_coherence_phase"]], "plot_singular_values() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.plot_singular_values"]], "rms() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.rms"]], "set_coherence_phase() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.set_coherence_phase"]], "svd() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.svd"]], "to_rattlesnake_specification() (powerspectraldensityarray method)": [[29, "sdynpy.core.sdynpy_data.PowerSpectralDensityArray.to_rattlesnake_specification"]], "powerspectrumarray (class in sdynpy.core.sdynpy_data)": [[30, "sdynpy.core.sdynpy_data.PowerSpectrumArray"]], "__init__() (powerspectrumarray method)": [[30, "sdynpy.core.sdynpy_data.PowerSpectrumArray.__init__"]], "function_type (powerspectrumarray property)": [[30, "sdynpy.core.sdynpy_data.PowerSpectrumArray.function_type"]], "shockresponsespectrumarray (class in sdynpy.core.sdynpy_data)": [[31, "sdynpy.core.sdynpy_data.ShockResponseSpectrumArray"]], "__init__() (shockresponsespectrumarray method)": [[31, "sdynpy.core.sdynpy_data.ShockResponseSpectrumArray.__init__"]], "function_type (shockresponsespectrumarray property)": [[31, "sdynpy.core.sdynpy_data.ShockResponseSpectrumArray.function_type"]], "plot() (shockresponsespectrumarray method)": [[31, "sdynpy.core.sdynpy_data.ShockResponseSpectrumArray.plot"]], "sum_decayed_sines() (shockresponsespectrumarray method)": [[31, "sdynpy.core.sdynpy_data.ShockResponseSpectrumArray.sum_decayed_sines"]], "acceleration (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.ACCELERATION"]], "displacement (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.DISPLACEMENT"]], "excitation_force (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.EXCITATION_FORCE"]], "frequency (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.FREQUENCY"]], "general (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.GENERAL"]], "heat_flux (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.HEAT_FLUX"]], "mass (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.MASS"]], "order (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.ORDER"]], "pressure (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.PRESSURE"]], "reaction_force (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.REACTION_FORCE"]], "rpm (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.RPM"]], "sound_intensity (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.SOUND_INTENSITY"]], "sound_power (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.SOUND_POWER"]], "sound_pressure (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.SOUND_PRESSURE"]], "strain (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.STRAIN"]], "stress (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.STRESS"]], "specificdatatype (class in sdynpy.core.sdynpy_data)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType"]], "temperature (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.TEMPERATURE"]], "time (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.TIME"]], "unknown (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.UNKNOWN"]], "velocity (specificdatatype attribute)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.VELOCITY"]], "__init__() (specificdatatype method)": [[32, "sdynpy.core.sdynpy_data.SpecificDataType.__init__"]], "spectrumarray (class in sdynpy.core.sdynpy_data)": [[33, "sdynpy.core.sdynpy_data.SpectrumArray"]], "__init__() (spectrumarray method)": [[33, "sdynpy.core.sdynpy_data.SpectrumArray.__init__"]], "function_type (spectrumarray property)": [[33, "sdynpy.core.sdynpy_data.SpectrumArray.function_type"]], "ifft() (spectrumarray method)": [[33, "sdynpy.core.sdynpy_data.SpectrumArray.ifft"]], "interpolate_by_zero_pad() (spectrumarray method)": [[33, "sdynpy.core.sdynpy_data.SpectrumArray.interpolate_by_zero_pad"]], "plot() (spectrumarray method)": [[33, "sdynpy.core.sdynpy_data.SpectrumArray.plot"]], "plot_spectrogram() (spectrumarray method)": [[33, "sdynpy.core.sdynpy_data.SpectrumArray.plot_spectrogram"]], "timehistoryarray (class in sdynpy.core.sdynpy_data)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray"]], "__init__() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.__init__"]], "burst_random_signal() (timehistoryarray class method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.burst_random_signal"]], "chirp_signal() (timehistoryarray class method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.chirp_signal"]], "cpsd() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.cpsd"]], "fft() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.fft"]], "find_signal_shift() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.find_signal_shift"]], "from_exodus() (timehistoryarray class method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.from_exodus"]], "function_type (timehistoryarray property)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.function_type"]], "haversine_signal() (timehistoryarray class method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.haversine_signal"]], "mimo_forward() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.mimo_forward"]], "mimo_inverse() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.mimo_inverse"]], "overlap_and_add() (timehistoryarray static method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.overlap_and_add"]], "pseudorandom_signal() (timehistoryarray class method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.pseudorandom_signal"]], "pulse_signal() (timehistoryarray class method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.pulse_signal"]], "random_signal() (timehistoryarray class method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.random_signal"]], "remove_rigid_body_motion() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.remove_rigid_body_motion"]], "rms() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.rms"]], "shift_signal() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.shift_signal"]], "sine_signal() (timehistoryarray class method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.sine_signal"]], "split_into_frames() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.split_into_frames"]], "srs() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.srs"]], "stft() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.stft"]], "to_rattlesnake_specification() (timehistoryarray method)": [[34, "sdynpy.core.sdynpy_data.TimeHistoryArray.to_rattlesnake_specification"]], "transferfunctionarray (class in sdynpy.core.sdynpy_data)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray"]], "__init__() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.__init__"]], "compute_cmif() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.compute_cmif"]], "compute_mif() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.compute_mif"]], "compute_mmif() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.compute_mmif"]], "compute_nmif() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.compute_nmif"]], "delay_response() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.delay_response"]], "enforce_causality() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.enforce_causality"]], "from_time_data() (transferfunctionarray static method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.from_time_data"]], "function_type (transferfunctionarray property)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.function_type"]], "ifft() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.ifft"]], "interpolate_by_zero_pad() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.interpolate_by_zero_pad"]], "plot() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.plot"]], "plot_cond_num() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.plot_cond_num"]], "plot_singular_values() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.plot_singular_values"]], "substructure_by_constraint_matrix() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.substructure_by_constraint_matrix"]], "substructure_by_coordinate() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.substructure_by_coordinate"]], "svd() (transferfunctionarray method)": [[35, "sdynpy.core.sdynpy_data.TransferFunctionArray.svd"]], "transmissibilityarray (class in sdynpy.core.sdynpy_data)": [[36, "sdynpy.core.sdynpy_data.TransmissibilityArray"]], "__init__() (transmissibilityarray method)": [[36, "sdynpy.core.sdynpy_data.TransmissibilityArray.__init__"]], "function_type (transmissibilityarray property)": [[36, "sdynpy.core.sdynpy_data.TransmissibilityArray.function_type"]], "rotation (typequal attribute)": [[37, "sdynpy.core.sdynpy_data.TypeQual.ROTATION"]], "translation (typequal attribute)": [[37, "sdynpy.core.sdynpy_data.TypeQual.TRANSLATION"]], "typequal (class in sdynpy.core.sdynpy_data)": [[37, "sdynpy.core.sdynpy_data.TypeQual"]], "__init__() (typequal method)": [[37, "sdynpy.core.sdynpy_data.TypeQual.__init__"]], "data_array() (in module sdynpy.core.sdynpy_data)": [[38, "sdynpy.core.sdynpy_data.data_array"]], "decayed_sine_table() (in module sdynpy.core.sdynpy_data)": [[39, "sdynpy.core.sdynpy_data.decayed_sine_table"]], "frf_from_time_data() (in module sdynpy.core.sdynpy_data)": [[40, "sdynpy.core.sdynpy_data.frf_from_time_data"]], "from_imat_struct() (in module sdynpy.core.sdynpy_data)": [[41, "sdynpy.core.sdynpy_data.from_imat_struct"]], "from_uff() (in module sdynpy.core.sdynpy_data)": [[42, "sdynpy.core.sdynpy_data.from_uff"]], "from_unv() (in module sdynpy.core.sdynpy_data)": [[43, "sdynpy.core.sdynpy_data.from_unv"]], "join() (in module sdynpy.core.sdynpy_data)": [[44, "sdynpy.core.sdynpy_data.join"]], "load() (in module sdynpy.core.sdynpy_data)": [[45, "sdynpy.core.sdynpy_data.load"]], "sdynpy.core.sdynpy_geometry": [[46, "module-sdynpy.core.sdynpy_geometry"]], "coordinatesystemarray (class in sdynpy.core.sdynpy_geometry)": [[47, "sdynpy.core.sdynpy_geometry.CoordinateSystemArray"]], "__init__() (coordinatesystemarray method)": [[47, "sdynpy.core.sdynpy_geometry.CoordinateSystemArray.__init__"]], "data_dtype (coordinatesystemarray attribute)": [[47, "sdynpy.core.sdynpy_geometry.CoordinateSystemArray.data_dtype"]], "from_unv() (coordinatesystemarray static method)": [[47, "sdynpy.core.sdynpy_geometry.CoordinateSystemArray.from_unv"]], "deflectionshapeplotter (class in sdynpy.core.sdynpy_geometry)": [[48, "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter"]], "__init__() (deflectionshapeplotter method)": [[48, "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter.__init__"]], "modify_abscissa() (deflectionshapeplotter method)": [[48, "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter.modify_abscissa"]], "save_multiline_animation() (deflectionshapeplotter method)": [[48, "sdynpy.core.sdynpy_geometry.DeflectionShapePlotter.save_multiline_animation"]], "elementarray (class in sdynpy.core.sdynpy_geometry)": [[49, "sdynpy.core.sdynpy_geometry.ElementArray"]], "__init__() (elementarray method)": [[49, "sdynpy.core.sdynpy_geometry.ElementArray.__init__"]], "data_dtype (elementarray attribute)": [[49, "sdynpy.core.sdynpy_geometry.ElementArray.data_dtype"]], "from_unv() (elementarray static method)": [[49, "sdynpy.core.sdynpy_geometry.ElementArray.from_unv"]], "reduce() (elementarray method)": [[49, "sdynpy.core.sdynpy_geometry.ElementArray.reduce"]], "geometry (class in sdynpy.core.sdynpy_geometry)": [[50, "sdynpy.core.sdynpy_geometry.Geometry"]], "__init__() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.__init__"]], "add_element() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.add_element"]], "add_traceline() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.add_traceline"]], "camera_visualization() (geometry class method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.camera_visualization"]], "compress_ids() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.compress_ids"]], "copy() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.copy"]], "from_exodus() (geometry class method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.from_exodus"]], "from_imat_struct() (geometry class method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.from_imat_struct"]], "from_uff() (geometry class method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.from_uff"]], "from_unv() (geometry class method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.from_unv"]], "global_deflection() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.global_deflection"]], "global_node_coordinate() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.global_node_coordinate"]], "load() (geometry class method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.load"]], "map_ids() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.map_ids"]], "modify_ids() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.modify_ids"]], "node_by_global_position() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.node_by_global_position"]], "overlay_geometries() (geometry static method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.overlay_geometries"]], "plot() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.plot"]], "plot_coordinate() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.plot_coordinate"]], "plot_deflection_shape() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.plot_deflection_shape"]], "plot_shape() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.plot_shape"]], "plot_transient() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.plot_transient"]], "reduce() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.reduce"]], "rigid_body_shapes() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.rigid_body_shapes"]], "save() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.save"]], "write_to_unv() (geometry method)": [[50, "sdynpy.core.sdynpy_geometry.Geometry.write_to_unv"]], "geometryplotter (class in sdynpy.core.sdynpy_geometry)": [[51, "sdynpy.core.sdynpy_geometry.GeometryPlotter"]], "__init__() (geometryplotter method)": [[51, "sdynpy.core.sdynpy_geometry.GeometryPlotter.__init__"]], "save_rotation_animation() (geometryplotter method)": [[51, "sdynpy.core.sdynpy_geometry.GeometryPlotter.save_rotation_animation"]], "nodearray (class in sdynpy.core.sdynpy_geometry)": [[52, "sdynpy.core.sdynpy_geometry.NodeArray"]], "__init__() (nodearray method)": [[52, "sdynpy.core.sdynpy_geometry.NodeArray.__init__"]], "by_grid() (nodearray method)": [[52, "sdynpy.core.sdynpy_geometry.NodeArray.by_grid"]], "by_position() (nodearray method)": [[52, "sdynpy.core.sdynpy_geometry.NodeArray.by_position"]], "data_dtype (nodearray attribute)": [[52, "sdynpy.core.sdynpy_geometry.NodeArray.data_dtype"]], "from_unv() (nodearray static method)": [[52, "sdynpy.core.sdynpy_geometry.NodeArray.from_unv"]], "global_coordinate() (nodearray method)": [[52, "sdynpy.core.sdynpy_geometry.NodeArray.global_coordinate"]], "project_to_minimum_plane() (nodearray static method)": [[52, "sdynpy.core.sdynpy_geometry.NodeArray.project_to_minimum_plane"]], "reduce() (nodearray method)": [[52, "sdynpy.core.sdynpy_geometry.NodeArray.reduce"]], "triangulate() (nodearray method)": [[52, "sdynpy.core.sdynpy_geometry.NodeArray.triangulate"]], "shapeplotter (class in sdynpy.core.sdynpy_geometry)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter"]], "__init__() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.__init__"]], "add_menu_bar() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.add_menu_bar"]], "add_toolbars() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.add_toolbars"]], "compute_displacements() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.compute_displacements"]], "next_shape() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.next_shape"]], "play_animation() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.play_animation"]], "prev_shape() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.prev_shape"]], "save_animation() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.save_animation"]], "save_animation_all_shapes() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.save_animation_all_shapes"]], "save_animation_from_action() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.save_animation_from_action"]], "select_complex() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_complex"]], "select_loop() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_loop"]], "select_scaling_0p25() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_0p25"]], "select_scaling_0p5() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_0p5"]], "select_scaling_0p8() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_0p8"]], "select_scaling_1() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_1"]], "select_scaling_1p25() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_1p25"]], "select_scaling_2p0() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_2p0"]], "select_scaling_4p0() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_scaling_4p0"]], "select_shape() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_shape"]], "select_speed_0p8() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_speed_0p8"]], "select_speed_1() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_speed_1"]], "select_speed_1p25() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.select_speed_1p25"]], "show_comment() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.show_comment"]], "stop_animation() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.stop_animation"]], "toggle_undeformed() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.toggle_undeformed"]], "update_shape() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.update_shape"]], "update_shape_mode() (shapeplotter method)": [[53, "sdynpy.core.sdynpy_geometry.ShapePlotter.update_shape_mode"]], "tracelinearray (class in sdynpy.core.sdynpy_geometry)": [[54, "sdynpy.core.sdynpy_geometry.TracelineArray"]], "__init__() (tracelinearray method)": [[54, "sdynpy.core.sdynpy_geometry.TracelineArray.__init__"]], "data_dtype (tracelinearray attribute)": [[54, "sdynpy.core.sdynpy_geometry.TracelineArray.data_dtype"]], "from_unv() (tracelinearray static method)": [[54, "sdynpy.core.sdynpy_geometry.TracelineArray.from_unv"]], "reduce() (tracelinearray method)": [[54, "sdynpy.core.sdynpy_geometry.TracelineArray.reduce"]], "transientplotter (class in sdynpy.core.sdynpy_geometry)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter"]], "__init__() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.__init__"]], "add_menu_bar() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.add_menu_bar"]], "add_toolbars() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.add_toolbars"]], "go_to_first_step() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.go_to_first_step"]], "go_to_last_step() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.go_to_last_step"]], "go_to_next_step() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.go_to_next_step"]], "go_to_previous_step() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.go_to_previous_step"]], "modify_abscissa() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.modify_abscissa"]], "play_animation() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.play_animation"]], "play_animation_reverse() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.play_animation_reverse"]], "save_animation() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.save_animation"]], "select_scaling_0p25() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_0p25"]], "select_scaling_0p5() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_0p5"]], "select_scaling_0p8() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_0p8"]], "select_scaling_1() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_1"]], "select_scaling_1p25() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_1p25"]], "select_scaling_2p0() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_2p0"]], "select_scaling_4p0() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_scaling_4p0"]], "select_speed_0p8() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_speed_0p8"]], "select_speed_1() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_speed_1"]], "select_speed_1p25() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.select_speed_1p25"]], "stop_animation() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.stop_animation"]], "update_abscissa() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.update_abscissa"]], "update_abscissa_reverse() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.update_abscissa_reverse"]], "update_displacement() (transientplotter method)": [[55, "sdynpy.core.sdynpy_geometry.TransientPlotter.update_displacement"]], "coordinate_system_array() (in module sdynpy.core.sdynpy_geometry)": [[56, "sdynpy.core.sdynpy_geometry.coordinate_system_array"]], "element_array() (in module sdynpy.core.sdynpy_geometry)": [[57, "sdynpy.core.sdynpy_geometry.element_array"]], "from_exodus() (in module sdynpy.core.sdynpy_geometry)": [[58, "sdynpy.core.sdynpy_geometry.from_exodus"]], "from_imat_struct() (in module sdynpy.core.sdynpy_geometry)": [[59, "sdynpy.core.sdynpy_geometry.from_imat_struct"]], "from_uff() (in module sdynpy.core.sdynpy_geometry)": [[60, "sdynpy.core.sdynpy_geometry.from_uff"]], "from_unv() (in module sdynpy.core.sdynpy_geometry)": [[61, "sdynpy.core.sdynpy_geometry.from_unv"]], "global_coord() (in module sdynpy.core.sdynpy_geometry)": [[62, "sdynpy.core.sdynpy_geometry.global_coord"]], "global_deflection() (in module sdynpy.core.sdynpy_geometry)": [[63, "sdynpy.core.sdynpy_geometry.global_deflection"]], "__init__() (id_map method)": [[64, "sdynpy.core.sdynpy_geometry.id_map.__init__"]], "id_map (class in sdynpy.core.sdynpy_geometry)": [[64, "sdynpy.core.sdynpy_geometry.id_map"]], "load() (in module sdynpy.core.sdynpy_geometry)": [[65, "sdynpy.core.sdynpy_geometry.load"]], "local_coord() (in module sdynpy.core.sdynpy_geometry)": [[66, "sdynpy.core.sdynpy_geometry.local_coord"]], "node_array() (in module sdynpy.core.sdynpy_geometry)": [[67, "sdynpy.core.sdynpy_geometry.node_array"]], "split_list() (in module sdynpy.core.sdynpy_geometry)": [[68, "sdynpy.core.sdynpy_geometry.split_list"]], "traceline_array() (in module sdynpy.core.sdynpy_geometry)": [[69, "sdynpy.core.sdynpy_geometry.traceline_array"]], "sdynpy.core.sdynpy_matrix": [[70, "module-sdynpy.core.sdynpy_matrix"]], "matrix (class in sdynpy.core.sdynpy_matrix)": [[71, "sdynpy.core.sdynpy_matrix.Matrix"]], "__init__() (matrix method)": [[71, "sdynpy.core.sdynpy_matrix.Matrix.__init__"]], "argsort_coordinate() (matrix method)": [[71, "sdynpy.core.sdynpy_matrix.Matrix.argsort_coordinate"]], "coordinate (matrix property)": [[71, "sdynpy.core.sdynpy_matrix.Matrix.coordinate"]], "data_dtype() (matrix static method)": [[71, "sdynpy.core.sdynpy_matrix.Matrix.data_dtype"]], "eye() (matrix class method)": [[71, "sdynpy.core.sdynpy_matrix.Matrix.eye"]], "num_coordinate_columns (matrix property)": [[71, "sdynpy.core.sdynpy_matrix.Matrix.num_coordinate_columns"]], "num_coordinate_rows (matrix property)": [[71, "sdynpy.core.sdynpy_matrix.Matrix.num_coordinate_rows"]], "plot() (matrix method)": [[71, "sdynpy.core.sdynpy_matrix.Matrix.plot"]], "sort_coordinate() (matrix method)": [[71, "sdynpy.core.sdynpy_matrix.Matrix.sort_coordinate"]], "matrix() (in module sdynpy.core.sdynpy_matrix)": [[72, "sdynpy.core.sdynpy_matrix.matrix"]], "sdynpy.core.sdynpy_shape": [[73, "module-sdynpy.core.sdynpy_shape"]], "shapearray (class in sdynpy.core.sdynpy_shape)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray"]], "__init__() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.__init__"]], "complex_data_dtype() (shapearray static method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.complex_data_dtype"]], "compute_frf() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.compute_frf"]], "concatenate_dofs() (shapearray static method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.concatenate_dofs"]], "expand() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.expand"]], "from_exodus() (shapearray class method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.from_exodus"]], "from_imat_struct() (shapearray class method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.from_imat_struct"]], "from_uff() (shapearray static method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.from_uff"]], "from_unv() (shapearray static method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.from_unv"]], "is_complex() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.is_complex"]], "mode_table() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.mode_table"]], "modeshape (shapearray property)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.modeshape"]], "ndof (shapearray property)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.ndof"]], "optimize_degrees_of_freedom() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.optimize_degrees_of_freedom"]], "overlay_shapes() (shapearray static method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.overlay_shapes"]], "plot_frequency() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.plot_frequency"]], "real_data_dtype() (shapearray static method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.real_data_dtype"]], "reduce() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.reduce"]], "reduce_for_comparison() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.reduce_for_comparison"]], "repack() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.repack"]], "shape_alignment() (shapearray static method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.shape_alignment"]], "system() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.system"]], "time_integrate() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.time_integrate"]], "to_real() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.to_real"]], "transform_coordinate_system() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.transform_coordinate_system"]], "write_to_unv() (shapearray method)": [[74, "sdynpy.core.sdynpy_shape.ShapeArray.write_to_unv"]], "concatenate_dofs() (in module sdynpy.core.sdynpy_shape)": [[75, "sdynpy.core.sdynpy_shape.concatenate_dofs"]], "from_exodus() (in module sdynpy.core.sdynpy_shape)": [[76, "sdynpy.core.sdynpy_shape.from_exodus"]], "from_imat_struct() (in module sdynpy.core.sdynpy_shape)": [[77, "sdynpy.core.sdynpy_shape.from_imat_struct"]], "from_unv() (in module sdynpy.core.sdynpy_shape)": [[78, "sdynpy.core.sdynpy_shape.from_unv"]], "mac() (in module sdynpy.core.sdynpy_shape)": [[79, "sdynpy.core.sdynpy_shape.mac"]], "overlay_shapes() (in module sdynpy.core.sdynpy_shape)": [[80, "sdynpy.core.sdynpy_shape.overlay_shapes"]], "rigid_body_check() (in module sdynpy.core.sdynpy_shape)": [[81, "sdynpy.core.sdynpy_shape.rigid_body_check"]], "rigid_body_error() (in module sdynpy.core.sdynpy_shape)": [[82, "sdynpy.core.sdynpy_shape.rigid_body_error"]], "rigid_body_fix_node_orientation() (in module sdynpy.core.sdynpy_shape)": [[83, "sdynpy.core.sdynpy_shape.rigid_body_fix_node_orientation"]], "shape_alignment() (in module sdynpy.core.sdynpy_shape)": [[84, "sdynpy.core.sdynpy_shape.shape_alignment"]], "shape_array() (in module sdynpy.core.sdynpy_shape)": [[85, "sdynpy.core.sdynpy_shape.shape_array"]], "shape_comparison_table() (in module sdynpy.core.sdynpy_shape)": [[86, "sdynpy.core.sdynpy_shape.shape_comparison_table"]], "sdynpy.core.sdynpy_system": [[87, "module-sdynpy.core.sdynpy_system"]], "c (system property)": [[88, "sdynpy.core.sdynpy_system.System.C"]], "k (system property)": [[88, "sdynpy.core.sdynpy_system.System.K"]], "m (system property)": [[88, "sdynpy.core.sdynpy_system.System.M"]], "system (class in sdynpy.core.sdynpy_system)": [[88, "sdynpy.core.sdynpy_system.System"]], "__init__() (system method)": [[88, "sdynpy.core.sdynpy_system.System.__init__"]], "assign_modal_damping() (system method)": [[88, "sdynpy.core.sdynpy_system.System.assign_modal_damping"]], "beam() (system class method)": [[88, "sdynpy.core.sdynpy_system.System.beam"]], "concatenate() (system class method)": [[88, "sdynpy.core.sdynpy_system.System.concatenate"]], "constrain() (system method)": [[88, "sdynpy.core.sdynpy_system.System.constrain"]], "coordinate (system property)": [[88, "sdynpy.core.sdynpy_system.System.coordinate"]], "copy() (system method)": [[88, "sdynpy.core.sdynpy_system.System.copy"]], "damping (system property)": [[88, "sdynpy.core.sdynpy_system.System.damping"]], "eigensolution() (system method)": [[88, "sdynpy.core.sdynpy_system.System.eigensolution"]], "frequency_response() (system method)": [[88, "sdynpy.core.sdynpy_system.System.frequency_response"]], "from_exodus_superelement() (system class method)": [[88, "sdynpy.core.sdynpy_system.System.from_exodus_superelement"]], "get_indices_by_coordinate() (system method)": [[88, "sdynpy.core.sdynpy_system.System.get_indices_by_coordinate"]], "load() (system class method)": [[88, "sdynpy.core.sdynpy_system.System.load"]], "mass (system property)": [[88, "sdynpy.core.sdynpy_system.System.mass"]], "ndof (system property)": [[88, "sdynpy.core.sdynpy_system.System.ndof"]], "ndof_transformed (system property)": [[88, "sdynpy.core.sdynpy_system.System.ndof_transformed"]], "reduce() (system method)": [[88, "sdynpy.core.sdynpy_system.System.reduce"]], "reduce_craig_bampton() (system method)": [[88, "sdynpy.core.sdynpy_system.System.reduce_craig_bampton"]], "reduce_dynamic() (system method)": [[88, "sdynpy.core.sdynpy_system.System.reduce_dynamic"]], "reduce_guyan() (system method)": [[88, "sdynpy.core.sdynpy_system.System.reduce_guyan"]], "save() (system method)": [[88, "sdynpy.core.sdynpy_system.System.save"]], "set_proportional_damping() (system method)": [[88, "sdynpy.core.sdynpy_system.System.set_proportional_damping"]], "simulate_test() (system method)": [[88, "sdynpy.core.sdynpy_system.System.simulate_test"]], "spy() (system method)": [[88, "sdynpy.core.sdynpy_system.System.spy"]], "stiffness (system property)": [[88, "sdynpy.core.sdynpy_system.System.stiffness"]], "substructure_by_coordinate() (system method)": [[88, "sdynpy.core.sdynpy_system.System.substructure_by_coordinate"]], "substructure_by_position() (system class method)": [[88, "sdynpy.core.sdynpy_system.System.substructure_by_position"]], "substructure_by_shape() (system method)": [[88, "sdynpy.core.sdynpy_system.System.substructure_by_shape"]], "time_integrate() (system method)": [[88, "sdynpy.core.sdynpy_system.System.time_integrate"]], "to_state_space() (system method)": [[88, "sdynpy.core.sdynpy_system.System.to_state_space"]], "transformation (system property)": [[88, "sdynpy.core.sdynpy_system.System.transformation"]], "transformation_matrix_at_coordinates() (system method)": [[88, "sdynpy.core.sdynpy_system.System.transformation_matrix_at_coordinates"]], "transformation_shapes() (system method)": [[88, "sdynpy.core.sdynpy_system.System.transformation_shapes"]], "substructure_by_position() (in module sdynpy.core.sdynpy_system)": [[89, "sdynpy.core.sdynpy_system.substructure_by_position"]], "sdynpy.demo": [[90, "module-sdynpy.demo"]], "sdynpy.demo.beam_airplane": [[91, "module-sdynpy.demo.beam_airplane"]], "create_models() (in module sdynpy.demo.beam_airplane)": [[92, "sdynpy.demo.beam_airplane.create_models"]], "sdynpy.demo.beam_plate": [[93, "module-sdynpy.demo.beam_plate"]], "create_models() (in module sdynpy.demo.beam_plate)": [[94, "sdynpy.demo.beam_plate.create_models"]], "sdynpy.doc": [[95, "module-sdynpy.doc"]], "sdynpy.doc.sdynpy_latex": [[96, "module-sdynpy.doc.sdynpy_latex"]], "create_latex_summary() (in module sdynpy.doc.sdynpy_latex)": [[97, "sdynpy.doc.sdynpy_latex.create_latex_summary"]], "sdynpy.doc.sdynpy_ppt": [[98, "module-sdynpy.doc.sdynpy_ppt"]], "add_geometry_overview_slide() (in module sdynpy.doc.sdynpy_ppt)": [[99, "sdynpy.doc.sdynpy_ppt.add_geometry_overview_slide"]], "add_section_header_slide() (in module sdynpy.doc.sdynpy_ppt)": [[100, "sdynpy.doc.sdynpy_ppt.add_section_header_slide"]], "add_shape_animation_slides() (in module sdynpy.doc.sdynpy_ppt)": [[101, "sdynpy.doc.sdynpy_ppt.add_shape_animation_slides"]], "add_shape_comparison_animation_slides() (in module sdynpy.doc.sdynpy_ppt)": [[102, "sdynpy.doc.sdynpy_ppt.add_shape_comparison_animation_slides"]], "add_shape_comparison_overview_slide() (in module sdynpy.doc.sdynpy_ppt)": [[103, "sdynpy.doc.sdynpy_ppt.add_shape_comparison_overview_slide"]], "add_shape_overview_slide() (in module sdynpy.doc.sdynpy_ppt)": [[104, "sdynpy.doc.sdynpy_ppt.add_shape_overview_slide"]], "add_title_slide() (in module sdynpy.doc.sdynpy_ppt)": [[105, "sdynpy.doc.sdynpy_ppt.add_title_slide"]], "create_summary_pptx() (in module sdynpy.doc.sdynpy_ppt)": [[106, "sdynpy.doc.sdynpy_ppt.create_summary_pptx"]], "position_placeholder() (in module sdynpy.doc.sdynpy_ppt)": [[107, "sdynpy.doc.sdynpy_ppt.position_placeholder"]], "sdynpy.fem": [[108, "module-sdynpy.fem"]], "sdynpy.fem.sdynpy_beam": [[109, "module-sdynpy.fem.sdynpy_beam"]], "beamkm() (in module sdynpy.fem.sdynpy_beam)": [[110, "sdynpy.fem.sdynpy_beam.beamkm"]], "beamkm_2d() (in module sdynpy.fem.sdynpy_beam)": [[111, "sdynpy.fem.sdynpy_beam.beamkm_2d"]], "rect_beam_props() (in module sdynpy.fem.sdynpy_beam)": [[112, "sdynpy.fem.sdynpy_beam.rect_beam_props"]], "sdynpy.fem.sdynpy_dof": [[113, "module-sdynpy.fem.sdynpy_dof"]], "by_condition_number() (in module sdynpy.fem.sdynpy_dof)": [[114, "sdynpy.fem.sdynpy_dof.by_condition_number"]], "by_effective_independence() (in module sdynpy.fem.sdynpy_dof)": [[115, "sdynpy.fem.sdynpy_dof.by_effective_independence"]], "sdynpy.fem.sdynpy_exodus": [[116, "module-sdynpy.fem.sdynpy_exodus"]], "exodus (class in sdynpy.fem.sdynpy_exodus)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus"]], "__init__() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.__init__"]], "close() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.close"]], "extract_sharp_edges() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.extract_sharp_edges"]], "get_block_surface() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_block_surface"]], "get_coord() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_coord"]], "get_coord_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_coord_names"]], "get_coords() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_coords"]], "get_displacements() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_displacements"]], "get_elem_attr() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_attr"]], "get_elem_blk_ids() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_blk_ids"]], "get_elem_blk_info() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_blk_info"]], "get_elem_connectivity() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_connectivity"]], "get_elem_num_map() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_num_map"]], "get_elem_type() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_type"]], "get_elem_variable_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_variable_names"]], "get_elem_variable_table() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_variable_table"]], "get_elem_variable_value() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_variable_value"]], "get_elem_variable_values() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_elem_variable_values"]], "get_element_property_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_element_property_names"]], "get_element_property_value() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_element_property_value"]], "get_global_variable_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_global_variable_names"]], "get_global_variable_values() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_global_variable_values"]], "get_info_records() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_info_records"]], "get_node_num_map() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_num_map"]], "get_node_set_dist_factors() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_set_dist_factors"]], "get_node_set_ids() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_set_ids"]], "get_node_set_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_set_names"]], "get_node_set_nodes() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_set_nodes"]], "get_node_set_num_nodes() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_set_num_nodes"]], "get_node_variable_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_variable_names"]], "get_node_variable_value() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_variable_value"]], "get_node_variable_values() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_node_variable_values"]], "get_qa_records() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_qa_records"]], "get_side_set_dist_factors() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_dist_factors"]], "get_side_set_faces() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_faces"]], "get_side_set_ids() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_ids"]], "get_side_set_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_names"]], "get_side_set_node_list() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_node_list"]], "get_side_set_num_faces() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_side_set_num_faces"]], "get_times() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.get_times"]], "load_into_memory() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.load_into_memory"]], "num_attr() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_attr"]], "num_blks (exodus property)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_blks"]], "num_dimensions (exodus property)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_dimensions"]], "num_elem_variables (exodus property)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_elem_variables"]], "num_elems (exodus property)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_elems"]], "num_elems_in_blk() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_elems_in_blk"]], "num_global_variables (exodus property)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_global_variables"]], "num_node_sets (exodus property)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_node_sets"]], "num_node_variables (exodus property)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_node_variables"]], "num_nodes (exodus property)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_nodes"]], "num_nodes_per_elem() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_nodes_per_elem"]], "num_side_sets (exodus property)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_side_sets"]], "num_times (exodus property)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.num_times"]], "put_coord_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_coord_names"]], "put_coords() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_coords"]], "put_elem_blk_ids() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_elem_blk_ids"]], "put_elem_blk_info() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_elem_blk_info"]], "put_elem_num_map() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_elem_num_map"]], "put_elem_variable_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_elem_variable_names"]], "put_element_property_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_element_property_names"]], "put_element_property_value() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_element_property_value"]], "put_global_variable_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_global_variable_names"]], "put_info_records() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_info_records"]], "put_node_num_map() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_node_num_map"]], "put_node_set_ids() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_node_set_ids"]], "put_node_set_info() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_node_set_info"]], "put_node_set_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_node_set_names"]], "put_node_variable_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_node_variable_names"]], "put_qa_records() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_qa_records"]], "put_side_set_ids() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_side_set_ids"]], "put_side_set_info() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_side_set_info"]], "put_side_set_names() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.put_side_set_names"]], "reduce_to_surfaces() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.reduce_to_surfaces"]], "set_elem_attr() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.set_elem_attr"]], "set_elem_connectivity() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.set_elem_connectivity"]], "set_elem_variable_value() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.set_elem_variable_value"]], "set_elem_variable_values() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.set_elem_variable_values"]], "set_global_variable_values() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.set_global_variable_values"]], "set_node_variable_value() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.set_node_variable_value"]], "set_node_variable_values() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.set_node_variable_values"]], "set_time() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.set_time"]], "set_times() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.set_times"]], "title (exodus property)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.title"]], "triangulate_surface_mesh() (exodus method)": [[117, "sdynpy.fem.sdynpy_exodus.Exodus.triangulate_surface_mesh"]], "exoduserror": [[118, "sdynpy.fem.sdynpy_exodus.ExodusError"]], "exodusinmemory (class in sdynpy.fem.sdynpy_exodus)": [[119, "sdynpy.fem.sdynpy_exodus.ExodusInMemory"]], "__init__() (exodusinmemory method)": [[119, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.__init__"]], "from_sdynpy() (exodusinmemory static method)": [[119, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.from_sdynpy"]], "get_block_surface() (exodusinmemory method)": [[119, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.get_block_surface"]], "load_from_exodus() (exodusinmemory method)": [[119, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.load_from_exodus"]], "repack() (exodusinmemory method)": [[119, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.repack"]], "triangulate_surface_mesh() (exodusinmemory method)": [[119, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.triangulate_surface_mesh"]], "write_to_file() (exodusinmemory method)": [[119, "sdynpy.fem.sdynpy_exodus.ExodusInMemory.write_to_file"]], "extract_sharp_edges() (in module sdynpy.fem.sdynpy_exodus)": [[120, "sdynpy.fem.sdynpy_exodus.extract_sharp_edges"]], "face_connectivity() (in module sdynpy.fem.sdynpy_exodus)": [[121, "sdynpy.fem.sdynpy_exodus.face_connectivity"]], "mesh_triangulation_array() (in module sdynpy.fem.sdynpy_exodus)": [[122, "sdynpy.fem.sdynpy_exodus.mesh_triangulation_array"]], "reduce_exodus_to_surfaces() (in module sdynpy.fem.sdynpy_exodus)": [[123, "sdynpy.fem.sdynpy_exodus.reduce_exodus_to_surfaces"]], "__init__() (subfield method)": [[124, "sdynpy.fem.sdynpy_exodus.subfield.__init__"]], "subfield (class in sdynpy.fem.sdynpy_exodus)": [[124, "sdynpy.fem.sdynpy_exodus.subfield"]], "sdynpy.fem.sdynpy_shaker": [[125, "module-sdynpy.fem.sdynpy_shaker"]], "mck() (shaker4dof method)": [[126, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.MCK"]], "shaker4dof (class in sdynpy.fem.sdynpy_shaker)": [[126, "sdynpy.fem.sdynpy_shaker.Shaker4DoF"]], "__init__() (shaker4dof method)": [[126, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.__init__"]], "modal_shop_100lbf() (shaker4dof class method)": [[126, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.modal_shop_100lbf"]], "plot_electrical_impedance() (shaker4dof method)": [[126, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.plot_electrical_impedance"]], "state_space() (shaker4dof method)": [[126, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.state_space"]], "transfer_function() (shaker4dof method)": [[126, "sdynpy.fem.sdynpy_shaker.Shaker4DoF.transfer_function"]], "sdynpy.fileio": [[127, "module-sdynpy.fileio"]], "sdynpy.fileio.sdynpy_rattlesnake": [[128, "module-sdynpy.fileio.sdynpy_rattlesnake"]], "create_synthetic_test() (in module sdynpy.fileio.sdynpy_rattlesnake)": [[129, "sdynpy.fileio.sdynpy_rattlesnake.create_synthetic_test"]], "read_modal_data() (in module sdynpy.fileio.sdynpy_rattlesnake)": [[130, "sdynpy.fileio.sdynpy_rattlesnake.read_modal_data"]], "read_random_spectral_data() (in module sdynpy.fileio.sdynpy_rattlesnake)": [[131, "sdynpy.fileio.sdynpy_rattlesnake.read_random_spectral_data"]], "read_rattlesnake_output() (in module sdynpy.fileio.sdynpy_rattlesnake)": [[132, "sdynpy.fileio.sdynpy_rattlesnake.read_rattlesnake_output"]], "read_system_id_data() (in module sdynpy.fileio.sdynpy_rattlesnake)": [[133, "sdynpy.fileio.sdynpy_rattlesnake.read_system_id_data"]], "read_transient_control_data() (in module sdynpy.fileio.sdynpy_rattlesnake)": [[134, "sdynpy.fileio.sdynpy_rattlesnake.read_transient_control_data"]], "sdynpy.fileio.sdynpy_tshaker": [[135, "module-sdynpy.fileio.sdynpy_tshaker"]], "read_mat_random() (in module sdynpy.fileio.sdynpy_tshaker)": [[136, "sdynpy.fileio.sdynpy_tshaker.read_mat_random"]], "read_mat_shock() (in module sdynpy.fileio.sdynpy_tshaker)": [[137, "sdynpy.fileio.sdynpy_tshaker.read_mat_shock"]], "read_mat_time_history() (in module sdynpy.fileio.sdynpy_tshaker)": [[138, "sdynpy.fileio.sdynpy_tshaker.read_mat_time_history"]], "read_tdms() (in module sdynpy.fileio.sdynpy_tshaker)": [[139, "sdynpy.fileio.sdynpy_tshaker.read_tdms"]], "sdynpy.fileio.sdynpy_uff": [[140, "module-sdynpy.fileio.sdynpy_uff"]], "uffreaderror": [[141, "sdynpy.fileio.sdynpy_uff.UFFReadError"]], "parse_uff_line() (in module sdynpy.fileio.sdynpy_uff)": [[142, "sdynpy.fileio.sdynpy_uff.parse_uff_line"]], "parse_uff_lines() (in module sdynpy.fileio.sdynpy_uff)": [[143, "sdynpy.fileio.sdynpy_uff.parse_uff_lines"]], "readuff() (in module sdynpy.fileio.sdynpy_uff)": [[144, "sdynpy.fileio.sdynpy_uff.readuff"]], "readunv() (in module sdynpy.fileio.sdynpy_uff)": [[145, "sdynpy.fileio.sdynpy_uff.readunv"]], "write_uff_line() (in module sdynpy.fileio.sdynpy_uff)": [[146, "sdynpy.fileio.sdynpy_uff.write_uff_line"]], "sdynpy.fileio.sdynpy_uff_datasets": [[147, "module-sdynpy.fileio.sdynpy_uff_datasets"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151": [[148, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151"]], "sdynpy_uff_dataset_151 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151)": [[149, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151"]], "__init__() (sdynpy_uff_dataset_151 method)": [[149, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151.__init__"]], "dataset_number (sdynpy_uff_dataset_151 property)": [[149, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_151 class method)": [[149, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_151 method)": [[149, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.Sdynpy_UFF_Dataset_151.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151)": [[150, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_151.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164": [[151, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164"]], "sdynpy_uff_dataset_164 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164)": [[152, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164"]], "__init__() (sdynpy_uff_dataset_164 method)": [[152, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164.__init__"]], "dataset_number (sdynpy_uff_dataset_164 property)": [[152, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_164 class method)": [[152, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_164 method)": [[152, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.Sdynpy_UFF_Dataset_164.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164)": [[153, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_164.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858": [[154, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858"]], "sdynpy_uff_dataset_1858 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858)": [[155, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858"]], "__init__() (sdynpy_uff_dataset_1858 method)": [[155, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858.__init__"]], "dataset_number (sdynpy_uff_dataset_1858 property)": [[155, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_1858 class method)": [[155, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_1858 method)": [[155, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.Sdynpy_UFF_Dataset_1858.write_string"]], "is_abscissa_even() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858)": [[156, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.is_abscissa_even"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858)": [[157, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_1858.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400": [[158, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400"]], "sdynpy_uff_dataset_2400 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400)": [[159, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400"]], "__init__() (sdynpy_uff_dataset_2400 method)": [[159, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400.__init__"]], "dataset_number (sdynpy_uff_dataset_2400 property)": [[159, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_2400 class method)": [[159, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_2400 method)": [[159, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.Sdynpy_UFF_Dataset_2400.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400)": [[160, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2400.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411": [[161, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411"]], "sdynpy_uff_dataset_2411 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411)": [[162, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411"]], "__init__() (sdynpy_uff_dataset_2411 method)": [[162, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411.__init__"]], "dataset_number (sdynpy_uff_dataset_2411 property)": [[162, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_2411 class method)": [[162, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_2411 method)": [[162, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.Sdynpy_UFF_Dataset_2411.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411)": [[163, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2411.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412": [[164, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412"]], "sdynpy_uff_dataset_2412 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412)": [[165, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412"]], "__init__() (sdynpy_uff_dataset_2412 method)": [[165, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412.__init__"]], "dataset_number (sdynpy_uff_dataset_2412 property)": [[165, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_2412 class method)": [[165, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_2412 method)": [[165, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.Sdynpy_UFF_Dataset_2412.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412)": [[166, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2412.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420": [[167, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420"]], "sdynpy_uff_dataset_2420 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420)": [[168, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420"]], "__init__() (sdynpy_uff_dataset_2420 method)": [[168, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420.__init__"]], "dataset_number (sdynpy_uff_dataset_2420 property)": [[168, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_2420 class method)": [[168, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_2420 method)": [[168, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.Sdynpy_UFF_Dataset_2420.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420)": [[169, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_2420.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55": [[170, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55"]], "sdynpy_uff_dataset_55 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55"]], "__init__() (sdynpy_uff_dataset_55 method)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.__init__"]], "buckling_eigenvalue (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.buckling_eigenvalue"]], "dataset_number (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.dataset_number"]], "frequency (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.frequency"]], "frequency_step_number (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.frequency_step_number"]], "from_uff_data_array() (sdynpy_uff_dataset_55 class method)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.from_uff_data_array"]], "id_number (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.id_number"]], "imaginary_eigenvalue (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.imaginary_eigenvalue"]], "imaginary_modal_a (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.imaginary_modal_a"]], "imaginary_modal_b (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.imaginary_modal_b"]], "load_case_number (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.load_case_number"]], "modal_hysteretic_damping (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.modal_hysteretic_damping"]], "modal_mass (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.modal_mass"]], "modal_viscous_damping (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.modal_viscous_damping"]], "mode_number (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.mode_number"]], "real_eigenvalue (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.real_eigenvalue"]], "real_modal_a (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.real_modal_a"]], "real_modal_b (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.real_modal_b"]], "time (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.time"]], "time_step_number (sdynpy_uff_dataset_55 property)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.time_step_number"]], "write_string() (sdynpy_uff_dataset_55 method)": [[171, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.Sdynpy_UFF_Dataset_55.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55)": [[172, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_55.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58": [[173, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58"]], "sdynpy_uff_dataset_58 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58)": [[174, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58"]], "__init__() (sdynpy_uff_dataset_58 method)": [[174, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58.__init__"]], "dataset_number (sdynpy_uff_dataset_58 property)": [[174, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_58 class method)": [[174, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_58 method)": [[174, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.Sdynpy_UFF_Dataset_58.write_string"]], "is_abscissa_even() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58)": [[175, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.is_abscissa_even"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58)": [[176, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_58.read"]], "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82": [[177, "module-sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82"]], "sdynpy_uff_dataset_82 (class in sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82)": [[178, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82"]], "__init__() (sdynpy_uff_dataset_82 method)": [[178, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82.__init__"]], "dataset_number (sdynpy_uff_dataset_82 property)": [[178, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82.dataset_number"]], "from_uff_data_array() (sdynpy_uff_dataset_82 class method)": [[178, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82.from_uff_data_array"]], "write_string() (sdynpy_uff_dataset_82 method)": [[178, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.Sdynpy_UFF_Dataset_82.write_string"]], "read() (in module sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82)": [[179, "sdynpy.fileio.sdynpy_uff_datasets.sdynpy_uff_dataset_82.read"]], "sdynpy.fileio.sdynpy_vic": [[180, "module-sdynpy.fileio.sdynpy_vic"]], "camera_matrix_from_vic_parameters() (in module sdynpy.fileio.sdynpy_vic)": [[181, "sdynpy.fileio.sdynpy_vic.camera_matrix_from_vic_parameters"]], "extract_vic_cal_parameters() (in module sdynpy.fileio.sdynpy_vic)": [[182, "sdynpy.fileio.sdynpy_vic.extract_vic_cal_parameters"]], "get_vic_camera_parameters() (in module sdynpy.fileio.sdynpy_vic)": [[183, "sdynpy.fileio.sdynpy_vic.get_vic_camera_parameters"]], "matrix_from_bryant_angles() (in module sdynpy.fileio.sdynpy_vic)": [[184, "sdynpy.fileio.sdynpy_vic.matrix_from_bryant_angles"]], "read_vic3d_mat_files() (in module sdynpy.fileio.sdynpy_vic)": [[185, "sdynpy.fileio.sdynpy_vic.read_vic3D_mat_files"]], "vic_angles_from_matrix() (in module sdynpy.fileio.sdynpy_vic)": [[186, "sdynpy.fileio.sdynpy_vic.vic_angles_from_matrix"]], "sdynpy.modal": [[187, "module-sdynpy.modal"]], "sdynpy.modal.sdynpy_ccmif": [[188, "module-sdynpy.modal.sdynpy_ccmif"]], "coloredcmif (class in sdynpy.modal.sdynpy_ccmif)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF"]], "__init__() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.__init__"]], "clear_plot() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.clear_plot"]], "clicked_point() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.clicked_point"]], "cluster_modes() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.cluster_modes"]], "collect_shapes() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.collect_shapes"]], "compute_and_plot_ccmif() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.compute_and_plot_ccmif"]], "compute_ccmif() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.compute_ccmif"]], "connect_callbacks() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.connect_callbacks"]], "disable_file() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.disable_file"]], "enable_file() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.enable_file"]], "enabled_selected_modes (coloredcmif property)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.enabled_selected_modes"]], "enabled_shape_array (coloredcmif property)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.enabled_shape_array"]], "export_figure() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.export_figure"]], "export_mode_table() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.export_mode_table"]], "load_file() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.load_file"]], "load_geometry() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.load_geometry"]], "load_progress() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.load_progress"]], "plot_ccmif() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.plot_ccmif"]], "plot_cmifs() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.plot_cmifs"]], "plot_frfs() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.plot_frfs"]], "plot_shapes() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.plot_shapes"]], "remove_file() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.remove_file"]], "replace_file() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.replace_file"]], "resynthesize() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.resynthesize"]], "save_progress() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.save_progress"]], "save_shapes() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.save_shapes"]], "set_mode_properties() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.set_mode_properties"]], "set_properties() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.set_properties"]], "toggle_auto_resynth() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.toggle_auto_resynth"]], "update_line_width() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.update_line_width"]], "update_selection() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.update_selection"]], "update_shape_list() (coloredcmif method)": [[189, "sdynpy.modal.sdynpy_ccmif.ColoredCMIF.update_shape_list"]], "propertiesdialog (class in sdynpy.modal.sdynpy_ccmif)": [[190, "sdynpy.modal.sdynpy_ccmif.PropertiesDialog"]], "__init__() (propertiesdialog method)": [[190, "sdynpy.modal.sdynpy_ccmif.PropertiesDialog.__init__"]], "show() (propertiesdialog static method)": [[190, "sdynpy.modal.sdynpy_ccmif.PropertiesDialog.show"]], "sdynpy.modal.sdynpy_modeshape": [[191, "module-sdynpy.modal.sdynpy_modeshape"]], "all (shapeselection attribute)": [[192, "sdynpy.modal.sdynpy_modeshape.ShapeSelection.ALL"]], "drive_point_coefficient (shapeselection attribute)": [[192, "sdynpy.modal.sdynpy_modeshape.ShapeSelection.DRIVE_POINT_COEFFICIENT"]], "participation_factor (shapeselection attribute)": [[192, "sdynpy.modal.sdynpy_modeshape.ShapeSelection.PARTICIPATION_FACTOR"]], "shapeselection (class in sdynpy.modal.sdynpy_modeshape)": [[192, "sdynpy.modal.sdynpy_modeshape.ShapeSelection"]], "__init__() (shapeselection method)": [[192, "sdynpy.modal.sdynpy_modeshape.ShapeSelection.__init__"]], "compute_residues() (in module sdynpy.modal.sdynpy_modeshape)": [[193, "sdynpy.modal.sdynpy_modeshape.compute_residues"]], "compute_shapes() (in module sdynpy.modal.sdynpy_modeshape)": [[194, "sdynpy.modal.sdynpy_modeshape.compute_shapes"]], "compute_shapes_multireference() (in module sdynpy.modal.sdynpy_modeshape)": [[195, "sdynpy.modal.sdynpy_modeshape.compute_shapes_multireference"]], "sdynpy.modal.sdynpy_polypy": [[196, "module-sdynpy.modal.sdynpy_polypy"]], "polypy (class in sdynpy.modal.sdynpy_polypy)": [[197, "sdynpy.modal.sdynpy_polypy.PolyPy"]], "__init__() (polypy method)": [[197, "sdynpy.modal.sdynpy_polypy.PolyPy.__init__"]], "analyze_pole_convergence() (polypy method)": [[197, "sdynpy.modal.sdynpy_polypy.PolyPy.analyze_pole_convergence"]], "angular_frequencies (polypy property)": [[197, "sdynpy.modal.sdynpy_polypy.PolyPy.angular_frequencies"]], "compute_poles() (polypy method)": [[197, "sdynpy.modal.sdynpy_polypy.PolyPy.compute_poles"]], "compute_shapes() (polypy method)": [[197, "sdynpy.modal.sdynpy_polypy.PolyPy.compute_shapes"]], "frequencies (polypy property)": [[197, "sdynpy.modal.sdynpy_polypy.PolyPy.frequencies"]], "frequency_spacing (polypy property)": [[197, "sdynpy.modal.sdynpy_polypy.PolyPy.frequency_spacing"]], "plot_stability() (polypy method)": [[197, "sdynpy.modal.sdynpy_polypy.PolyPy.plot_stability"]], "pole_list_from_indices() (polypy method)": [[197, "sdynpy.modal.sdynpy_polypy.PolyPy.pole_list_from_indices"]], "polypy_gui (class in sdynpy.modal.sdynpy_polypy)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI"]], "__init__() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.__init__"]], "compute_shapes() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.compute_shapes"]], "compute_stabilization() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.compute_stabilization"]], "connect_callbacks() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.connect_callbacks"]], "create_cmif_window() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.create_cmif_window"]], "create_frf_window() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.create_frf_window"]], "create_mmif_window() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.create_mmif_window"]], "create_nmif_window() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.create_nmif_window"]], "create_qmif_window() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.create_qmif_window"]], "export_fit_data() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.export_fit_data"]], "frequencies (polypy_gui property)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.frequencies"]], "frequency_slice (polypy_gui property)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.frequency_slice"]], "load_geometry() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.load_geometry"]], "max_frequency (polypy_gui property)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.max_frequency"]], "min_frequency (polypy_gui property)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.min_frequency"]], "plot_shapes() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.plot_shapes"]], "pole_selection_changed() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.pole_selection_changed"]], "save_shapes() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.save_shapes"]], "set_geometry() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.set_geometry"]], "show_line_selectors() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.show_line_selectors"]], "update_data_plot() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.update_data_plot"]], "update_frequency_from_region() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.update_frequency_from_region"]], "update_max_frequency() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.update_max_frequency"]], "update_min_frequency() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.update_min_frequency"]], "update_resynthesis() (polypy_gui method)": [[198, "sdynpy.modal.sdynpy_polypy.PolyPy_GUI.update_resynthesis"]], "polypy_stability (class in sdynpy.modal.sdynpy_polypy)": [[199, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability"]], "__init__() (polypy_stability method)": [[199, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.__init__"]], "connect_callbacks() (polypy_stability method)": [[199, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.connect_callbacks"]], "discard() (polypy_stability method)": [[199, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.discard"]], "mouseclicked() (polypy_stability method)": [[199, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.mouseClicked"]], "mousemoved() (polypy_stability method)": [[199, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.mouseMoved"]], "plot_poles() (polypy_stability method)": [[199, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.plot_poles"]], "update_stability_plot_views() (polypy_stability method)": [[199, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.update_stability_plot_views"]], "update_stabilization_plot() (polypy_stability method)": [[199, "sdynpy.modal.sdynpy_polypy.PolyPy_Stability.update_stabilization_plot"]], "sdynpy.modal.sdynpy_signal_processing_gui": [[200, "module-sdynpy.modal.sdynpy_signal_processing_gui"]], "signalprocessinggui (class in sdynpy.modal.sdynpy_signal_processing_gui)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI"]], "__init__() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.__init__"]], "acceptancechanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.acceptanceChanged"]], "analyzepolypy() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.analyzePolyPy"]], "analyzesmac() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.analyzeSMAC"]], "block_averaging_signals() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.block_averaging_signals"]], "block_data_range_signals() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.block_data_range_signals"]], "block_sampling_signals() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.block_sampling_signals"]], "compute() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.compute"]], "compute_triggers() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.compute_triggers"]], "connect_callbacks() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.connect_callbacks"]], "create_rois() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.create_rois"]], "endtimechanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.endTimeChanged"]], "framesizechanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.frameSizeChanged"]], "frametimechanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.frameTimeChanged"]], "frameschanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.framesChanged"]], "frequencylineschanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.frequencyLinesChanged"]], "frequencyspacingchanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.frequencySpacingChanged"]], "get_abscissa_index_range() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.get_abscissa_index_range"]], "hysteresischanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.hysteresisChanged"]], "initialize_ui() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.initialize_ui"]], "levelchanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.levelChanged"]], "loaddata() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.loadData"]], "loadgeometry() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.loadGeometry"]], "overlapchanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.overlapChanged"]], "overlapsampleschanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.overlapSamplesChanged"]], "plotdeflection() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.plotDeflection"]], "plottransient() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.plotTransient"]], "pretriggerchanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.pretriggerChanged"]], "referenceviewchanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.referenceViewChanged"]], "referenceschanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.referencesChanged"]], "reset_ui() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.reset_ui"]], "responseviewchanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.responseViewChanged"]], "responseschanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.responsesChanged"]], "saveautospectra() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.saveAutospectra"]], "savecoherence() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.saveCoherence"]], "savecrossspectra() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.saveCrossspectra"]], "savefrf() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.saveFRF"]], "savewindowedtimehistory() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.saveWindowedTimeHistory"]], "sendtoreference() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.sendToReference"]], "sendtoresponse() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.sendToResponse"]], "showautospectra() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.showAutospectra"]], "showcoherence() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.showCoherence"]], "showcrossspectra() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.showCrossspectra"]], "showfrf() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.showFRF"]], "showwindowedtimehistory() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.showWindowedTimeHistory"]], "starttimechanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.startTimeChanged"]], "toggleroi() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.toggleROI"]], "typechanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.typeChanged"]], "updatehysteresisfromreference() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateHysteresisFromReference"]], "updatehysteresisfromresponse() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateHysteresisFromResponse"]], "updatetimefromreference() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateTimeFromReference"]], "updatetimefromresponse() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateTimeFromResponse"]], "updatetriggerfromreference() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateTriggerFromReference"]], "updatetriggerfromresponse() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.updateTriggerFromResponse"]], "windowchanged() (signalprocessinggui method)": [[201, "sdynpy.modal.sdynpy_signal_processing_gui.SignalProcessingGUI.windowChanged"]], "sdynpy.modal.sdynpy_smac": [[202, "module-sdynpy.modal.sdynpy_smac"]], "addrootdialog (class in sdynpy.modal.sdynpy_smac)": [[203, "sdynpy.modal.sdynpy_smac.AddRootDialog"]], "__init__() (addrootdialog method)": [[203, "sdynpy.modal.sdynpy_smac.AddRootDialog.__init__"]], "add_root() (addrootdialog static method)": [[203, "sdynpy.modal.sdynpy_smac.AddRootDialog.add_root"]], "connect_callbacks() (addrootdialog method)": [[203, "sdynpy.modal.sdynpy_smac.AddRootDialog.connect_callbacks"]], "recompute_correlation() (addrootdialog method)": [[203, "sdynpy.modal.sdynpy_smac.AddRootDialog.recompute_correlation"]], "switch_log_plot() (addrootdialog method)": [[203, "sdynpy.modal.sdynpy_smac.AddRootDialog.switch_log_plot"]], "update_plot_range() (addrootdialog method)": [[203, "sdynpy.modal.sdynpy_smac.AddRootDialog.update_plot_range"]], "update_range_selectors() (addrootdialog method)": [[203, "sdynpy.modal.sdynpy_smac.AddRootDialog.update_range_selectors"]], "alternate (autofittypes attribute)": [[204, "sdynpy.modal.sdynpy_smac.AutoFitTypes.ALTERNATE"]], "autofittypes (class in sdynpy.modal.sdynpy_smac)": [[204, "sdynpy.modal.sdynpy_smac.AutoFitTypes"]], "paraboloid (autofittypes attribute)": [[204, "sdynpy.modal.sdynpy_smac.AutoFitTypes.PARABOLOID"]], "__init__() (autofittypes method)": [[204, "sdynpy.modal.sdynpy_smac.AutoFitTypes.__init__"]], "convergenceexception": [[205, "sdynpy.modal.sdynpy_smac.ConvergenceException"]], "smac (class in sdynpy.modal.sdynpy_smac)": [[206, "sdynpy.modal.sdynpy_smac.SMAC"]], "__init__() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.__init__"]], "angular_frequencies (smac property)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.angular_frequencies"]], "autofit_root_alternate() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.autofit_root_alternate"]], "autofit_root_paraboloid() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.autofit_root_paraboloid"]], "autofit_roots() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.autofit_roots"]], "compute_correlation_matrix() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.compute_correlation_matrix"]], "compute_initial_rootlist() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.compute_initial_rootlist"]], "compute_pseudoinverse() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.compute_pseudoinverse"]], "compute_residues() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.compute_residues"]], "compute_shapes() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.compute_shapes"]], "find_peaks() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.find_peaks"]], "fit_damping() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.fit_damping"]], "fit_frequency() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.fit_frequency"]], "fit_paraboloid() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.fit_paraboloid"]], "frequencies (smac property)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.frequencies"]], "frequency_spacing (smac property)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.frequency_spacing"]], "frf_sdof_complex() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.frf_sdof_complex"]], "frf_sdof_real() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.frf_sdof_real"]], "get_num_roots() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.get_num_roots"]], "reference_coordinates (smac property)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.reference_coordinates"]], "save() (smac method)": [[206, "sdynpy.modal.sdynpy_smac.SMAC.save"]], "smac_gui (class in sdynpy.modal.sdynpy_smac)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI"]], "__init__() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.__init__"]], "add_initial_root() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.add_initial_root"]], "add_root() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.add_root"]], "autofit_roots() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.autofit_roots"]], "compute_correlation_matrix() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.compute_correlation_matrix"]], "compute_pseudoinverse() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.compute_pseudoinverse"]], "compute_shapes() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.compute_shapes"]], "confirm_initial_roots_for_autofit() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.confirm_initial_roots_for_autofit"]], "connect_callbacks() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.connect_callbacks"]], "delete_initial_roots() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.delete_initial_roots"]], "delete_roots() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.delete_roots"]], "export_mode_table() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.export_mode_table"]], "load_geometry() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.load_geometry"]], "load_shapes() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.load_shapes"]], "paint_markers() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.paint_markers"]], "plot_mac() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.plot_mac"]], "plot_shapes() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.plot_shapes"]], "refind_peaks() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.refind_peaks"]], "save_shapes() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.save_shapes"]], "update_coefficient_and_refind() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_coefficient_and_refind"]], "update_crosshairs() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_crosshairs"]], "update_frequency_line_label() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_frequency_line_label"]], "update_initial_rootlist_tab() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_initial_rootlist_tab"]], "update_rootlist_table() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_rootlist_table"]], "update_selector_and_refind() (smac_gui method)": [[207, "sdynpy.modal.sdynpy_smac.SMAC_GUI.update_selector_and_refind"]], "correlation_coefficient() (in module sdynpy.modal.sdynpy_smac)": [[208, "sdynpy.modal.sdynpy_smac.correlation_coefficient"]], "sdynpy.signal_processing": [[209, "module-sdynpy.signal_processing"]], "sdynpy.signal_processing.sdynpy_camera": [[210, "module-sdynpy.signal_processing.sdynpy_camera"]], "calibration_linear_estimate() (in module sdynpy.signal_processing.sdynpy_camera)": [[211, "sdynpy.signal_processing.sdynpy_camera.calibration_linear_estimate"]], "camera_derivative_matrix() (in module sdynpy.signal_processing.sdynpy_camera)": [[212, "sdynpy.signal_processing.sdynpy_camera.camera_derivative_matrix"]], "camera_matrix_from_image() (in module sdynpy.signal_processing.sdynpy_camera)": [[213, "sdynpy.signal_processing.sdynpy_camera.camera_matrix_from_image"]], "compute_pixel_displacement() (in module sdynpy.signal_processing.sdynpy_camera)": [[214, "sdynpy.signal_processing.sdynpy_camera.compute_pixel_displacement"]], "compute_pixel_position() (in module sdynpy.signal_processing.sdynpy_camera)": [[215, "sdynpy.signal_processing.sdynpy_camera.compute_pixel_position"]], "decomposep() (in module sdynpy.signal_processing.sdynpy_camera)": [[216, "sdynpy.signal_processing.sdynpy_camera.decomposeP"]], "distort_points() (in module sdynpy.signal_processing.sdynpy_camera)": [[217, "sdynpy.signal_processing.sdynpy_camera.distort_points"]], "homogeneous_coordinates() (in module sdynpy.signal_processing.sdynpy_camera)": [[218, "sdynpy.signal_processing.sdynpy_camera.homogeneous_coordinates"]], "optimize_calibration() (in module sdynpy.signal_processing.sdynpy_camera)": [[219, "sdynpy.signal_processing.sdynpy_camera.optimize_calibration"]], "point_on_pixel() (in module sdynpy.signal_processing.sdynpy_camera)": [[220, "sdynpy.signal_processing.sdynpy_camera.point_on_pixel"]], "reconstruct_scene_from_calibration_parameters() (in module sdynpy.signal_processing.sdynpy_camera)": [[221, "sdynpy.signal_processing.sdynpy_camera.reconstruct_scene_from_calibration_parameters"]], "unhomogeneous_coordinates() (in module sdynpy.signal_processing.sdynpy_camera)": [[222, "sdynpy.signal_processing.sdynpy_camera.unhomogeneous_coordinates"]], "sdynpy.signal_processing.sdynpy_complex": [[223, "module-sdynpy.signal_processing.sdynpy_complex"]], "collapse_complex_to_real() (in module sdynpy.signal_processing.sdynpy_complex)": [[224, "sdynpy.signal_processing.sdynpy_complex.collapse_complex_to_real"]], "sdynpy.signal_processing.sdynpy_correlation": [[225, "module-sdynpy.signal_processing.sdynpy_correlation"]], "frac() (in module sdynpy.signal_processing.sdynpy_correlation)": [[226, "sdynpy.signal_processing.sdynpy_correlation.frac"]], "mac() (in module sdynpy.signal_processing.sdynpy_correlation)": [[227, "sdynpy.signal_processing.sdynpy_correlation.mac"]], "matrix_plot() (in module sdynpy.signal_processing.sdynpy_correlation)": [[228, "sdynpy.signal_processing.sdynpy_correlation.matrix_plot"]], "msf() (in module sdynpy.signal_processing.sdynpy_correlation)": [[229, "sdynpy.signal_processing.sdynpy_correlation.msf"]], "orthog() (in module sdynpy.signal_processing.sdynpy_correlation)": [[230, "sdynpy.signal_processing.sdynpy_correlation.orthog"]], "trac() (in module sdynpy.signal_processing.sdynpy_correlation)": [[231, "sdynpy.signal_processing.sdynpy_correlation.trac"]], "sdynpy.signal_processing.sdynpy_cpsd": [[232, "module-sdynpy.signal_processing.sdynpy_cpsd"]], "cpsd() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[233, "sdynpy.signal_processing.sdynpy_cpsd.cpsd"]], "cpsd_autospectra() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[234, "sdynpy.signal_processing.sdynpy_cpsd.cpsd_autospectra"]], "cpsd_coherence() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[235, "sdynpy.signal_processing.sdynpy_cpsd.cpsd_coherence"]], "cpsd_from_coh_phs() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[236, "sdynpy.signal_processing.sdynpy_cpsd.cpsd_from_coh_phs"]], "cpsd_phase() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[237, "sdynpy.signal_processing.sdynpy_cpsd.cpsd_phase"]], "cpsd_to_time_history() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[238, "sdynpy.signal_processing.sdynpy_cpsd.cpsd_to_time_history"]], "db_pow() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[239, "sdynpy.signal_processing.sdynpy_cpsd.dB_pow"]], "db2scale() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[240, "sdynpy.signal_processing.sdynpy_cpsd.db2scale"]], "match_coherence_phase() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[241, "sdynpy.signal_processing.sdynpy_cpsd.match_coherence_phase"]], "plot_asds() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[242, "sdynpy.signal_processing.sdynpy_cpsd.plot_asds"]], "plot_cpsd_error() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[243, "sdynpy.signal_processing.sdynpy_cpsd.plot_cpsd_error"]], "rms() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[244, "sdynpy.signal_processing.sdynpy_cpsd.rms"]], "rms_csd() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[245, "sdynpy.signal_processing.sdynpy_cpsd.rms_csd"]], "shaped_psd() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[246, "sdynpy.signal_processing.sdynpy_cpsd.shaped_psd"]], "trace() (in module sdynpy.signal_processing.sdynpy_cpsd)": [[247, "sdynpy.signal_processing.sdynpy_cpsd.trace"]], "sdynpy.signal_processing.sdynpy_frf": [[248, "module-sdynpy.signal_processing.sdynpy_frf"]], "delay_signal() (in module sdynpy.signal_processing.sdynpy_frf)": [[249, "sdynpy.signal_processing.sdynpy_frf.delay_signal"]], "fft2frf() (in module sdynpy.signal_processing.sdynpy_frf)": [[250, "sdynpy.signal_processing.sdynpy_frf.fft2frf"]], "modes2frf() (in module sdynpy.signal_processing.sdynpy_frf)": [[251, "sdynpy.signal_processing.sdynpy_frf.modes2frf"]], "plot() (in module sdynpy.signal_processing.sdynpy_frf)": [[252, "sdynpy.signal_processing.sdynpy_frf.plot"]], "sysmat2frf() (in module sdynpy.signal_processing.sdynpy_frf)": [[253, "sdynpy.signal_processing.sdynpy_frf.sysmat2frf"]], "timedata2frf() (in module sdynpy.signal_processing.sdynpy_frf)": [[254, "sdynpy.signal_processing.sdynpy_frf.timedata2frf"]], "sdynpy.signal_processing.sdynpy_frf_inverse": [[255, "module-sdynpy.signal_processing.sdynpy_frf_inverse"]], "compute_tikhonov_modified_singular_values() (in module sdynpy.signal_processing.sdynpy_frf_inverse)": [[256, "sdynpy.signal_processing.sdynpy_frf_inverse.compute_tikhonov_modified_singular_values"]], "frf_inverse() (in module sdynpy.signal_processing.sdynpy_frf_inverse)": [[257, "sdynpy.signal_processing.sdynpy_frf_inverse.frf_inverse"]], "pinv_by_tikhonov() (in module sdynpy.signal_processing.sdynpy_frf_inverse)": [[258, "sdynpy.signal_processing.sdynpy_frf_inverse.pinv_by_tikhonov"]], "pinv_by_truncation() (in module sdynpy.signal_processing.sdynpy_frf_inverse)": [[259, "sdynpy.signal_processing.sdynpy_frf_inverse.pinv_by_truncation"]], "sdynpy.signal_processing.sdynpy_generator": [[260, "module-sdynpy.signal_processing.sdynpy_generator"]], "burst_random() (in module sdynpy.signal_processing.sdynpy_generator)": [[261, "sdynpy.signal_processing.sdynpy_generator.burst_random"]], "chirp() (in module sdynpy.signal_processing.sdynpy_generator)": [[262, "sdynpy.signal_processing.sdynpy_generator.chirp"]], "pseudorandom() (in module sdynpy.signal_processing.sdynpy_generator)": [[263, "sdynpy.signal_processing.sdynpy_generator.pseudorandom"]], "pulse() (in module sdynpy.signal_processing.sdynpy_generator)": [[264, "sdynpy.signal_processing.sdynpy_generator.pulse"]], "ramp_envelope() (in module sdynpy.signal_processing.sdynpy_generator)": [[265, "sdynpy.signal_processing.sdynpy_generator.ramp_envelope"]], "random() (in module sdynpy.signal_processing.sdynpy_generator)": [[266, "sdynpy.signal_processing.sdynpy_generator.random"]], "sine() (in module sdynpy.signal_processing.sdynpy_generator)": [[267, "sdynpy.signal_processing.sdynpy_generator.sine"]], "sdynpy.signal_processing.sdynpy_geometry_fitting": [[268, "module-sdynpy.signal_processing.sdynpy_geometry_fitting"]], "cone_error_fn_fixed_angle() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[269, "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_fixed_angle"]], "cone_error_fn_free_angle() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[270, "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_error_fn_free_angle"]], "cone_fit() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[271, "sdynpy.signal_processing.sdynpy_geometry_fitting.cone_fit"]], "create_cone() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[272, "sdynpy.signal_processing.sdynpy_geometry_fitting.create_cone"]], "cylinder_fit() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[273, "sdynpy.signal_processing.sdynpy_geometry_fitting.cylinder_fit"]], "distance_point_line() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[274, "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_line"]], "distance_point_plane() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[275, "sdynpy.signal_processing.sdynpy_geometry_fitting.distance_point_plane"]], "fit_cone_fixed_angle() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[276, "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cone_fixed_angle"]], "fit_cylinder() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[277, "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_cylinder"]], "fit_line_point_cloud() (in module sdynpy.signal_processing.sdynpy_geometry_fitting)": [[278, "sdynpy.signal_processing.sdynpy_geometry_fitting.fit_line_point_cloud"]], "sdynpy.signal_processing.sdynpy_harmonic": [[279, "module-sdynpy.signal_processing.sdynpy_harmonic"]], "harmonic_mag_phase() (in module sdynpy.signal_processing.sdynpy_harmonic)": [[280, "sdynpy.signal_processing.sdynpy_harmonic.harmonic_mag_phase"]], "sdynpy.signal_processing.sdynpy_integration": [[281, "module-sdynpy.signal_processing.sdynpy_integration"]], "mck_incomplete_to_statespace() (in module sdynpy.signal_processing.sdynpy_integration)": [[282, "sdynpy.signal_processing.sdynpy_integration.MCK_incomplete_to_StateSpace"]], "mck_to_statespace() (in module sdynpy.signal_processing.sdynpy_integration)": [[283, "sdynpy.signal_processing.sdynpy_integration.MCK_to_StateSpace"]], "frequency_domain_differentiation() (in module sdynpy.signal_processing.sdynpy_integration)": [[284, "sdynpy.signal_processing.sdynpy_integration.frequency_domain_differentiation"]], "integrate_mck() (in module sdynpy.signal_processing.sdynpy_integration)": [[285, "sdynpy.signal_processing.sdynpy_integration.integrate_MCK"]], "integrate_modes() (in module sdynpy.signal_processing.sdynpy_integration)": [[286, "sdynpy.signal_processing.sdynpy_integration.integrate_modes"]], "modal_parameters_to_mck() (in module sdynpy.signal_processing.sdynpy_integration)": [[287, "sdynpy.signal_processing.sdynpy_integration.modal_parameters_to_MCK"]], "sdynpy.signal_processing.sdynpy_rotation": [[288, "module-sdynpy.signal_processing.sdynpy_rotation"]], "r() (in module sdynpy.signal_processing.sdynpy_rotation)": [[289, "sdynpy.signal_processing.sdynpy_rotation.R"]], "cross_mat() (in module sdynpy.signal_processing.sdynpy_rotation)": [[290, "sdynpy.signal_processing.sdynpy_rotation.cross_mat"]], "cross_mat_vectorized() (in module sdynpy.signal_processing.sdynpy_rotation)": [[291, "sdynpy.signal_processing.sdynpy_rotation.cross_mat_vectorized"]], "lstsq_rigid_transform() (in module sdynpy.signal_processing.sdynpy_rotation)": [[292, "sdynpy.signal_processing.sdynpy_rotation.lstsq_rigid_transform"]], "matrix_to_rodrigues() (in module sdynpy.signal_processing.sdynpy_rotation)": [[293, "sdynpy.signal_processing.sdynpy_rotation.matrix_to_rodrigues"]], "quaternion_to_rotation_matrix() (in module sdynpy.signal_processing.sdynpy_rotation)": [[294, "sdynpy.signal_processing.sdynpy_rotation.quaternion_to_rotation_matrix"]], "rodrigues_to_matrix() (in module sdynpy.signal_processing.sdynpy_rotation)": [[295, "sdynpy.signal_processing.sdynpy_rotation.rodrigues_to_matrix"]], "sdynpy.signal_processing.sdynpy_srs": [[296, "module-sdynpy.signal_processing.sdynpy_srs"]], "loginterp() (in module sdynpy.signal_processing.sdynpy_srs)": [[297, "sdynpy.signal_processing.sdynpy_srs.loginterp"]], "octspace() (in module sdynpy.signal_processing.sdynpy_srs)": [[298, "sdynpy.signal_processing.sdynpy_srs.octspace"]], "optimization_callback() (in module sdynpy.signal_processing.sdynpy_srs)": [[299, "sdynpy.signal_processing.sdynpy_srs.optimization_callback"]], "optimization_error_function() (in module sdynpy.signal_processing.sdynpy_srs)": [[300, "sdynpy.signal_processing.sdynpy_srs.optimization_error_function"]], "sdof_filter() (in module sdynpy.signal_processing.sdynpy_srs)": [[301, "sdynpy.signal_processing.sdynpy_srs.sdof_filter"]], "sdof_free_decay_peak_response() (in module sdynpy.signal_processing.sdynpy_srs)": [[302, "sdynpy.signal_processing.sdynpy_srs.sdof_free_decay_peak_response"]], "sdof_ramp_invariant_filter_weights() (in module sdynpy.signal_processing.sdynpy_srs)": [[303, "sdynpy.signal_processing.sdynpy_srs.sdof_ramp_invariant_filter_weights"]], "srs() (in module sdynpy.signal_processing.sdynpy_srs)": [[304, "sdynpy.signal_processing.sdynpy_srs.srs"]], "sum_decayed_sines() (in module sdynpy.signal_processing.sdynpy_srs)": [[305, "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines"]], "sum_decayed_sines_compensating_pulse_parameters() (in module sdynpy.signal_processing.sdynpy_srs)": [[306, "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_compensating_pulse_parameters"]], "sum_decayed_sines_displacement_velocity() (in module sdynpy.signal_processing.sdynpy_srs)": [[307, "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_displacement_velocity"]], "sum_decayed_sines_minimize() (in module sdynpy.signal_processing.sdynpy_srs)": [[308, "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_minimize"]], "sum_decayed_sines_reconstruction() (in module sdynpy.signal_processing.sdynpy_srs)": [[309, "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_reconstruction"]], "sum_decayed_sines_reconstruction_with_compensation() (in module sdynpy.signal_processing.sdynpy_srs)": [[310, "sdynpy.signal_processing.sdynpy_srs.sum_decayed_sines_reconstruction_with_compensation"]]}})